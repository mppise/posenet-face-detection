/*! For license information please see 376.bundle.js.LICENSE.txt */
(self.webpackChunkposenet_face_detection=self.webpackChunkposenet_face_detection||[]).push([[376],{569:(t,e,n)=>{"use strict";var s=n(941),r=(n(214),function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)});function a(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var i=function(){return(i=Object.assign||function(t){for(var e,n=1,s=arguments.length;n<s;n++)for(var r in e=arguments[n])Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}).apply(this,arguments)};function o(t,e,n,s){return new(n||(n=Promise))((function(r,a){function i(t){try{l(s.next(t))}catch(t){a(t)}}function o(t){try{l(s.throw(t))}catch(t){a(t)}}function l(t){t.done?r(t.value):new n((function(e){e(t.value)})).then(i,o)}l((s=s.apply(t,e||[])).next())}))}function l(t,e){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}var u=function(){function t(t,e){this.model=t,this.outputStride=e;var n=this.model.inputs[0].shape;s.D5U.hu(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return t.prototype.predict=function(t){var e=this;return(0,s.lub)((function(){var n=e.preprocessInput(t.toFloat()).expandDims(0),s=e.model.predict(n).map((function(t){return t.squeeze([0])})),r=e.nameOutputResults(s);return{heatmapScores:r.heatmap.sigmoid(),offsets:r.offsets,displacementFwd:r.displacementFwd,displacementBwd:r.displacementBwd}}))},t.prototype.dispose=function(){this.model.dispose()},t}();function c(t){return Math.floor(t/2)}!function(t){function e(){return null!==t&&t.apply(this,arguments)||this}a(e,t),e.prototype.preprocessInput=function(t){return(0,s.lub)((function(){return(0,s.hiC)(t,127.5).sub(1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],heatmap:t[1],displacementFwd:t[2],displacementBwd:t[3]}}}(u);var h=function(){function t(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return t.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},t.prototype.empty=function(){return-1===this.numberOfElements},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(t){for(;t>0&&this.less(c(t),t);)this.exchange(t,c(t)),t=c(t)},t.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},t.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},t.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},t.prototype.exchange=function(t,e){var n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=n},t}();function d(t,e,n,s,r,a){for(var i=a.shape,o=i[0],l=i[1],u=!0,c=Math.max(n-r,0),h=Math.min(n+r+1,o),d=c;d<h;++d){for(var p=Math.max(s-r,0),f=Math.min(s+r+1,l),m=p;m<f;++m)if(a.get(d,m,t)>e){u=!1;break}if(!u)break}return u}var p=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],f=p.length,m=p.reduce((function(t,e,n){return t[e]=n,t}),{});function g(t,e,n,s){return{y:s.get(t,e,n),x:s.get(t,e,n+f)}}function b(t,e,n){var s=g(t.heatmapY,t.heatmapX,t.id,n),r=s.y,a=s.x;return{x:t.heatmapX*e+a,y:t.heatmapY*e+r}}function y(t,e,n){return t<e?e:t>n?n:t}function x(t,e){return{x:t.x+e.x,y:t.y+e.y}}[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(t){var e=t[0],n=t[1];return[m[e],m[n]]}));var w=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(t){var e=t[0],n=t[1];return[m[e],m[n]]})),v=w.map((function(t){return t[1]})),k=w.map((function(t){return t[0]}));function I(t,e,n,s){return{y:y(Math.round(t.y/e),0,n-1),x:y(Math.round(t.x/e),0,s-1)}}function C(t,e,n,s,r,a,i,o){void 0===o&&(o=2);for(var l=s.shape,u=l[0],c=l[1],h=function(t,e,n){var s=n.shape[2]/2;return{y:n.get(e.y,e.x,t),x:n.get(e.y,e.x,s+t)}}(t,I(e.position,a,u,c),i),d=x(e.position,h),f=0;f<o;f++){var m=I(d,a,u,c),b=g(m.y,m.x,n,r);d=x({x:m.x*a,y:m.y*a},{x:b.x,y:b.y})}var y=I(d,a,u,c),w=s.get(y.y,y.x,n);return{position:d,part:p[n],score:w}}function $(t,e,n,s,r,a){var i=e.shape[2],o=v.length,l=new Array(i),u=t.part,c=t.score,h=b(u,s,n);l[u.id]={score:c,part:p[u.id],position:h};for(var d=o-1;d>=0;--d){var f=v[d],m=k[d];l[f]&&!l[m]&&(l[m]=C(d,l[f],m,e,n,s,a))}for(d=0;d<o;++d)f=k[d],m=v[d],l[f]&&!l[m]&&(l[m]=C(d,l[f],m,e,n,s,r));return l}function S(t,e,n,s){var r=n.x,a=n.y;return t.some((function(t){var n=t.keypoints[s].position;return function(t,e,n,s){var r=n-t,a=s-e;return r*r+a*a}(a,r,n.y,n.x)<=e}))}function N(t,e,n){return n.reduce((function(n,s,r){var a=s.position,i=s.score;return S(t,e,a,r)||(n+=i),n}),0)/n.length}function E(t,e,n,s,r,a,i,o){void 0===i&&(i=.5),void 0===o&&(o=20);for(var l=[],u=function(t,e,n){for(var s=n.shape,r=s[0],a=s[1],i=s[2],o=new h(r*a*i,(function(t){return t.score})),l=0;l<r;++l)for(var u=0;u<a;++u)for(var c=0;c<i;++c){var p=n.get(l,u,c);p<t||d(c,p,l,u,1,n)&&o.enqueue({score:p,part:{heatmapY:l,heatmapX:u,id:c}})}return o}(i,0,t),c=o*o;l.length<a&&!u.empty();){var p=u.dequeue();if(!S(l,c,b(p.part,r,e),p.part.id)){var f=$(p,t,e,r,n,s),m=N(l,c,f);l.push({keypoints:f,score:m})}}return l}function R(t,e,n,s){return{y:s.get(t,e,n),x:s.get(t,e,n+f)}}function A(t,e,n){return(0,s.lub)((function(){var r=function(t,e){for(var n=[],r=0;r<f;r++){var a=R(t.get(r,0).valueOf(),t.get(r,1).valueOf(),r,e),i=a.x,o=a.y;n.push(o),n.push(i)}return(0,s.odF)(n,[f,2])}(t,n);return t.toTensor().mul((0,s.iD$)(e,"int32")).toFloat().add(r)}))}function D(t,e,n){return o(this,void 0,void 0,(function(){var r,a,i,o,u,c,h,d,f,m;return l(this,(function(l){switch(l.label){case 0:return r=0,a=function(t){var e=t.shape,n=e[0],r=e[1],a=e[2];return(0,s.lub)((function(){var e=t.reshape([n*r,a]).argMax(0),i=e.div((0,s.iD$)(r,"int32")).expandDims(1),o=function(t,e){return(0,s.lub)((function(){var n=t.div((0,s.iD$)(e,"int32"));return t.sub(n.mul((0,s.iD$)(e,"int32")))}))}(e,r).expandDims(1);return(0,s.zoF)([i,o],1)}))}(t),[4,Promise.all([t.buffer(),e.buffer(),a.buffer()])];case 1:return i=l.sent(),o=i[0],u=i[1],c=i[2],[4,(h=A(c,n,u)).buffer()];case 2:return d=l.sent(),f=Array.from(function(t,e){for(var n=e.shape[0],s=new Float32Array(n),r=0;r<n;r++){var a=e.get(r,0),i=e.get(r,1);s[r]=t.get(a,i,r)}return s}(o,c)),m=f.map((function(t,e){return r+=t,{position:{y:d.get(e,0),x:d.get(e,1)},part:p[e],score:t}})),a.dispose(),h.dispose(),[2,{keypoints:m,score:r/m.length}]}}))}))}var T=[-123.15,-115.9,-103.06];function F(t){return o(this,void 0,void 0,(function(){return l(this,(function(e){return[2,Promise.all(t.map((function(t){return t.buffer()})))]}))}))}!function(t){function e(){return null!==t&&t.apply(this,arguments)||this}a(e,t),e.prototype.preprocessInput=function(t){return t.add(T)},e.prototype.nameOutputResults=function(t){var e=t[0],n=t[1];return{offsets:t[2],heatmap:t[3],displacementFwd:e,displacementBwd:n}}}(u),Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY;var O=[8,16,32];function _(t,e){return(t-1)%e==0}function M(t){return t instanceof s.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}function B(t,e){var n=e[0],r=e[1],a=M(t),i=a[0],o=a[1],l=r/n,u=[0,0,0,0],c=u[0],h=u[1],d=u[2],p=u[3];return o/i<l?(c=0,h=0,d=Math.round(.5*(l*i-o)),p=Math.round(.5*(l*i-o))):(c=Math.round(.5*(1/l*o-i)),h=Math.round(.5*(1/l*o-i)),d=0,p=0),{resized:(0,s.lub)((function(){var e=function(t){return t instanceof s.esB?t:s.Xhn.n(t)}(t);return(e=(0,s.t1L)(e,[[c,h],[d,p],[0,0]])).resizeBilinear([n,r])})),padding:{top:c,left:d,right:p,bottom:h}}}function L(t,e,n,s,r){var a=e[0],i=e[1],o=n[0],l=n[1],u=function(t,e,n,s,r){return void 0===s&&(s=0),void 0===r&&(r=0),1===n&&1===e&&0===s&&0===r?t:t.map((function(t){return function(t,e,n,s,r){return void 0===s&&(s=0),void 0===r&&(r=0),{score:t.score,keypoints:t.keypoints.map((function(t){var a=t.score,i=t.part,o=t.position;return{score:a,part:i,position:{x:o.x*n+r,y:o.y*e+s}}}))}}(t,e,n,s,r)}))}(t,(a+s.top+s.bottom)/o,(i+s.left+s.right)/l,-s.top,-s.left);return r?function(t,e){return e<=0?t:t.map((function(t){return function(t,e){return{score:t.score,keypoints:t.keypoints.map((function(t){var n=t.score,s=t.part,r=t.position;return{score:n,part:s,position:{x:e-1-r.x,y:r.y}}}))}}(t,e)}))}(u,i):u}var z={flipHorizontal:!1},W={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};!function(){function t(t,e){(function(t){s.D5U.hu("number"==typeof t,(function(){return"outputStride is not a number"})),s.D5U.hu(O.indexOf(t)>=0,(function(){return"outputStride of "+t+" is invalid. It must be either 8, 16, or 32"}))})(t.outputStride),function(t,e){s.D5U.hu("number"==typeof t[0]&&"number"==typeof t[1],(function(){return"both resolution values must be a number but had values "+t})),s.D5U.hu(_(t[0],e),(function(){return"height of "+t[0]+" is invalid for output stride "+e+"."})),s.D5U.hu(_(t[1],e),(function(){return"width of "+t[1]+" is invalid for output stride "+e+"."}))}(e,t.outputStride),this.baseModel=t,this.inputResolution=e}t.prototype.estimateMultiplePoses=function(t,e){return void 0===e&&(e=W),o(this,void 0,void 0,(function(){var n,s,r,a,o,u,c,h,d,p,f,m,g,b,y,x,w,v,k,I,C;return l(this,(function(l){switch(l.label){case 0:return n=i({},W,e),function(t){var e=t.maxDetections,n=t.scoreThreshold,s=t.nmsRadius;if(e<=0)throw new Error("Invalid maxDetections "+e+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}(e),s=this.baseModel.outputStride,r=this.inputResolution,a=M(t),o=a[0],u=a[1],c=B(t,r),h=c.resized,d=c.padding,p=this.baseModel.predict(h),f=p.heatmapScores,m=p.offsets,g=p.displacementFwd,b=p.displacementBwd,[4,F([f,m,g,b])];case 1:return y=l.sent(),x=y[0],w=y[1],v=y[2],k=y[3],[4,E(x,w,v,k,s,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return I=l.sent(),C=L(I,[o,u],r,d,n.flipHorizontal),f.dispose(),m.dispose(),g.dispose(),b.dispose(),h.dispose(),[2,C]}}))}))},t.prototype.estimateSinglePose=function(t,e){return void 0===e&&(e=z),o(this,void 0,void 0,(function(){var n,s,r,a,o,u,c,h,d,p,f,m,g,b,y,x;return l(this,(function(l){switch(l.label){case 0:return n=i({},z,e),s=this.baseModel.outputStride,r=this.inputResolution,a=M(t),o=a[0],u=a[1],c=B(t,r),h=c.resized,d=c.padding,p=this.baseModel.predict(h),f=p.heatmapScores,m=p.offsets,g=p.displacementFwd,b=p.displacementBwd,[4,D(f,m,s)];case 1:return y=l.sent(),x=L([y],[o,u],r,d,n.flipHorizontal),f.dispose(),m.dispose(),g.dispose(),b.dispose(),h.dispose(),[2,x[0]]}}))}))},t.prototype.estimatePoses=function(t,e){return o(this,void 0,void 0,(function(){return l(this,(function(n){switch(n.label){case 0:return"single-person"!==e.decodingMethod?[3,2]:[4,this.estimateSinglePose(t,e)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(t,e)]}}))}))},t.prototype.dispose=function(){this.baseModel.dispose()}}()},214:(t,e,n)=>{"use strict";var s,r;n.d(e,{gJ:()=>a}),n(941),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(s||(s={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(r||(r={}));const a="2.7.0"},941:(t,e,n)=>{"use strict";n.d(e,{SYM:()=>it,VGw:()=>ot,SpW:()=>lt,mm_:()=>ut,M2y:()=>dt,qw7:()=>pt,jMg:()=>ft,QCc:()=>gt,Oyi:()=>mt,JhU:()=>bt,xts:()=>yt,XLW:()=>wt,RFZ:()=>It,gJX:()=>Ct,xnO:()=>$t,Zz9:()=>St,Eh3:()=>Nt,mhS:()=>Et,wUP:()=>Rt,wm:()=>At,x12:()=>Dt,o2y:()=>Tt,ik2:()=>Ft,mc4:()=>Ot,TR1:()=>_t,JLz:()=>f,cie:()=>Bt,sL$:()=>Lt,y7R:()=>zt,p4S:()=>Wt,Vn9:()=>Pt,ekb:()=>Ut,ZCY:()=>Vt,SX0:()=>Gt,Omj:()=>Ht,NEP:()=>jt,Y0y:()=>qt,vwp:()=>Kt,deh:()=>Xt,Uyb:()=>Yt,OR:()=>Jt,eBW:()=>dn,sHE:()=>Zt,_V0:()=>mn,luS:()=>gn,Qg5:()=>se,iJz:()=>ne,J_u:()=>re,avt:()=>ae,iWB:()=>ie,r7n:()=>oe,Zuw:()=>m,ZbH:()=>le,kU:()=>ue,VfG:()=>ce,YoZ:()=>de,mTV:()=>fe,GvW:()=>me,vFR:()=>be,q2K:()=>ye,jQs:()=>we,wYn:()=>ve,uv1:()=>Ce,cye:()=>$e,W0H:()=>Se,yQU:()=>Ie,gaJ:()=>_r,lyA:()=>Re,o0g:()=>Ae,xJR:()=>De,$HU:()=>Te,qkr:()=>Fe,SbG:()=>Be,HZH:()=>Oe,b9H:()=>pn,e07:()=>ze,bV0:()=>We,oFR:()=>Pe,a5O:()=>qe,i5y:()=>je,RQH:()=>Ge,wYB:()=>He,p2w:()=>Ve,MRv:()=>Ke,TQc:()=>Ye,FKq:()=>Xe,bK0:()=>tn,_tC:()=>Ze,h8e:()=>hn,Tr8:()=>en,sEM:()=>nn,MIZ:()=>sn,esB:()=>Pn,YDk:()=>Ln,G3Y:()=>an,kpP:()=>on,usg:()=>fn,WnP:()=>Mr,IHx:()=>Br,$6P:()=>Kr,YjB:()=>Xr,NqF:()=>Yr,wS1:()=>ca,uR5:()=>ha,y3$:()=>Tr,Wap:()=>d,Dxk:()=>fa,JY5:()=>ma,p3b:()=>ga,Xhn:()=>o,f3b:()=>Us,pju:()=>Ks,iUl:()=>ba,zoF:()=>va,gME:()=>ka,Izb:()=>Ia,MNy:()=>Ca,ZaL:()=>$a,PAt:()=>Na,Tek:()=>Sa,bc:()=>Ra,pdZ:()=>Aa,B10:()=>Da,C2$:()=>a,B90:()=>Rr,hiC:()=>Fa,rvX:()=>io,pyx:()=>Oa,SRH:()=>Sr,OBj:()=>et,DgJ:()=>La,Qqt:()=>za,dt4:()=>Wa,iyy:()=>Pa,hlL:()=>Va,GWj:()=>Ga,imm:()=>h,Iqj:()=>Ya,pjt:()=>Ja,brS:()=>Qa,io:()=>i,CnY:()=>Ar,GDt:()=>p,hi7:()=>ei,$r2:()=>Yo,cM7:()=>ni,CmS:()=>ii,HvI:()=>oi,Fp7:()=>si,_sB:()=>li,YQQ:()=>ui,gWQ:()=>Za,J69:()=>pi,sq6:()=>Nr,VV$:()=>fi,LTh:()=>mi,Gi7:()=>bi,dC7:()=>ti,W76:()=>yi,glt:()=>ol,Quu:()=>xi,lfX:()=>wi,iUs:()=>di,JpU:()=>Ci,vku:()=>$i,t1L:()=>Si,AL3:()=>Ni,nGf:()=>Di,LGj:()=>Ti,w6H:()=>Oi,jqO:()=>Dr,wCN:()=>kn,UYe:()=>_i,XLQ:()=>jr,GYS:()=>Mi,iD$:()=>Or,U8D:()=>Bi,U_I:()=>Li,m7h:()=>u,XD2:()=>zi,tPi:()=>Wi,jZU:()=>Ui,SmN:()=>Pi,CnO:()=>Vi,p0P:()=>Gi,kuN:()=>l,XAC:()=>Hi,Wvh:()=>ji,Vl2:()=>Ki,_b3:()=>Xi,L9e:()=>Yi,knu:()=>Ji,luU:()=>ri,Smz:()=>ai,z4k:()=>Jn,AEp:()=>Qi,XeE:()=>wa,RRF:()=>Fi,odF:()=>Zi,yXz:()=>to,piX:()=>r,lub:()=>Er,Gg6:()=>Ua,p_j:()=>al,p4s:()=>qr,Xu6:()=>eo,HHK:()=>no,x8V:()=>Yn,D5U:()=>s,VD$:()=>so,jTM:()=>Cr,arb:()=>ao,lls:()=>hi,P84:()=>Ii});var s={};n.r(s),n.d(s,{cO:()=>S,hu:()=>v,bT:()=>L,e3:()=>G,hr:()=>Fn,v5:()=>Bn,YW:()=>Mn,xH:()=>C,rQ:()=>_,WP:()=>O,QB:()=>M,NE:()=>Q,D2:()=>U,JZ:()=>D,GN:()=>N,hj:()=>W,HD:()=>z,fU:()=>B,qy:()=>J,l6:()=>X,nY:()=>x,zO:()=>_n,EC:()=>T,WD:()=>A,oj:()=>R,TV:()=>b,NA:()=>$,YP:()=>E,bp:()=>F,Sm:()=>w,GX:()=>j,Os:()=>On});var r={};n.r(r),n.d(r,{Vu:()=>ts,BC:()=>Zn,T_:()=>Qn});var a={};n.r(a),n.d(a,{j:()=>ls,t:()=>os});var i={};n.r(i),n.d(i,{JY:()=>fs,yz:()=>cs,yB:()=>bs});var o={};n.r(o),n.d(o,{n:()=>ar});var l={};n.r(l),n.d(l,{assertParamsValid:()=>ir,computeFlatOffset:()=>xr,computeOutShape:()=>lr,getNormalizedAxes:()=>dr,isSliceContinous:()=>yr,maskToAxes:()=>or,parseSliceParams:()=>wr,startForAxis:()=>gr,startIndicesWithElidedDims:()=>pr,stopForAxis:()=>br,stopIndicesWithElidedDims:()=>fr,stridesForAxis:()=>mr,stridesWithElidedDims:()=>ur});var u={};n.r(u),n.d(u,{iV:()=>vr,U3:()=>kr,ax:()=>Ir});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>Xa,computeOutShape:()=>Ka,segOpComputeOptimalWindowSize:()=>qa});var h={};n.r(h),n.d(h,{Te:()=>xo,OI:()=>vo});var d={};n.r(d),n.d(d,{ERF_A1:()=>vl,ERF_A2:()=>kl,ERF_A3:()=>Il,ERF_A4:()=>Cl,ERF_A5:()=>$l,ERF_P:()=>wl,PARALLELIZE_THRESHOLD:()=>Ha,SELU_SCALE:()=>xl,SELU_SCALEALPHA:()=>yl,applyActivation:()=>bo,assertAndGetBroadcastShape:()=>Ba,assertAxesAreInnerMostDims:()=>Pr,assertParamsConsistent:()=>ya,assignToTypedArray:()=>Fl,axesAreInnerMostDims:()=>Lr,calculateShapes:()=>bl,castTensor:()=>Ml,combineLocations:()=>zr,complexWithEvenIndex:()=>Al,complexWithOddIndex:()=>Dl,computeConv2DInfo:()=>ta,computeConv3DInfo:()=>ea,computeDefaultPad:()=>na,computeDilation2DInfo:()=>Jr,computeOptimalWindowSize:()=>ja,computeOutAndReduceShapes:()=>Wr,computeOutShape:()=>xa,computePool2DInfo:()=>Qr,computePool3DInfo:()=>Zr,convertConv2DDataFormat:()=>ua,eitherStridesOrDilationsAreOne:()=>la,expandShapeToKeepDim:()=>Ur,exponent:()=>_l,exponents:()=>Ol,getAxesPermutation:()=>Vr,getBroadcastDims:()=>_a,getComplexWithIndex:()=>Tl,getFusedBiasGradient:()=>go,getFusedDyActivation:()=>mo,getImageCenter:()=>ll,getInnerMostAxes:()=>Hr,getPermuted:()=>cl,getReductionAxes:()=>Ma,getReshaped:()=>ul,getReshapedPermuted:()=>hl,getSliceBeginCoords:()=>dl,getSliceSize:()=>pl,getUndoAxesPermutation:()=>Gr,linspaceImpl:()=>Ll,log:()=>Nl,mergeRealAndImagArrays:()=>El,prepareAndValidate:()=>fl,prepareSplitSize:()=>qi,reshapeTensor:()=>Bl,segment_util:()=>c,shouldFuse:()=>yo,slice_util:()=>l,splitRealAndImagArrays:()=>Rl,tupleValuesAreOne:()=>oa,upcastType:()=>Yn,validateInput:()=>gl,validateUpdateShape:()=>ml,warn:()=>Sl});var p={};n.r(p),n.d(p,{GP:()=>Eo,qP:()=>Ro,pA:()=>Ao,Vl:()=>zl,Gg:()=>Wl,vN:()=>Ul,ZA:()=>Pl});class f{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class m{time(t){return g("time")}read(t){return g("read")}readSync(t){return g("readSync")}numDataIds(){return g("numDataIds")}disposeData(t){return g("disposeData")}write(t,e,n){return g("write")}move(t,e,n,s){return g("move")}memory(){return g("memory")}floatPrecision(){return g("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,s){return g("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:r,activation:a,preluActivationWeights:i}){return g("fusedBatchMatMul")}slice(t,e,n){return g("slice")}stridedSlice(t,e,n,s){return g("stridedSlice")}unstack(t,e){return g("unstack")}reverse(t,e){return g("reverse")}concat(t,e){return g("concat")}neg(t){return g("neg")}add(t,e){return g("add")}addN(t){return g("addN")}subtract(t,e){return g("subtract")}multiply(t,e){return g("multiply")}realDivide(t,e){return g("realDivide")}floorDiv(t,e){return g("floorDiv")}sum(t,e){return g("sum")}prod(t,e){return g("prod")}unsortedSegmentSum(t,e,n){return g("unsortedSegmentSum")}argMin(t,e){return g("argMin")}argMax(t,e){return g("argMax")}equal(t,e){return g("equal")}notEqual(t,e){return g("notEqual")}less(t,e){return g("less")}lessEqual(t,e){return g("lessEqual")}greater(t,e){return g("greater")}greaterEqual(t,e){return g("greaterEqual")}logicalNot(t){return g("logicalNot")}logicalAnd(t,e){return g("logicalAnd")}logicalOr(t,e){return g("logicalOr")}where(t){return g("where")}select(t,e,n){return g("select")}topk(t,e,n){return g("topk")}min(t,e){return g("min")}minimum(t,e){return g("minimum")}mod(t,e){return g("mod")}max(t,e){return g("max")}maximum(t,e){return g("maximum")}all(t,e){return g("all")}any(t,e){return g("any")}squaredDifference(t,e){return g("squaredDifference")}ceil(t){return g("ceil")}floor(t){return g("floor")}round(t){return g("round")}sign(t){return g("sign")}isNaN(t){return g("isNaN")}isInf(t){return g("isInf")}isFinite(t){return g("isFinite")}pow(t,e){return g("pow")}exp(t){return g("exp")}expm1(t){return g("expm1")}softmax(t,e){return g("softmax")}log(t){return g("log")}log1p(t){return g("log1p")}sqrt(t){return g("sqrt")}rsqrt(t){return g("rsqrt")}square(t){return g("square")}reciprocal(t){return g("reciprocal")}relu(t){return g("relu")}relu6(t){return g("relu6")}prelu(t,e){return g("prelu")}elu(t){return g("elu")}eluDer(t,e){return g("eluDer")}selu(t){return g("selu")}int(t){return g("int")}clip(t,e,n){return g("clip")}abs(t){return g("abs")}complexAbs(t){return g("complexAbs")}sigmoid(t){return g("sigmoid")}softplus(t){return g("softplus")}sin(t){return g("sin")}cos(t){return g("cos")}tan(t){return g("tan")}asin(t){return g("asin")}acos(t){return g("acos")}atan(t){return g("atan")}atan2(t,e){return g("atan2")}sinh(t){return g("sinh")}cosh(t){return g("cosh")}tanh(t){return g("tanh")}asinh(t){return g("asinh")}acosh(t){return g("acosh")}atanh(t){return g("atanh")}erf(t){return g("erf")}step(t,e){return g("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:a}){return g("fusedConv2d")}conv2d(t,e,n){return g("conv2d")}conv2dDerInput(t,e,n){return g("conv2dDerInput")}conv2dDerFilter(t,e,n){return g("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:r,preluActivationWeights:a}){return g("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return g("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return g("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return g("depthwiseConv2DDerFilter")}conv3d(t,e,n){return g("conv3d")}conv3dDerInput(t,e,n){return g("conv3dDerInput")}conv3dDerFilter(t,e,n){return g("conv3dDerFilter")}maxPool(t,e){return g("maxPool")}maxPoolBackprop(t,e,n,s){return g("maxPoolBackprop")}avgPool(t,e){return g("avgPool")}avgPoolBackprop(t,e,n){return g("avgPoolBackprop")}avgPool3d(t,e){return g("avgPool3d")}avgPool3dBackprop(t,e,n){return g("avgPool3dBackprop")}maxPool3d(t,e){return g("maxPool3d")}maxPool3dBackprop(t,e,n,s){return g("maxPool3dBackprop")}reshape(t,e){return g("reshape")}cast(t,e){return g("cast")}tile(t,e){return g("tile")}pad(t,e,n){return g("pad")}transpose(t,e){return g("transpose")}gather(t,e,n){return g("gather")}gatherND(t,e){return g("gatherND")}scatterND(t,e,n){return g("scatterND")}batchToSpaceND(t,e,n){return g("batchToSpaceND")}spaceToBatchND(t,e,n){return g("spaceToBatchND")}resizeBilinear(t,e,n,s){return g("resizeBilinear")}resizeBilinearBackprop(t,e,n){return g("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,s){return g("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return g("resizeNearestNeighborBackprop")}batchNorm(t,e,n,s,r,a){return g("batchNorm")}localResponseNormalization4D(t,e,n,s,r){return g("localResponseNormalization4D")}LRNGrad(t,e,n,s,r,a,i){return g("LRNGrad")}multinomial(t,e,n,s){return g("multinomial")}oneHot(t,e,n,s){return g("oneHot")}cumsum(t,e,n,s){return g("cumsum")}nonMaxSuppression(t,e,n,s,r){return g("nonMaxSuppression")}fft(t){return g("fft")}ifft(t){return g("ifft")}complex(t,e){return g("complex")}real(t){return g("real")}imag(t){return g("imag")}cropAndResize(t,e,n,s,r,a){return g("cropAndResize")}depthToSpace(t,e,n){return g("depthToSpace")}split(t,e,n){return g("split")}sparseToDense(t,e,n,s){return g("sparseToDense")}diag(t){return g("diag")}fill(t,e,n){return g("fill")}onesLike(t){return g("onesLike")}zerosLike(t){return g("zerosLike")}linspace(t,e,n){return g("linspace")}dispose(){return g("dispose")}}function g(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function b(t){let e=t.length,n=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,n=t[e],t[e]=t[s],t[s]=n}function y(t,e,n){return Math.max(t,Math.min(e,n))}function x(t){return t%2==0?t:t+1}function w(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function v(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function k(t,e,n=""){v(S(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function I(t){v(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function C(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||B(t)&&!n)for(let s=0;s<t.length;++s)C(t[s],e,n);else e.push(t);return e}function $(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function S(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function N(t){return t%1==0}function E(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function R(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function A(t,e=(t=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(t())return void s();a++;const o=e(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function D(t,e){let n=1,s=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${e}`);s=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===s){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const r=t.slice();return r[s]=e/n,r}function T(t,e){const n=e.length;return v((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),v(t.every((t=>N(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function F(t,e){const n=[],s=[],r=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||r?null:T(e,t).sort();let i=0;for(let e=0;e<t.length;++e){if(null!=a){if(a[i]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==a[i]||a[i]>e)&&1===t[e]&&(n.push(t[e]),s.push(e)),a[i]<=e&&i++}1!==t[e]&&(n.push(t[e]),s.push(e))}return{newShape:n,keptDims:s}}function O(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function _(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function M(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function B(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function L(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function z(t){return"string"==typeof t||t instanceof String}function W(t){return"number"==typeof t}function U(t){return Array.isArray(t)?U(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":W(t)?"float32":z(t)?"string":"boolean"==typeof t?"bool":"float32"}function P(t){return!!(t&&t.constructor&&t.call&&t.apply)}function V(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function G(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let s=e-3;s>=0;--s)n[s]=n[s+1]*t[s+1];return n}function H(t,e,n){const s=new Array;if(1===e.length){const r=e[0];for(let e=0;e<r;e++)s[e]=n[t+e]}else{const r=e[0],a=e.slice(1),i=a.reduce(((t,e)=>t*e));for(let e=0;e<r;e++)s[e]=H(t+e*i,a,n)}return s}function j(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return H(0,t,e)}function q(t,e){const n=K(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function K(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function X(t,e){const n=t.reduce(((t,e)=>t*e),1);if(null==e||"float32"===e)return j(t,new Float32Array(n));if("int32"===e)return j(t,new Int32Array(n));if("bool"===e)return j(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Y(t){t.forEach((e=>{v(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function J(t,e,n){if(0===e)return 0;if(1===e)return t[0];let s=t[t.length-1];for(let e=0;e<t.length-1;++e)s+=n[e]*t[e];return s}function Q(t,e,n){if(0===e)return[];if(1===e)return[t];const s=new Array(e);for(let e=0;e<s.length-1;++e)s[e]=Math.floor(t/n[e]),t-=s[e]*n[e];return s[s.length-1]=t,s}function Z(t){return t&&t.then&&"function"==typeof t.then}class tt{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Z(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function et(){return st}let nt,st=null;function rt(){if(null==nt){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}nt=t}return nt}function at(t,e){const n=function(){const t=rt();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const s=e();return n.set(t,s),n.get(t)}}const it="Abs",ot="Acos",lt="Acosh",ut="Add",ct="ArgMax",ht="ArgMin",dt="Asin",pt="Asinh",ft="Atan",mt="Atanh",gt="Atan2",bt="AvgPool",yt="AvgPoolBackprop",xt="AvgPool3D",wt="BatchMatMul",vt="BatchToSpaceND",kt="BroadcastTo",It="Cast",Ct="Ceil",$t="ClipByValue",St="Complex",Nt="Concat",Et="Conv2D",Rt="Conv2DBackpropFilter",At="Conv2DBackpropInput",Dt="Conv3D",Tt="Conv3DBackpropFilterV2",Ft="Conv3DBackpropInputV2",Ot="Cos",_t="Cosh",Mt="Cumsum",Bt="DepthwiseConv2dNative",Lt="DepthwiseConv2dNativeBackpropFilter",zt="DepthwiseConv2dNativeBackpropInput",Wt="Dilation2D",Ut="Dilation2DBackpropInput",Pt="Dilation2DBackpropFilter",Vt="Div",Gt="Elu",Ht="Erf",jt="Exp",qt="Expm1",Kt="FFT",Xt="Fill",Yt="FlipLeftRight",Jt="Floor",Qt="FloorDiv",Zt="FusedBatchNorm",te="GatherV2",ee="GreaterEqual",ne="Identity",se="IFFT",re="Imag",ae="IsFinite",ie="IsInf",oe="IsNan",le="Log",ue="Log1p",ce="LogicalNot",he="LogSoftmax",de="Max",pe="Maximum",fe="MaxPool",me="MaxPoolBackprop",ge="MaxPool3D",be="MaxPoolWithArgmax",ye="Mean",xe="Minimum",we="MirrorPad",ve="Multiply",ke="Negate",Ie="NotEqual",Ce="NonMaxSuppressionV3",$e="NonMaxSuppressionV4",Se="NonMaxSuppressionV5",Ne="OnesLike",Ee="OneHot",Re="PadV2",Ae="Prelu",De="Real",Te="Reciprocal",Fe="Relu",Oe="Reshape",_e="ResizeNearestNeighbor",Me="ResizeBilinear",Be="Relu6",Le="Reverse",ze="Round",We="Rsqrt",Ue="SelectV2",Pe="Selu",Ve="Slice",Ge="Sin",He="Sinh",je="Sign",qe="Sigmoid",Ke="Softplus",Xe="Sqrt",Ye="SpaceToBatchND",Je="SplitV",Qe="Softmax",Ze="SquaredDifference",tn="Square",en="Sub",nn="Tan",sn="Tanh",rn="Tile",an="Transpose",on="Unique",ln="Unpack",un="UnsortedSegmentSum",cn="ZerosLike",hn="Step",dn="FromPixels",pn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D",bn=at("kernelRegistry",(()=>new Map)),yn=at("gradRegistry",(()=>new Map));function xn(t,e){const n=Cn(t,e);return bn.get(n)}function wn(t){return yn.get(t)}function vn(t){const e=bn.entries(),n=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===t&&n.push(i)}return n}function kn(t){const{kernelName:e,backendName:n}=t,s=Cn(e,n);bn.has(s)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),bn.set(s,t)}function In(t){const{kernelName:e}=t;yn.has(e)&&et().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),yn.set(e,t)}function Cn(t,e){return`${e}_${t}`}class $n{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new Nn)}profileKernel(t,e,n){let s;const r=this.backendTimer.time((()=>{s=n()}));for(let e=0;e<s.length;e++){const n=s[e];n.data().then((e=>{Sn(e,n.dtype,t)}))}return{kernelName:t,outputs:s,inputs:e,timeMs:r.then((t=>t.kernelMs)),extraInfo:r.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:s,inputs:r,extraInfo:a}=t;n.forEach((t=>{Promise.all([t.data(),s,a]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],r,n[2])}))}))}}function Sn(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const s=t[e];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class Nn{logKernelProfile(t,e,n,s,r,a){const i="number"==typeof s?R(`${s}ms`,9):s.error,o=R(t,25),l=e.rank,u=e.size,c=R(e.shape.toString(),14);let h="";for(const t in r){const n=r[t];if(null!=n){const s=n.shape||e.shape,r=s.length;h+=`${t}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function En(t,e,n,s){const r=G(e),a=function(t,e,n,s){const r=$(e),a=s[s.length-1],i=new Array(a).fill(0),o=e.length,l="complex64"===n?Tn(t):t;if(o>1)for(let t=0;t<r/a;t++){const e=t*a;for(let t=0;t<a;t++)i[t]=Math.max(i[t],Rn(l[e+t],0,n).length)}return i}(t,e,n,r),i=e.length,o=Dn(t,e,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map((t=>"    "+t)).join("\n")),l.join("\n")}function Rn(t,e,n){let s;return s=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:z(t)?`'${t}'`:"bool"===n?An(t):parseFloat(t.toFixed(7)).toString(),R(s,e)}function An(t){return 0===t?"false":"true"}function Dn(t,e,n,s,r,a=!0){const i="complex64"===n?2:1,o=e[0],l=e.length;if(0===l)return"complex64"===n?[Rn(Tn(t)[0],0,n)]:"bool"===n?[An(t[0])]:[t[0].toString()];if(1===l){if(o>20){const e=3*i;let s=Array.from(t.slice(0,e)),a=Array.from(t.slice((o-3)*i,o*i));return"complex64"===n&&(s=Tn(s),a=Tn(a)),["["+s.map(((t,e)=>Rn(t,r[e],n))).join(", ")+", ..., "+a.map(((t,e)=>Rn(t,r[o-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?Tn(t):Array.from(t)).map(((t,e)=>Rn(t,r[e],n))).join(", ")+"]"]}const u=e.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>20){for(let e=0;e<3;e++){const s=e*h,a=s+h;d.push(...Dn(t.slice(s,a),u,n,c,r,!1))}d.push("...");for(let e=o-3;e<o;e++){const s=e*h,a=s+h;d.push(...Dn(t.slice(s,a),u,n,c,r,e===o-1))}}else for(let e=0;e<o;e++){const s=e*h,a=s+h;d.push(...Dn(t.slice(s,a),u,n,c,r,e===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let t=1;t<d.length-1;t++)d[t]=" "+d[t]+p;let f=",\n";for(let t=2;t<l;t++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Tn(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}function Fn(t,e){return"string"===e?Mn(t):On([t],e)}function On(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=C(t)),et().getBool("DEBUG")&&function(t,e){for(let n=0;n<t.length;n++){const s=t[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function _n(){return et().platform.now()}function Mn(t,e="utf-8"){return e=e||"utf-8",et().platform.encode(t,e)}function Bn(t,e="utf-8"){return e=e||"utf-8",et().platform.decode(t,e)}class Ln{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=$(t),null!=n){const t=n.length;v(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||_(e,this.size),this.strides=G(t)}set(t,...e){0===e.length&&(e=[0]),v(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return zn().makeTensor(this.values,this.shape,this.dtype)}}let zn=null,Wn=null,Un=null;class Pn{constructor(t,e,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=$(t),this.strides=G(t),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Wn.buffer(this.shape,this.dtype,t)}bufferSync(){return Wn.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return j(this.shape,t)}arraySync(){return j(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=zn().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>Bn(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=zn().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>Bn(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await zn().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(zn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Wn.print(this,t)}clone(){return this.throwIfDisposed(),Wn.clone(this)}toString(t=!1){return En(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Wn.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),zn().makeVariable(this,t,e,n)}}Object.defineProperty(Pn,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class Vn extends Pn{constructor(t,e,n,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!S(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);zn().disposeTensor(this),this.dataId=t.dataId,zn().incRef(this,null)}dispose(){zn().disposeVariable(this),this.isDisposedInternal=!0}}var Gn,Hn,jn,qn,Kn;Object.defineProperty(Vn,Symbol.hasInstance,{value:t=>t instanceof Pn&&null!=t.assign&&t.assign instanceof Function}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(Gn||(Gn={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(Hn||(Hn={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(jn||(jn={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(qn||(qn={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(Kn||(Kn={}));const Xn={float32:qn,int32:Hn,bool:jn,complex64:Kn};function Yn(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return Xn[t][e]}function Jn(t){return Yn(t,"int32")}function Qn(t,e){if(t.dtype===e.dtype)return[t,e];const n=Yn(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Zn(t,e){return e.some((e=>e.id===t.id))}function ts(t){const e=[];return es(t,e,new Set),e}function es(t,e,n){if(null==t)return;if(t instanceof Pn)return void e.push(t);if(s=t,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=t;for(const t in r){const s=r[t];n.has(s)||(n.add(s),es(s,e,n))}}class ns{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class ss{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ns}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new $n(this.backendInstance),!0}setupRegisteredKernels(){vn(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){vn(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof m||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,s=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),s=n.backend,r=this.readSync(e);s.disposeData(e),n.backend=t,t.move(e,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return ss.nextTensorId++}nextVariableId(){return ss.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},s={dtype:e};return as.runKernelFunc((n=>n.cast(t,e)),n,null,It,s)}})),[],{}),e}runKernel(t,e,n,s,r){return this.runKernelFunc(null,e,null,t,n,s,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const s=this.backend.numDataIds();let r=0;n.forEach((t=>{r+="complex64"===t.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-e-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${t}'`)}runKernelFunc(t,e,n,s,r,a,i){let o,l=[];const u=this.isTapeOn();null==s&&(s=null!=this.state.activeScope?this.state.activeScope.name:"");const c=this.state.numBytes,h=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const p=xn(s,this.backendName);let f,m;if(null!=p)d=()=>{const t=this.backend.numDataIds();f=p.kernelFunc({inputs:e,attrs:r,backend:this.backend});const n=Array.isArray(f)?f:[f];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,t,n);const o=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(u){let t=this.getTensorsForGradient(s,e,o);if(null==t){null==i&&(i=[]);const e=o.filter(((t,e)=>i[e]));t=(a||[]).slice().concat(e)}l=this.saveTensorsForBackwardMode(t)}return o};else{const e=t=>{u&&(l=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();f=this.tidy((()=>t(this.backend,e)));const r=Array.isArray(f)?f:[f];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(m=this.profiler.profileKernel(s,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),o=m.outputs):o=d()})),u&&this.addTapeNode(s,e,o,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:o.map((t=>t.shape)),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(f)?o:o[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const s=wn(t);if(null!=s){const t=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(v(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(e).map((t=>e[t]))):a=t.map((t=>e[t]));const i=n.filter(((t,e)=>r[e]));return a.concat(i)}return null}makeTensor(t,e,n,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=t;"string"===n&&z(t[0])&&(r=t.map((t=>Mn(t))));const a=s.write(r,e,n),i=new Pn(e,n,a,this.nextTensorId());if(this.incRef(i,s),"string"===n){const t=this.state.tensorInfo.get(a),e=function(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}(r);this.state.numBytes+=e-t.bytes,t.bytes=e}return i}makeTensorFromDataId(t,e,n,s){const r=new Pn(e,n=n||"float32",t,this.nextTensorId());return this.incRef(r,s),r}makeVariable(t,e=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const r=new Vn(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*L(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof Vn||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:r},o=wn(t);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],s=K(t.size,t.dtype);return this.makeTensor(s,t.shape,t.dtype)}return t})),s(t.length>1?t:t[0],r,a))),this.state.activeTape.push(i)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ts(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==s.id||this.track(t)}))}gradients(t,e,n,s=!1){if(v(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));v(r instanceof Pn,(()=>"The result y returned by f() must be a tensor."));const a=function(t,e,n){const s={},r={};for(let t=0;t<e.length;t++)s[e[t].id]=!0;for(let n=0;n<t.length;n++){const a=t[n],i=a.inputs;for(const t in i){const n=i[t];let o=!1;for(let t=0;t<e.length;t++)if(s[n.id]){a.outputs.forEach((t=>s[t.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let e=t.length-1;e>=0;e--){const n=t[e],s=n.inputs;for(let t=0;t<n.outputs.length;t++)if(a[n.outputs[t].id]){for(const t in s)a[s[t].id]=!0,i[n.id]=!0;break}}const o=[];for(let e=0;e<t.length;e++){const n=t[e];if(r[n.id]&&i[n.id]){const t={};for(const e in n.inputs){const r=n.inputs[e];s[r.id]&&(t[e]=r)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,o.push(e)}}return o}(this.state.activeTape,e,r);if(!s&&0===a.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[r.id]=null==n?function(t){const e=q($(t),"float32");return as.makeTensor(e,t,"float32")}(r.shape):n,function(t,e,n,s){for(let r=e.length-1;r>=0;r--){const a=e[r],i=[];if(a.outputs.forEach((e=>{const n=t[e.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const e in a.inputs){if(!(e in o))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[e]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[e];if(!S(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${e}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==t[i.id])t[i.id]=r;else{const e=t[i.id];t[i.id]=s(e,r),e.dispose()}}}}(t,a,(t=>this.tidy(t)),is);const s=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(t){return v(P(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;v(e.every((t=>t instanceof Pn)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return e.forEach(((t,e)=>{s[e]=t})),this.runKernelFunc(((s,r)=>(n=t(...e,r),v(n.value instanceof Pn,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),v(P(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),s,((t,s)=>{const r=n.gradFunc(t,s),a=Array.isArray(r)?r:[r];v(a.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),v(a.every((t=>t instanceof Pn)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((t,e)=>{i[e]=()=>t})),i}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=_n(),n=await this.backend.time(t);return n.wallMs=_n()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ns;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function rs(){const t=rt();if(null==t._tfengine){const e=new tt(t);t._tfengine=new ss(e)}var e;return e=t._tfengine.ENV,st=e,zn=()=>t._tfengine,t._tfengine}ss.nextTensorId=0,ss.nextVariableId=0;const as=rs();function is(t,e){const n={a:t,b:e};return as.runKernelFunc(((n,s)=>{const r=n.add(t,e);return s([t,e]),r}),n,null,ut)}function os(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ls(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const us=et();async function cs(t,e){const n=[],s=[],r=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(t)?t[a].tensor:t[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const t=new Promise((async t=>{const e=await o.bytes(),n=e.reduce(((t,e)=>t+e.length),0)+4*e.length,s=new Uint8Array(n);let r=0;for(let t=0;t<e.length;t++){const n=e[t],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}t(s)}));s.push(t)}else s.push(o.data());null!=e&&(l.group=e),n.push(l)}return{data:hs(await Promise.all(s)),specs:n}}function hs(t){if(null===t)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach((t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${t.constructor.name}`)}));const s=new Uint8Array(e);let r=0;return n.forEach((t=>{s.set(new Uint8Array(t.buffer),r),r+=t.byteLength})),s.buffer}us.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),us.registerFlag("IS_BROWSER",(()=>ls())),us.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),us.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),us.registerFlag("PROD",(()=>!1)),us.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>us.getBool("DEBUG"))),us.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),us.registerFlag("IS_TEST",(()=>!1));const ds="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ps(t){return ds?Buffer.byteLength(t):new Blob([t]).size}function fs(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let s=0;return t.forEach((t=>{n.set(new Uint8Array(t),s),s+=t.byteLength})),n.buffer}function ms(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:ps(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ps(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}class gs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==gs.instance&&(gs.instance=new gs),gs.instance}static registerSaveRouter(t){gs.getInstance().saveRouters.push(t)}static registerLoadRouter(t){gs.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return gs.getHandlers(t,"save")}static getLoadHandlers(t,e){return gs.getHandlers(t,"load",e)}static getHandlers(t,e,n){const s=[];return("load"===e?gs.getInstance().loadRouters:gs.getInstance().saveRouters).forEach((e=>{const r=e(t,n);null!==r&&s.push(r)})),s}}const bs=t=>gs.getSaveHandlers(t),ys="tensorflowjs",xs="models_store",ws="model_info_store";function vs(){if(!et().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ks(t){const e=t.result;e.createObjectStore(xs,{keyPath:"modelPath"}),e.createObjectStore(ws,{keyPath:"modelPath"})}class Is{constructor(t){if(this.indexedDB=vs(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const s=this.indexedDB.open(ys,1);s.onupgradeneeded=()=>ks(s),s.onsuccess=()=>{const r=s.result;if(null==e){const e=r.transaction(xs,"readonly"),s=e.objectStore(xs).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(s.result.modelArtifacts)},s.onerror=t=>(r.close(),n(s.error)),e.oncomplete=()=>r.close()}else{const s=ms(e),a=r.transaction(ws,"readwrite");let i=a.objectStore(ws);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(xs,"readwrite");const o=l.objectStore(xs).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:s});o.onsuccess=()=>t({modelArtifactsInfo:s}),o.onerror=t=>{i=a.objectStore(ws);const e=i.delete(this.modelPath);e.onsuccess=()=>(r.close(),n(o.error)),e.onerror=t=>(r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=t=>n(s.error)}))}}Is.URL_SCHEME="indexeddb://";const Cs=t=>{return et().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Is.URL_SCHEME)?(e=t.slice(Is.URL_SCHEME.length),new Is(e)):null;var e};gs.registerSaveRouter(Cs),gs.registerLoadRouter(Cs);class $s{constructor(){this.indexedDB=vs()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(ys,1);n.onupgradeneeded=()=>ks(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(ws,"readonly"),a=r.objectStore(ws).getAll();a.onsuccess=()=>{const e={};for(const t of a.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},a.onerror=t=>(s.close(),e(a.error)),r.oncomplete=()=>s.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(Is.URL_SCHEME)?e.slice(Is.URL_SCHEME.length):e,new Promise(((e,n)=>{const s=this.indexedDB.open(ys,1);s.onupgradeneeded=()=>ks(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(ws,"readwrite"),i=a.objectStore(ws),o=i.get(t);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const s=i.delete(t),a=()=>{l=r.transaction(xs,"readwrite");const s=l.objectStore(xs).delete(t);s.onsuccess=()=>e(o.result.modelArtifactsInfo),s.onerror=t=>n(o.error)};s.onsuccess=a,s.onerror=t=>(a(),r.close(),n(o.error))}},o.onerror=t=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=t=>n(s.error)}))}}const Ss="/",Ns="tensorflowjs_models",Es="info",Rs="model_topology",As="weight_specs",Ds="weight_data",Ts="model_metadata";function Fs(t){return{info:[Ns,t,Es].join(Ss),topology:[Ns,t,Rs].join(Ss),weightSpecs:[Ns,t,As].join(Ss),weightData:[Ns,t,Ds].join(Ss),modelMetadata:[Ns,t,Ts].join(Ss)}}function Os(t){const e=t.split(Ss);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(Ss)}class _s{constructor(t){if(!et().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=Fs(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),s=ms(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(ds)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,s=e.length;t<s;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:s}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const t=JSON.parse(r);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(ds){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(a),e}}_s.URL_SCHEME="localstorage://";const Ms=t=>{return et().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(_s.URL_SCHEME)?(e=t.slice(_s.URL_SCHEME.length),new _s(e)):null;var e};gs.registerSaveRouter(Ms),gs.registerLoadRouter(Ms);class Bs{constructor(){v(et().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),v("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=Ns+Ss,n=Ss+Es;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(e)&&r.endsWith(n)&&(t[Os(r)]=JSON.parse(this.LS.getItem(r)))}return t}async removeModel(t){var e;const n=Fs(t=(e=t).startsWith(_s.URL_SCHEME)?e.slice(_s.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}class Ls{constructor(){this.managers={}}static getInstance(){return null==Ls.instance&&(Ls.instance=new Ls),Ls.instance}static registerManager(t,e){v(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),v(t.length>0,(()=>"scheme must not be an empty string."));const n=Ls.getInstance();v(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class zs{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(et().get("IS_BROWSER")){et().setPlatform("browser",new zs);try{Ls.registerManager(_s.URL_SCHEME,new Bs)}catch(t){}try{Ls.registerManager(Is.URL_SCHEME,new $s)}catch(t){}}let Ws;function Us(t,e="float32",n){return e=e||"float32",Y(t),new Ln(t,e,n)}function Ps(t,e){let n=t;if(B(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const s=[];for(;Array.isArray(n)||B(n)&&"string"!==e;)s.push(n.length),n=n[0];return Array.isArray(t)&&et().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Vs(t,s,[]),s}function Vs(t,e,n){if(n=n||[],!Array.isArray(t)&&!B(t))return void v(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));v(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),v(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const s=e.slice(1);for(let e=0;e<t.length;++e)Vs(t[e],s,n.concat(e))}function Gs(t,e,n,s){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${s}' must be ${t} tensor, but got ${e} tensor`)}function Hs(t,e,n,s="numeric"){if(t instanceof Pn)return Gs(s,t.dtype,e,n),t;let r=U(t);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Gs(s,r,e,n),null==t||!B(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const s=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=Ps(t,r);B(t)||Array.isArray(t)||(t=[t]);const i="string"!==r?On(t,r):C(t,[],!0);return as.makeTensor(i,a,r)}function js(t,e,n,s="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,s)=>Hs(t,`${e}[${s}]`,n)),s)}function qs(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const r=(...t)=>{as.startScope(n);try{const e=s(...t);return Z(e)&&console.error("Cannot return a Promise inside of tidy."),as.endScope(e),e}catch(t){throw as.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}et().get("IS_NODE")&&et().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=et().global.fetch?et().global.fetch(t,e):(null==Ws&&(Ws=n(950)),Ws(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Ks=qs({cast_:function(t,e){const n=Hs(t,"x","cast");if(!function(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:e};return as.runKernelFunc((t=>t.cast(n,e)),s,null,It,r)}}),Xs=qs({clone_:function(t){const e=Hs(t,"x","clone",null),n={x:e};return as.runKernelFunc((()=>as.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,ne)}});function Ys(t){return new Promise((t=>setTimeout(t))).then(t)}rs(),Wn={buffer:Us,cast:Ks,clone:Xs,print:function(t,e=!1){console.log(t.toString(e))}};class Js{constructor(t){if(!et().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Js.URL_SCHEME)&&(t=t.slice(Js.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await Ys((()=>a.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Ys((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ms(t)}}}}function Qs(t,e,n,s){!function(t){v(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){v(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),v(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),v(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(t.map((a=>(a.then((a=>{const i=n+ ++r/t.length*(s-n);return e(i),a})),a))))}async function Zs(t,e){null==e&&(e={});const n=null==e.fetchFunc?et().platform.fetch:e.fetchFunc,s=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),r=(null==e.onProgress?await Promise.all(s):await Qs(s,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(r):await Qs(r,e.onProgress,.5,1)}Js.URL_SCHEME="downloads://",gs.registerSaveRouter((t=>et().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(Js.URL_SCHEME)?function(t="model"){return new Js(t)}(t.slice(Js.URL_SCHEME.length)):null));class tr{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(v("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=et().platform.fetch,v(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&v(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],s={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:ms(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,s=e.weightsManifest,r=e.generatedBy,a=e.convertedBy,i=e.format,o=e.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,u;if(null!=s){const t=await this.loadWeights(s);[l,u]=t}const c={modelTopology:n,weightSpecs:l,weightData:u,userDefinedMetadata:o,generatedBy:r,convertedBy:a,format:i},h=e.modelInitializer;return h&&(c.modelInitializer=h),c}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),r=this.weightPathPrefix||n,a=[];for(const e of t)a.push(...e.weights);const i=[],o=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(t)):i.push(r+t+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,fs(await Zs(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function er(t){return null!=t.match(tr.URL_SCHEME_REGEX)}tr.URL_SCHEME_REGEX=/^https?:\/\//;const nr=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>er(t))):er(t),n)return function(t,e){return new tr(t,e)}(t,e)}return null};function sr(t,e,n,s){if(null==s&&(s=U(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!B(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Y(e);const t=$(e),s=$(n);v(t===s,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${s}`));for(let t=0;t<n.length;++t){const s=n[t],r=t!==n.length-1||s!==$(e.slice(t));v(n[t]===e[t]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return B(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?On(t,s):C(t,[],!0),as.makeTensor(t,e,s)}let rr;gs.registerSaveRouter(nr),gs.registerLoadRouter(nr);const ar=qs({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)a=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);i=!0}if(r){const e=2;if(r&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=xn(dn,as.backendName)){const n={pixels:t},s={numChannels:e};return as.runKernel(dn,n,s)}const[o,l]=r?[t.videoWidth,t.videoHeight]:[t.width,t.height];let u,c;if(i?u=t.getContext("2d").getImageData(0,0,o,l).data:s||n?u=t.data:(a||r)&&(null==rr&&(rr=document.createElement("canvas").getContext("2d")),rr.canvas.width=o,rr.canvas.height=l,rr.drawImage(t,0,0,o,l),u=rr.getImageData(0,0,o,l).data),4===e)c=new Int32Array(u);else{const t=o*l;c=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)c[n*e+t]=u[4*n+t]}return function(t,e,n){if(I(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Ps(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sr(t,e,s,n)}(c,[l,o,e],"int32")}});function ir(t,e,n){const s=t.shape.length;v(s===e.length,(()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`)),v(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)v(e[r]+n[r]<=t.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+n[r]}) would overflow input.shape[${r}] (${t.shape[r]})`))}function or(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function lr(t,e,n){const s=[];for(let r=0;r<t.length;r++)s[r]=Math.ceil((e[r]-t[r])/n[r]);return s}function ur(t,e,n,s){const r=[...t];for(let t=r.length;t<s.length;t++)r.push(1);for(let t=0;t<n;t++)0===t?r[e]=1:(r.splice(e,0,1),r.pop());return r}function cr(t,e,n){return n<=t?n:n-(e-1)}function hr(t,e){const n=[];for(let s=0;s<t;s++)n.push(e+s);return n}function dr(t,e,n,s,r,a,i,o,l){const u=t.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(e.length&&n>0){const l=e[0],u=n+1;c=pr(i,l,u,s,t),h=fr(o,l,u,r,t),d=ur(a,l,u,t)}else for(let e=0;e<u;e++)c[e]=gr(i,s,a,t,e,l),h[e]=br(o,r,a,t,e,l),d[e]=mr(a,e,l);return{begin:c,end:h,strides:d}}function pr(t,e,n,s,r){const a=[...r],i=hr(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=cr(e,n,r);let o=s[i];t&1<<i&&(o=0),a[r]=o}return a}function fr(t,e,n,s,r){const a=[...r],i=hr(n,e);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=cr(e,n,r);let o=s[i];t&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let t=0;t<a.length;t++){const e=r[t];a[t]<0&&(a[t]+=e),a[t]=y(0,a[t],r[t])}return a}function mr(t,e,n){let s=t[e];return(n&1<<e||null==s)&&(s=1),s}function gr(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=y(0,i,l-1),i}function br(t,e,n,s,r,a){let i=e[r];const o=n[r]||1;(t&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?y(0,i,l):y(-1,i,l-1),i}function yr(t,e,n){let s=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){s=t;break}for(let r=s+1;r<n.length;r++)if(e[r]>0||n[r]!==t[r])return!1;return!0}function xr(t,e){let n=t.length>0?t[t.length-1]:1;for(let s=0;s<t.length-1;s++)n+=t[s]*e[s];return n}function wr(t,e,n){let s;const r=t.shape.length;let a;return s="number"==typeof e?[e,...new Array(r-1).fill(0)]:e.length<r?e.concat(new Array(r-e.length).fill(0)):e.slice(),s.forEach((t=>{v(-1!==t,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((e,n)=>e>=0?e:(v(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-s[n]))),[s,a]}class vr{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class kr{constructor(){this.classNameMap={}}static getMap(){return null==kr.instance&&(kr.instance=new kr),kr.instance}static register(t){kr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Ir(t){v(null!=t.className,(()=>"Class being registered does not have the static className property defined.")),v("string"==typeof t.className,(()=>"className is required to be a string, but got type "+typeof t.className)),v(t.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),kr.register(t)}const Cr="2.7.0";function $r(t){et().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Sr(){return as}function Nr(){return as.memory()}function Er(t,e){return as.tidy(t,e)}function Rr(t){ts(t).forEach((t=>t.dispose()))}function Ar(t){return as.keep(t)}function Dr(t,e,n=1){return as.registerBackend(t,e,n)}function Tr(){return as.backend}function Fr(t){return as.customGrad(t)}function Or(t,e){if((B(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&B(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sr(t,[],[],e)}Un=$r;class _r extends vr{minimize(t,e=!1,n){const{value:s,grads:r}=this.computeGradients(t,n);if(null!=n){const t=n.map((t=>({name:t.name,tensor:r[t.name]})));this.applyGradients(t)}else this.applyGradients(r);return Rr(r),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(t,e){v(P(t),(()=>"The f passed in variableGrads(f) must be a function")),v(null==e||Array.isArray(e)&&e.every((t=>t instanceof Vn)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=e;if(!n){e=[];for(const t in as.registeredVariables)e.push(as.registeredVariables[t])}const s=n?e.filter((t=>!t.trainable)):null,r=e.length;v((e=e.filter((t=>t.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=as.gradients(t,e,null,!0);v(i.some((t=>null!=t)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),v(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return e.forEach(((t,e)=>{null!=i[e]&&(o[t.name]=i[e])})),null!=s&&s.forEach((t=>o[t.name]=null)),{value:a,grads:o}}(t,e)}dispose(){null!=this.iterations_&&Rr(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Or(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(_r,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});const Mr=qs({abs_:function(t){const e=Hs(t,"x","abs"),n={x:e};return as.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,it)}}),Br=qs({add_:function(t,e){let n=Hs(t,"a","add"),s=Hs(e,"b","add");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.add(n,s);return e([n,s]),r}),r,null,ut)}});function Lr(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function zr(t,e,n){const s=t.length+e.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(t[a++]):r.push(e[i++]);return r}function Wr(t,e){const n=[],s=t.length;for(let r=0;r<s;r++)-1===e.indexOf(r)&&n.push(t[r]);return[n,e.map((e=>t[e]))]}function Ur(t,e){return zr(t,e.map((t=>1)),e)}function Pr(t,e,n){v(Lr(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function Vr(t,e){if(Lr(t,e))return null;const n=[];for(let s=0;s<e;++s)-1===t.indexOf(s)&&n.push(s);return t.forEach((t=>n.push(t))),n}function Gr(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function Hr(t,e){const n=[];for(let s=e-t;s<e;++s)n.push(s);return n}const jr=qs({reshape_:function(t,e){const n=Hs(t,"x","reshape",null),s={x:n},r={shape:e};return as.runKernelFunc(((t,s)=>(e=D(e,n.size),v(n.size===$(e),(()=>"new shape and old shape must have the same number of elements.")),s([n]),t.reshape(n,e))),s,null,Oe,r)}}),qr=qs({transpose_:function(t,e){const n=Hs(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),v(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{v(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:e};return as.runKernelFunc((t=>t.transpose(n,e)),s,null,an,r)}}),Kr=qs({all_:function(t,e=null,n=!1){let s=Hs(t,"x","all","bool");const r={x:s},a={axis:e,keepDims:n};return as.runKernelFunc((t=>{const r=T(e,s.shape);let a=r;const i=Vr(a,s.rank);null!=i&&(s=qr(s,i),a=Hr(a.length,s.rank));const o=t.all(s,a);if(n){const t=Ur(o.shape,r);return jr(o,t)}return o}),r,null,"All",a)}}),Xr=qs({any_:function(t,e=null,n=!1){let s=Hs(t,"x","any","bool");const r={x:s},a={axis:e,keepDims:n};return as.runKernelFunc((t=>{const r=T(e,s.shape);let a=r;const i=Vr(a,s.rank);null!=i&&(s=qr(s,i),a=Hr(a.length,s.rank));const o=t.any(s,a);if(n){const t=Ur(o.shape,r);return jr(o,t)}return o}),r,null,"Any",a)}}),Yr=qs({argMax_:function(t,e=0){let n=Hs(t,"x","argMax");const s={x:n},r={axis:e};return as.runKernelFunc(((t,s)=>{s([n]);let r=T(e,n.shape);const a=Vr(r,n.rank);return null!=a&&(n=qr(n,a),r=Hr(r.length,n.rank)),t.argMax(n,r[0])}),s,null,ct,r)}});function Jr(t,e,n,s,r="NHWC",a){return ta(t,[...e,t[3]],n,a,s,null,null,ua(r))}function Qr(t,e,n,s,r,a,i="channelsLast"){const[o,l]=sa(e);let u;if("channelsLast"===i)u=[o,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,t[1],t[1]]}return ta(t,u,n,s,r,a,!1,i)}function Zr(t,e,n,s,r,a,i="NDHWC"){const[o,l,u]=ra(e);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,t[4],t[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,t[1],t[1]]}return ea(t,c,n,s,r,!1,h,a)}function ta(t,e,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=t;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=t}const[d,p,,f]=e,[m,g]=sa(n),[b,y]=sa(s),x=aa(d,b),w=aa(p,y),{padInfo:k,outHeight:I,outWidth:C}=function(t,e,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const r=function(t,e,n,s,r){null==s&&(s=na(t,e,n));const a=t[1],i=ia((t[0]-e+2*s)/n+1,r);v(N(i),(()=>`The output # of rows (${i}) must be an integer. Change the stride and/or zero pad parameters`));const o=ia((a-e+2*s)/n+1,r);return v(N(o),(()=>`The output # of columns (${o}) must be an integer. Change the stride and/or zero pad parameters`)),[i,o]}([e,n],a,s,t,o);c=r[0],h=r[1]}else if("same"===t){c=Math.ceil(e/s),h=Math.ceil(n/r);const t=Math.max(0,(c-1)*s+a-e),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(t/2),d=t-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===t)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const d="channelsLast"===l?t[1][0]:t[2][0],p="channelsLast"===l?t[1][1]:t[2][1],f="channelsLast"===l?t[2][0]:t[3][0],m="channelsLast"===l?t[2][1]:t[3][1];u={top:d,bottom:p,left:f,right:m,type:0===d&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=ia((e-a+d+p)/s+1,o),h=ia((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,w,a,o),$=i?f*h:f;let S;return"channelsFirst"===o?S=[l,$,I,C]:"channelsLast"===o&&(S=[l,I,C,$]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:I,outWidth:C,outChannels:$,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:y,inShape:t,outShape:S,filterShape:e}}function ea(t,e,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=t;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=t}const[p,f,m,,g]=e,[b,y,x]=ra(n),[w,k,I]=ra(s),C=aa(p,w),$=aa(f,k),S=aa(m,I),{padInfo:E,outDepth:R,outHeight:A,outWidth:D}=function(t,e,n,s,r,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,s,r,a){null==r&&(r=na(t,e,s));const i=t[1],o=t[2],l=ia((t[0]-e+2*r)/s+1,a);v(N(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const u=ia((i-e+2*r)/s+1,a);v(N(u),(()=>`The output # of rows (${u}) must be an integer. Change the stride and/or zero pad parameters`));const c=ia((o-e+2*r)/s+1,a);return v(N(c),(()=>`The output # of columns (${c}) must be an integer. Change the stride and/or zero pad parameters`)),[l,u,c,1]}([e,n,s,1],o,0,r,t,c);d=a[0],p=a[1],f=a[2]}else if("same"===t){d=Math.ceil(e/r),p=Math.ceil(n/a),f=Math.ceil(s/i);const t=(d-1)*r+o-e,c=(p-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(t/2),b=t-g,y=Math.floor(c/2),x=c-y,w=Math.floor(m/2);h={top:y,bottom:x,left:w,right:m-w,front:g,back:b,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((e-o+1)/r),p=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(r,u,c,h,b,y,x,C,$,S,o),T=a?g*d:g;let F;return"channelsFirst"===i?F=[l,T,R,A,D]:"channelsLast"===i&&(F=[l,R,A,D,T]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:R,outHeight:A,outWidth:D,outChannels:T,padInfo:E,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:t,outShape:F,filterShape:e}}function na(t,e,n,s=1){const r=aa(e,s);return Math.floor((t[0]*(n-1)-n+r)/2)}function sa(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function ra(t){return"number"==typeof t?[t,t,t]:t}function aa(t,e){return e<=1?t:t+(t-1)*(e-1)}function ia(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function oa(t){const[e,n,s]=sa(t);return 1===e&&1===n&&1===s}function la(t,e){return oa(t)||oa(e)}function ua(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}const ca=qs({avgPool_:function(t,e,n,s,r){const a=Hs(t,"x","avgPool","float32");v(la(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=jr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),v(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=r&&v(N(s),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r};let c=as.runKernelFunc(((t,a)=>{const o=Qr(i.shape,e,n,1,s,r);return a([i]),1===o.filterWidth&&1===o.filterHeight&&S(o.inShape,o.outShape)?i.clone():t.avgPool(i,o)}),l,null,bt,u);return c=Ks(c,a.dtype),o?jr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ha=qs({avgPool3d_:function(t,e,n,s,r,a="NDHWC",i){null==i?i=[1,1,1]:$r("dilations is deprecated, this field will be gone in v3.0.0.");const o=Hs(t,"x","avgPool3d","float32");let l=o,u=!1;4===o.rank&&(u=!0,l=jr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),v(5===l.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`)),v("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),v(la(n,i),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=r&&v(N(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a,dilations:i};let d=as.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=Zr(l.shape,e,n,i,s,r,a);return o([l]),t.avgPool3d(l,u)}),c,null,xt,h);return d=Ks(d,l.dtype),u?jr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});function da(t){return null==t?null:0===t.rank?jr(t,[t.size]):1===t.rank?t:2===t.rank?jr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?jr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const pa=qs({batchNorm_:function(t,e,n,s,r,a){null==a&&(a=.001);const i=Hs(t,"x","batchNorm"),o=Hs(e,"mean","batchNorm"),l=Hs(n,"variance","batchNorm");let u,c;null!=r&&(u=Hs(r,"scale","batchNorm")),null!=s&&(c=Hs(s,"offset","batchNorm")),v(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),v(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),v(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(t){let e;return e=0===t.rank||1===t.rank?jr(t,[1,1,1,t.size]):2===t.rank?jr(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?jr(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(i),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},f=as.runKernelFunc(((t,e)=>(e([h,o,l,u]),t.batchNorm(h,da(o),da(l),da(c),da(u),a))),d,null,Zt,p);return jr(f,i.shape)}}),fa=qs({batchNorm2d_:function(t,e,n,s,r,a){const i=Hs(t,"x","batchNorm"),o=Hs(e,"mean","batchNorm"),l=Hs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hs(r,"scale","batchNorm")),null!=s&&(c=Hs(s,"offset","batchNorm")),v(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),v(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),v(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&v(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&v(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),pa(i,o,l,c,u,a)}}),ma=qs({batchNorm3d_:function(t,e,n,s,r,a){const i=Hs(t,"x","batchNorm"),o=Hs(e,"mean","batchNorm"),l=Hs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hs(r,"scale","batchNorm")),null!=s&&(c=Hs(s,"offset","batchNorm")),v(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),v(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),v(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&v(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&v(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),pa(i,o,l,c,u,a)}}),ga=qs({batchNorm4d_:function(t,e,n,s,r,a){const i=Hs(t,"x","batchNorm"),o=Hs(e,"mean","batchNorm"),l=Hs(n,"variance","batchNorm");let u,c;return null!=r&&(u=Hs(r,"scale","batchNorm")),null!=s&&(c=Hs(s,"offset","batchNorm")),v(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),v(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),v(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&v(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&v(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),pa(i,o,l,c,u,a)}}),ba=qs({clipByValue_:function(t,e,n){const s=Hs(t,"x","clipByValue");v(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:e,clipValueMax:n};return as.runKernelFunc(((t,r)=>{const a=t.clip(s,e,n);return r([s]),a}),r,null,$t,a)}});function ya(t,e){const n=t[0].length;t.forEach(((t,e)=>{v(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),v(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=t[0];t.forEach(((t,r)=>{for(let a=0;a<n;a++)v(a===e||t[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${t}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function xa(t,e){const n=t[0].slice();for(let s=1;s<t.length;s++)n[e]+=t[s][e];return n}function wa(t,e,n){return sr(t,e,Ps(t,n),n)}const va=qs({concat_:function(t,e=0){v(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=js(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const s=n,r={axis:e};return as.runKernelFunc(((t,s)=>{const r=T(e,n[0].shape)[0],a=xa(n.map((t=>t.shape)),r);if(0===$(a))return wa([],a);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];ya(n.map((t=>t.shape)),r);const i=t.concat(n,r);return s(n),i}),s,null,Nt,r)}}),ka=qs({concat1d_:function(t){return va(t,0)}}),Ia=qs({concat2d_:function(t,e){return va(t,e)}}),Ca=qs({concat3d_:function(t,e){return va(t,e)}}),$a=qs({concat4d_:function(t,e){return va(t,e)}}),Sa=qs({conv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=Hs(t,"x","conv2d"),l=Hs(e,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=jr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),v(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&v(N(s),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];v(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),v(la(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=as.runKernelFunc(((t,e)=>{const o=ua(r),c=ta(u.shape,l.shape,n,a,s,i,!1,o),h=t.conv2d(u,l,c);return e([u,l]),h}),d,null,Et,p);return c?jr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Na=qs({conv1d_:function(t,e,n,s,r="NWC",a=1,i){const o=Hs(t,"x","conv1d"),l=Hs(e,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=jr(o,[1,o.shape[0],o.shape[1]])),v(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),v(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&v(N(s),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),v(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),v(la(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),v("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=jr(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=jr(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Sa(d,h,[1,n],s,"NHWC",[1,a],i);return jr(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Ea=qs({conv2DBackpropInput_:function(t,e,n,s,r,a="NHWC",i){v(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,l=e,u=!1;3===e.rank&&(u=!0,l=jr(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,t[0],t[1],t[2]]),v(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),v(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),v(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];v(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),v(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&v(N(r),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=as.runKernelFunc(((t,e)=>{const u=ua(a),c=ta(o,n.shape,s,1,r,i,!1,u),h=t.conv2dDerInput(l,n,c);return e([l,n]),h}),d,null,At,p);return u?jr(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ra=qs({conv2dTranspose_:function(t,e,n,s,r,a){const i=Hs(t,"x","conv2dTranspose"),o=Hs(e,"filter","conv2dTranspose");return Ea(n,i,o,s,r,"NHWC",a)}}),Aa=qs({conv3d_:function(t,e,n,s,r="NDHWC",a=[1,1,1]){const i=Hs(t,"x","conv3d"),o=Hs(e,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=jr(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),v(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),v(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),v(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),v(la(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),v("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=as.runKernelFunc(((t,e)=>{const r=ea(l.shape,o.shape,n,a,s),i=t.conv3d(l,o,r);return e([l,o]),i}),c,null,Dt,h);return u?jr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Da=qs({depthwiseConv2d_:function(t,e,n,s,r="NHWC",a=[1,1],i){const o=Hs(t,"x","depthwiseConv2d"),l=Hs(e,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=jr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),v(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),v(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&v(N(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},p=as.runKernelFunc(((t,e)=>{null==a&&(a=[1,1]),v(la(n,a),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const r=ta(u.shape,l.shape,n,a,s,i,!0),o=t.depthwiseConv2D(u,l,r);return e([u,l]),o}),h,null,Bt,d);return c?jr(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ta=qs({floorDiv_:function(t,e){let n=Hs(t,"a","floorDiv"),s=Hs(e,"b","floorDiv");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.floorDiv(n,s);return e([n,s]),r}),r,null,Qt)}}),Fa=qs({div_:function(t,e){let n=Hs(t,"a","div"),s=Hs(e,"b","div");if([n,s]=Qn(n,s),"int32"===n.dtype&&"int32"===s.dtype)return Ta(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.realDivide(n,s);return e([n,s]),r}),r,null,Vt,{})}}),Oa=qs({elu_:function(t){const e=Hs(t,"x","elu"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.elu(e);return n([s]),s}),n,null,Gt)}});function _a(t,e){const n=t.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=t[a]||1;(e[e.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Ma(t,e){const n=[];for(let s=0;s<e.length;s++){const r=t[t.length-s-1],a=e.length-s-1,i=e[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function Ba(t,e){const n=[],s=Math.max(t.length,e.length);for(let r=0;r<s;r++){let s=t[t.length-r-1];null==s&&(s=1);let a=e[e.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(s)}}return n}const La=qs({equal_:function(t,e){let n=Hs(t,"a","equal"),s=Hs(e,"b","equal");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.equal(n,s)),r,null,"Equal")}}),za=qs({exp_:function(t){const e=Hs(t,"x","exp"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.exp(e);return n([s]),s}),n,null,jt)}}),Wa=qs({expandDims_:function(t,e=0){const n=Hs(t,"x","expandDims",null);v(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s=n.shape.slice();return e<0&&(v(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),s.splice(e,0,1),jr(n,s)}}),Ua=qs({tile_:function(t,e){const n=Hs(t,"x","tile",null);v(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const s=[n],r={x:n},a={reps:e};return as.runKernelFunc(((t,s)=>{const r=t.tile(n,e);return s([n]),r}),r,null,rn,a,s)}}),Pa=qs({eye_:function(t,e,n,s="float32"){null==e&&(e=t);const r=Us([t,e],s),a=t<=e?t:e;for(let t=0;t<a;++t)r.set(1,t,t);const i=jr(r.toTensor(),[t,e]);if(null==n)return i;if(1===n.length)return Ua(Wa(i,0),[n[0],1,1]);if(2===n.length)return Ua(Wa(Wa(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ua(Wa(Wa(Wa(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Va(t,e,n){const s={shape:t,value:e,dtype:n};return as.runKernelFunc((s=>s.fill(t,e,n)),{},null,Xt,s)}const Ga=qs({floor_:function(t){const e=Hs(t,"x","floor"),n={x:e};return as.runKernelFunc((t=>t.floor(e)),n,null,Jt)}}),Ha=30;function ja(t){return t<=Ha?t:V(t,Math.floor(Math.sqrt(t)))}function qa(t,e){let n,s=!1;for(t<=Ha?(n=t,s=!0):n=V(t,Math.floor(Math.sqrt(t)));!s;)n>e||n===t?s=!0:n=V(t,n+1);return n}function Ka(t,e,n){const s=[],r=t.length;for(let a=0;a<r;a++)a!==e?s.push(t[a]):s.push(n);return s}function Xa(t,e,n){const s=t.shape[n],r=[];let a=1,i=1;for(let e=0;e<n;e++)r.push(t.shape[e]),a*=t.shape[e];for(let t=0;t<e.rank;t++)r.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)r.push(t.shape[e]),i*=t.shape[e];return{batchSize:a,sliceSize:i,dimSize:s,outputShape:r}}const Ya=qs({gather_:function(t,e,n=0){const s=Hs(t,"x","gather"),r=Hs(e,"indices","gather","int32"),a={x:s,indices:r},i={axis:n};return as.runKernelFunc(((t,e)=>{const a=T(n,s.shape)[0],i=Xa(s,r,a),o=t.gather(s,jr(r,[r.size]),a);return e([s,r]),jr(o,i.outputShape)}),a,null,te,i)}}),Ja=qs({greater_:function(t,e){let n=Hs(t,"a","greater"),s=Hs(e,"b","greater");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.greater(n,s)),r,null,"Greater")}}),Qa=qs({greaterEqual_:function(t,e){let n=Hs(t,"a","greaterEqual"),s=Hs(e,"b","greaterEqual");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.greaterEqual(n,s);return e([n,s]),r}),r,null,ee)}}),Za=qs({maximum_:function(t,e){let n=Hs(t,"a","maximum"),s=Hs(e,"b","maximum");[n,s]=Qn(n,s),"bool"===n.dtype&&(n=Ks(n,"int32"),s=Ks(s,"int32")),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.maximum(n,s);return e([n,s]),r}),r,null,pe)}}),ti=qs({mul_:function(t,e){let n=Hs(t,"a","mul"),s=Hs(e,"b","mul");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.multiply(n,s);return e([n,s]),r}),r,null,ve)}}),ei=qs({leakyRelu_:function(t,e=.2){const n=Hs(t,"x","leakyRelu");return Za(ti(Or(e),n),n)}}),ni=qs({log_:function(t){const e=Hs(t,"x","log"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.log(e);return n([e]),s}),n,null,le)}}),si=qs({max_:function(t,e=null,n=!1){const s=Hs(t,"x","max"),r={x:s},a={reductionIndices:e,keepDims:n};return as.runKernelFunc(((t,r)=>{let a=T(e,s.shape);const i=Vr(a,s.rank);let o=s;null!=i&&(o=qr(s,i),a=Hr(a.length,o.rank));const l=t.max(o,a);null!=i&&o.dispose();let u=l;if(n){const t=Ur(u.shape,T(e,s.shape));u=jr(u,t),l.dispose()}return r([s,u]),u}),r,null,de,a)}}),ri=qs({sub_:function(t,e){let n=Hs(t,"a","sub"),s=Hs(e,"b","sub");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.subtract(n,s);return e([n,s]),r}),r,null,en)}}),ai=qs({sum_:function(t,e=null,n=!1){let s=Hs(t,"x","sum");"bool"===s.dtype&&(s=Ks(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return as.runKernelFunc(((t,r)=>{r([s]);const a=T(e,s.shape),i=Vr(a,s.rank);let o=a,l=s;null!=i&&(l=qr(s,i),o=Hr(o.length,s.rank));let u=t.sum(l,o);if(n){const t=Ur(u.shape,a);u=jr(u,t)}return u}),r,null,"Sum",a)}}),ii=qs({logSoftmax_:function(t,e=-1){const n=Hs(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const s={logits:n},r={axis:e};return as.runKernelFunc(((n,s)=>{const r=si(t,e,!0),a=ri(t,r),i=ri(Ks(a,"float32"),ni(ai(za(a),e,!0)));return s([i]),i}),s,null,he,r)}}),oi=qs({logicalAnd_:function(t,e){const n=Hs(t,"a","logicalAnd","bool"),s=Hs(e,"b","logicalAnd","bool");Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.logicalAnd(n,s)),r,null,"LogicalAnd")}}),li=qs({maxPool_:function(t,e,n,s,r){const a=Hs(t,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=jr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),v(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),v(la(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=r&&v(N(s),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const l={x:i},u={filterSize:e,strides:n,pad:s,dimRoundingMode:r},c=as.runKernelFunc(((t,a)=>{const o=Qr(i.shape,e,n,1,s,r);let l;return l=1===o.filterWidth&&1===o.filterHeight&&S(o.inShape,o.outShape)?i.clone():t.maxPool(i,o),a([i,l]),l}),l,null,fe,u);return o?jr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ui=qs({maxPool3d_:function(t,e=[1,1,1],n,s,r,a="NDHWC",i){null==i?i=[1,1,1]:$r("dilations is deprecated, this field will be gone in v3.0.0.");const o=Hs(t,"x","maxPool3d");let l=o,u=!1;4===o.rank&&(u=!0,l=jr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),v(5===l.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`)),v("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),v(la(n,i),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),null!=r&&v(N(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const c={x:l},h={filterSize:e,strides:n,pad:s,dimRoundingMode:r,dataFormat:a,dilations:i},d=as.runKernelFunc(((t,o)=>{null==i&&(i=[1,1,1]);const u=Zr(l.shape,e,n,i,s,r,a),c=t.maxPool3d(l,u);return o([l,c]),c}),c,null,ge,h);return u?jr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ci=qs({complex_:function(t,e){const n=Hs(t,"real","complex"),s=Hs(e,"imag","complex");k(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return as.runKernelFunc((t=>t.complex(n,s)),r,null,St)}});function hi(t,e="float32"){if("complex64"===e){const e=hi(t,"float32"),n=hi(t,"float32");return ci(e,n)}const n=K($(t),e);return as.makeTensor(n,t,e)}function di(t,e="float32"){if("complex64"===e){const e=di(t,"float32"),n=hi(t,"float32");return ci(e,n)}const n=q($(t),e);return as.makeTensor(n,t,e)}const pi=qs({mean_:function(t,e=null,n=!1){const s=Hs(t,"x","mean"),r=T(e,s.shape),a=$(Wr(s.shape,r)[1]),i={x:s},o={axis:e,keepDims:n},l=()=>{const t=Or(a),r=t.dtype===s.dtype?s:Ks(s,t.dtype),i=Fa(r,t);return ai(i,e,n)};return Fr((t=>({value:as.runKernelFunc(l,i,null,ye,o),gradFunc:e=>{const n=t.shape.slice();r.forEach((t=>{n[t]=1}));const s=jr(e,n);return Fa(ti(s,di(t.shape,"float32")),a)}})))(s)}}),fi=qs({min_:function(t,e=null,n=!1){const s=Hs(t,"x","min"),r={x:s},a={axis:e,keepDims:n};return as.runKernelFunc(((t,r)=>{const a=T(e,s.shape);let i=a;const o=Vr(i,s.rank);let l=s;null!=o&&(l=qr(s,o),i=Hr(i.length,s.rank));const u=t.min(l,i);null!=o&&l.dispose();let c=u;if(n){const t=Ur(c.shape,a);c=jr(u,t),u.dispose()}return r([s,c]),c}),r,null,"Min",a)}}),mi=qs({minimum_:function(t,e){let n=Hs(t,"a","minimum"),s=Hs(e,"b","minimum");[n,s]=Qn(n,s),"bool"===n.dtype&&(n=Ks(n,"int32"),s=Ks(s,"int32")),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.minimum(n,s);return e([n,s]),r}),r,null,xe)}}),gi=qs({square_:function(t){const e=Hs(t,"x","square"),n=[e];return as.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}}),bi=qs({moments_:function(t,e=null,n=!1){const s=T(e,(t=Hs(t,"x","moments")).shape),r=pi(t,s,n);let a=r.shape;n||(a=Ur(r.shape,s));const i=gi(ri(Ks(t,"float32"),jr(r,a)));return{mean:r,variance:pi(i,s,n)}}}),yi=qs({neg_:function(t){const e=Hs(t,"x","neg"),n={x:e};return as.runKernelFunc((t=>t.neg(e)),n,null,ke)}}),xi=qs({notEqual_:function(t,e){let n=Hs(t,"a","notEqual"),s=Hs(e,"b","notEqual");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.notEqual(n,s)),r,null,Ie)}}),wi=qs({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const r=Hs(t,"indices","oneHot","int32"),a=[...r.shape,e],i={indices:r},o={depth:e,onValue:n,offValue:s};return as.runKernelFunc(((t,i)=>(i([r]),jr(t.oneHot(jr(r,[r.size]),e,n,s),a))),i,null,Ee,o)}}),vi=qs({imag_:function(t){const e=Hs(t,"input","imag"),n={input:e};return as.runKernelFunc((t=>t.imag(e)),n,null,re)}}),ki=qs({real_:function(t){const e=Hs(t,"input","real"),n={input:e};return as.runKernelFunc((t=>t.real(e)),n,null,De)}}),Ii=qs({zerosLike_:function(t){const e=Hs(t,"x","zerosLike"),n={x:e};return as.runKernelFunc((t=>t.zerosLike(e)),n,null,cn)}}),Ci=qs({onesLike_:function(t){const e=Hs(t,"x","onesLike"),n={x:e};return as.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=Ci(ki(e)),n=Ii(vi(e));return ci(t,n)}return t.onesLike(e)}),n,null,Ne)}}),$i=qs({pad_:function(t,e,n=0){const s=Hs(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:n},a={x:s};return as.runKernelFunc(((t,r)=>(r([s]),t.pad(s,e,n))),a,null,Re,r)}}),Si=qs({pad3d_:function(t,e,n=0){return v(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$i(t,e,n)}}),Ni=qs({prelu_:function(t,e){const n=Hs(t,"x","prelu"),s=Hs(e,"alpha","prelu"),r={x:n,alpha:s};return as.runKernelFunc(((t,e)=>{const r=t.prelu(n,s);return e([n,s]),r}),r,null,Ae)}});var Ei=n(377);class Ri{constructor(t,e,n,s,r){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=Ei.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);t=this.mean+this.stdDev*s*i,e=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Ai{constructor(t=0,e=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Ei.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Di=qs({randomNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new Ri(e,n,s,!1,r),i=Us(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),Ti=qs({randomUniform_:function(t,e=0,n=1,s="float32",r){const a=Us(t,s),i=new Ai(e,n,null,r);for(let t=0;t<a.values.length;t++)a.values[t]=i.nextValue();return a.toTensor()}});function Fi(t,e){I(t);const n=Ps(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sr(t,null,n,e)}function Oi(t,e,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:t,stop:e,step:n,dtype:s};return as.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return hi([0],s);const r=K(Math.abs(Math.ceil((e-t)/n)),s);e<t&&1===n&&(n=-1),r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+n;return Fi(r,s)}),{},null,"Range",r)}const _i=qs({relu_:function(t){const e=Hs(t,"x","relu"),n={x:e};return as.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Ks(e,"int32"):t.relu(e))),n,null,Fe)}}),Mi=qs({reverse_:function(t,e){const n=Hs(t,"x","reverse"),s={x:n},r={dims:e};return as.runKernelFunc((t=>{const s=T(e,n.shape);if(0===n.rank)return Xs(n);const r=t.reverse(n,s);return jr(r,n.shape)}),s,null,Le,r)}}),Bi=qs({selu_:function(t){const e=Hs(t,"x","selu"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.selu(e);return n([e]),s}),n,null,Pe)}}),Li=qs({separableConv2d_:function(t,e,n,s,r,a=[1,1],i="NHWC"){const o=Hs(t,"x","separableConv2d"),l=Hs(e,"depthwiseFilter","separableConv2d"),u=Hs(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=jr(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");v(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),v(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),v(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),v(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),v(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];v(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Da(c,l,s,r,i,a),m=Sa(f,u,1,"valid",i);return h?jr(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),zi=qs({sigmoid_:function(t){const e=Hs(t,"x","sigmoid"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.sigmoid(e);return n([s]),s}),n,null,qe)}}),Wi=qs({slice_:function(t,e,n){const s=Hs(t,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:e,size:n};return as.runKernelFunc(((t,r)=>{const[a,i]=wr(s,e,n);return ir(s,a,i),r([s]),t.slice(s,a,i)}),r,null,Ve,a)}}),Ui=qs({slice1d_:function(t,e,n){const s=Hs(t,"x","slice1d");return v(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),Wi(s,[e],[n])}}),Pi=qs({slice2d_:function(t,e,n){const s=Hs(t,"x","slice2d");return v(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),Wi(s,e,n)}}),Vi=qs({slice3d_:function(t,e,n){const s=Hs(t,"x","slice3d");return v(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),Wi(s,e,n)}}),Gi=qs({slice4d_:function(t,e,n){const s=Hs(t,"x","slice4d");return v(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),Wi(s,e,n)}}),Hi=qs({softmax_:function(t,e=-1){const n=Hs(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},r={dim:e};return as.runKernelFunc(((t,s)=>{const r=t.softmax(n,e);return s([r]),r}),s,null,Qe,r)}}),ji=qs({softplus_:function(t){const e=Hs(t,"x","softplus"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.softplus(e);return n([e]),s}),n,null,Ke)}});function qi(t,e,n=0){let s=[];if("number"==typeof e)v(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(e).fill(t.shape[n]/e);else{v(e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0)<=1,(()=>"There should be only one negative value in split array."));const r=e.indexOf(-1);if(-1!==r){const s=e.reduce(((t,e)=>e>0?t+e:t));e[r]=t.shape[n]-s}v(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=e}return s}const Ki=qs({split_:function(t,e,n=0){const s=Hs(t,"x","split"),r={x:s},a={numOrSizeSplits:e,axis:n};return as.runKernelFunc(((t,r)=>{const a=T(n,s.shape)[0],i=qi(s,e,a);return t.split(s,i,a)}),r,null,Je,a)}}),Xi=qs({sqrt_:function(t){const e=Hs(t,"x","sqrt"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.sqrt(e);return n([e]),s}),n,null,Xe)}}),Yi=qs({squeeze_:function(t,e){const n=Hs(t,"x","squeeze");return jr(n,F(n.shape,e).newShape)}}),Ji=qs({stack_:function(t,e=0){const n=js(t,"tensors","stack");if(v(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return Wa(n[0],e);const s=n[0].rank,r=n[0].shape,a=n[0].dtype;v(e<=s,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{k(r,t.shape,"All tensors passed to stack must have matching shapes"),v(a===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=n.map((t=>Wa(t,e)));return va(i,e)}}),Qi=qs({tanh_:function(t){const e=Hs(t,"x","tanh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.tanh(e);return n([s]),s}),n,null,sn)}});function Zi(t,e,n){if(I(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Ps(t,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sr(t,e,s,n)}function to(t,e,n){if(I(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Ps(t,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sr(t,e,s,n)}const eo=qs({truncatedNormal_:function(t,e=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new Ri(e,n,s,!0,r),i=Us(t,s);for(let t=0;t<i.values.length;t++)i.values[t]=a.nextValue();return i.toTensor()}}),no=qs({unstack_:function(t,e=0){const n=Hs(t,"x","unstack");v(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const s={value:n},r={axis:e};return as.runKernelFunc((t=>t.unstack(n,e)),s,null,ln,r)}});function so(t,e=!0,n,s){return as.makeVariable(t,e,n,s)}const ro=qs({broadcastTo_:function(t,e){let n=Hs(t,"broadcastTo","x");const s=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=jr(n,t)}const r=n.shape,a=Array.from(e);for(let t=e.length-1;t>=0;t--)if(r[t]===e[t])a[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(0===a.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return Xs(n);const i={x:n},o={shape:e,inputShape:r};return as.runKernelFunc((t=>t.tile(n,a)),i,null,kt,o)}}),ao=qs({where_:function(t,e,n){const s=Hs(e,"a","where"),r=Hs(n,"b","where"),a=Hs(t,"condition","where","bool"),i=Ba(s.shape,r.shape),o=ro(s,i),l=ro(r,i);1===a.rank&&v(a.shape[0]===s.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==a.rank&&k(a.shape,l.shape,"Error in where: ");const u={condition:a,t:o,e:l};return as.runKernelFunc(((t,e)=>{const n=t.select(a,o,l);return e([a]),n}),u,null,Ue)}}),io=qs({dropout_:function(t,e,n,s){const r=Hs(t,"x","dropout");if(v("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),v(e>=0&&e<1,(()=>`rate must be a float in the range [0, 1), but got ${e}.`)),0===e)return t instanceof Pn?r.clone():r;const a=function(t,e){if(null==e)return t.shape.slice();if(S(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let s=0;s<t.shape.length;s++)null==e[s]&&null!=t.shape[s]?n.push(t.shape[s]):n.push(e[s]);return n}return e}(r,n),i=1-e,o=Fa(Ga(Br(Ti(a,0,1,"float32",s),i)),i);return ti(r,o)}}),oo=qs({fft_:function(t){v("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return as.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=t.as2D(s,n);return e.fft(r).reshape(t.shape)}),e,null,Kt)}}),lo=qs({rfft_:function(t,e){v("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const s=t.size/n;let r;if(null!=e&&e<n){const s=t.shape.map((t=>0)),a=t.shape.map((t=>t));a[t.shape.length-1]=e,r=Wi(t,s,a),n=e}else if(null!=e&&e>n){const s=t.shape.map((t=>t));s[t.shape.length-1]=e-n,r=va([t,hi(s)],t.shape.length-1),n=e}else r=t;const a=Ii(r),i=jr(ci(r,a),[s,n]),o=oo(i),l=Math.floor(n/2)+1,u=ki(o),c=vi(o),h=Ki(u,[l,n-l],u.shape.length-1),d=Ki(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,jr(ci(h[0],d[0]),p)}}),uo=qs({ifft_:function(t){v("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return as.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],s=t.size/n,r=jr(t,[s,n]),a=e.ifft(r);return jr(a,t.shape)}),e,null,se)}}),co=qs({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let s;if(e<=2){const r=jr(t,[n,e]);s=uo(r)}else{const r=[n,2*(e-1)],a=jr(ki(t),[n,e]),i=jr(vi(t),[n,e]),o=Mi(Wi(a,[0,1],[n,e-2]),1),l=ti(Mi(Wi(i,[0,1],[n,e-2]),1),Or(-1)),u=va([a,o],1),c=va([i,l],1),h=jr(ci(u,c),[r[0],r[1]]);s=uo(h)}if(s=ki(s),3===t.rank&&0!==t.shape[0]){const e=s,n=t.shape[0];s=jr(s,[n,s.shape[0]/n,s.shape[1]]),e.dispose()}return s}}),ho=qs({conv2DBackpropFilter_:function(t,e,n,s,r,a="NHWC",i){let o=t;3===t.rank&&(o=jr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=jr(e,[1,e.shape[0],e.shape[1],e.shape[2]])),v(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),v(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),v(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];v(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),v(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&v(N(r),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return as.runKernelFunc((t=>{const e=ua(a),u=ta(o.shape,n,s,1,r,i,!1,e);return t.conv2dDerFilter(o,l,u)}),h,null,Rt,d)}}),po=qs({relu6_:function(t){const e=Hs(t,"x","relu6"),n={x:e};return as.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?Ks(e,"int32"):t.relu6(e))),n,null,Be)}}),fo=qs({step_:function(t,e=0){const n=Hs(t,"x","step"),s={x:n},r={alpha:e};return as.runKernelFunc((t=>t.step(n,e)),s,null,hn,r)}});function mo(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return ti(t,fo(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function go(t,e){let n=e;const s=Ma(t.shape,e.shape);return s.length>0&&(n=ai(n,s)),jr(n,t.shape)}function bo(t,e,n){if("linear"===e)return t;if("relu"===e)return _i(t);if("elu"===e)return Oa(t);if("relu6"===e)return po(t);if("prelu"===e)return Ni(t,n);throw new Error(`Unknown fused activation ${e}.`)}const yo=(t,e)=>!(t>0)||"linear"===e,xo=qs({fusedConv2d_:function({x:t,filter:e,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u}){if(l=l||"linear",!1===yo(as.state.gradientDepth,l)){let c=Sa(t,e,n,s,r,a,i);return null!=o&&(c=Br(c,o)),bo(c,l,u)}const c=Hs(t,"x","conv2d"),h=Hs(e,"filter","conv2d");let d=c,p=!1;3===c.rank&&(p=!0,d=jr(c,[1,c.shape[0],c.shape[1],c.shape[2]])),v(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),v(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),null!=i&&v(N(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),v(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),v(la(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),v("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const f=ta(d.shape,h.shape,n,a,s,i);let m,g;null!=o&&(m=Hs(o,"bias","fused conv2d"),[m]=Qn(m,c),Ba(f.outShape,m.shape)),null!=u&&(g=Hs(u,"prelu weights","fused conv2d"));const b=(t,e)=>{const[r,i,o,u]=e,c=mo(t,o,l);v(oa(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Ea(i.shape,c,r,n,s),ho(i,c,r.shape,n,s)];if(null!=u){const t=go(u,c);h.push(t)}return h},y=t=>t.fusedConv2d({input:d,filter:h,convInfo:f,bias:m,activation:l,preluActivationWeights:g}),x={x:d,filter:h,bias:m,preluActivationWeights:g},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l};return null==o?Fr(((t,e,n)=>{let s=as.runKernelFunc(y,x,null,mn,w);return n([e,t,s]),p&&(s=jr(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}))(d,h):Fr(((t,e,n,s)=>{let r=as.runKernelFunc(y,x,null,mn,w);return s([e,t,r,n]),p&&(r=jr(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(d,h,m)}}),wo=qs({matMul_:function(t,e,n=!1,s=!1){let r=Hs(t,"a","matMul"),a=Hs(e,"b","matMul");[r,a]=Qn(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return as.runKernelFunc(((t,e)=>{e([r,a]);const i=n?r.shape[r.rank-2]:r.shape[r.rank-1],o=s?a.shape[a.rank-1]:a.shape[a.rank-2],l=n?r.shape[r.rank-1]:r.shape[r.rank-2],u=s?a.shape[a.rank-2]:a.shape[a.rank-1],c=r.shape.slice(0,-2),h=a.shape.slice(0,-2),d=$(c),p=$(h),f=d===p||1===d||1===p;v(r.rank>=2&&a.rank>=2&&f,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${c}) and (${h}).`)),v(i===o,(()=>`Error in matMul: inner shapes (${i}) and (${o}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${n} and transposeB=${s} must match.`));const m=(d>p?c:h).concat([l,u]),g=jr(r,n?[d,i,l]:[d,l,i]),b=jr(a,s?[p,u,o]:[p,o,u]),y=t.batchMatMul(g,b,n,s);return jr(y,m)}),i,null,wt,o)}}),vo=qs({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i}){if(!1===yo(as.state.gradientDepth,a)){let o=wo(t,e,n,s);return null!=r&&(o=Br(o,r)),bo(o,a,i)}let o=Hs(t,"a","fused matMul"),l=Hs(e,"b","fused matMul");[o,l]=Qn(o,l);const u=n?o.shape[o.rank-2]:o.shape[o.rank-1],c=s?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?o.shape[o.rank-1]:o.shape[o.rank-2],d=s?l.shape[l.rank-2]:l.shape[l.rank-1],p=o.shape.slice(0,-2),f=l.shape.slice(0,-2),m=$(p),g=$(f);v(o.rank>=2&&l.rank>=2&&o.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${o.rank} and ${l.rank}.`)),v(S(p,f),(()=>`Error in fused matMul: outer dimensions (${p}) and (${f}) of Tensors with shapes ${o.shape} and ${l.shape} must match.`)),v(u===c,(()=>`Error in fused matMul: inner shapes (${u}) and (${c}) of Tensors with shapes ${o.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=o.shape.slice(0,-2).concat([h,d]),y=jr(o,n?[m,u,h]:[m,h,u]),x=jr(l,s?[g,d,c]:[g,c,d]);let w,k;null!=r&&(w=Hs(r,"bias","fused matMul"),[w]=Qn(w,o),Ba(b,w.shape)),null!=i&&(k=Hs(i,"prelu weights","fused matMul"));const I=(t,e)=>{const[i,o,l,u]=e,c=mo(jr(t,l.shape),l,a);let h,d;return n||s?!n&&s?(h=wo(c,o,!1,!1),d=wo(c,i,!0,!1)):n&&!s?(h=wo(o,c,!1,!0),d=wo(i,c,!1,!1)):(h=wo(o,c,!0,!0),d=wo(c,i,!0,!0)):(h=wo(c,o,!1,!0),d=wo(i,c,!0,!1)),null!=r?[h,d,go(u,c)]:[h,d]},C=t=>t.fusedBatchMatMul({a:y,b:x,transposeA:n,transposeB:s,bias:w,activation:a,preluActivationWeights:k}),N={a:y,b:x,bias:w,preluActivationWeights:k},E={transposeA:n,transposeB:s,activation:a};return null==r?Fr(((t,e,n)=>{const s=as.runKernelFunc(C,N,null,fn,E);return n([t,e,s]),{value:jr(s,b),gradFunc:I}}))(y,x):Fr(((t,e,n,s)=>{const r=as.runKernelFunc(C,N,null,fn,E);return s([t,e,r,n]),{value:jr(r,b),gradFunc:I}}))(y,x,w)}});function ko(t,e,n){const s=1-t%2,r=new Float32Array(t);for(let a=0;a<t;++a){const i=2*Math.PI*a/(t+s-1);r[a]=e-n*Math.cos(i)}return Fi(r,"float32")}qs({hammingWindow_:function(t){return ko(t,.54,.46)}});const Io=qs({hannWindow_:function(t){return ko(t,.5,.5)}}),Co=qs({frame_:function(t,e,n,s=!1,r=0){let a=0;const i=[];for(;a+e<=t.size;)i.push(Wi(t,a,e)),a+=n;if(s)for(;a<t.size;){const s=a+e-t.size,o=va([Wi(t,a,e-s),Va([s],r)]);i.push(o),a+=n}return 0===i.length?Zi([],[0,e]):jr(va(i),[i.length,e])}});function $o(t,e,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=t.shape[0];return n=Math.min(n,i),v(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),v(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),v(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),v(1===e.rank,(()=>"scores must be a 1D tensor")),v(e.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`)),v(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function So(t,e,n){const s=function(t,e,n){return function(t,e,n){let s=0,r=t.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(e,t[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(t,e,n||No)}(t,e,n),r=s<0?-(s+1):s;t.splice(r,0,e)}function No(t,e){return t>e?1:t<e?-1:0}function Eo(t,e,n,s,r){return Do(t,e,n,s,r,0).selectedIndices}function Ro(t,e,n,s,r,a){return Do(t,e,n,s,r,0,!1,a,!0)}function Ao(t,e,n,s,r,a){return Do(t,e,n,s,r,a,!0)}function Do(t,e,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let t=0;t<e.length;t++)e[t]>r&&u.push({score:e[t],boxIndex:t,suppressBeginIndex:0});u.sort(Oo);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const e=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=e;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=To(t,a,h[n]);if(i>=s){o=!0;break}if(e.score=e.score*Fo(s,c,i),e.score<=r)break}e.suppressBeginIndex=h.length,o||(e.score===n?(h.push(a),d.push(e.score)):e.score>r&&So(u,e,Oo))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:Fi(h,"int32")};return i&&(m.selectedScores=Fi(d,"float32")),l&&(m.validOutputs=Or(p,"int32")),m}function To(t,e,n){const s=t.subarray(4*e,4*e+4),r=t.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(p+f-x)}function Fo(t,e,n){const s=Math.exp(e*n*n);return n<=t?s:0}function Oo(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}qs({stft_:function(t,e,n,s,r=Io){var a;null==s&&(a=e,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Co(t,e,n),o=ti(i,r(e)),l=[];for(let t=0;t<i.shape[0];t++)l.push(lo(Wi(o,[t,0],[1,e]),s));return va(l)}}),qs({cropAndResize_:function(t,e,n,s,r,a){const i=Hs(t,"image","cropAndResize"),o=Hs(e,"boxes","cropAndResize","float32"),l=Hs(n,"boxInd","cropAndResize","int32");r=r||"bilinear",a=a||0;const u=o.shape[0];v(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),v(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),v(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),v(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),v(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),v("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return as.runKernelFunc((t=>t.cropAndResize(i,o,l,s,r,a)),c,null,"CropAndResize",h)}}),qs({flipLeftRight_:function(t){const e=Hs(t,"image","flipLeftRight","float32");v(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return as.runKernel(Yt,n,{})}}),qs({rotateWithOffset_:function(t,e,n=0,s=.5){const r=Hs(t,"image","rotateWithOffset","float32");v(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:e,fillValue:n,center:s};return as.runKernel(pn,a,i)}}),qs({nonMaxSuppression_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Hs(t,"boxes","nonMaxSuppression"),i=Hs(e,"scores","nonMaxSuppression"),o=$o(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return as.runKernelFunc((t=>t.nonMaxSuppression(a,i,n,s,r)),{boxes:a,scores:i},null,Ce,l)}}),qs({nonMaxSuppressionWithScore_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Hs(t,"boxes","nonMaxSuppression"),o=Hs(e,"scores","nonMaxSuppression"),l=$o(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=as.runKernel(Se,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),qs({nonMaxSuppressionPadded_:function(t,e,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Hs(t,"boxes","nonMaxSuppression"),o=Hs(e,"scores","nonMaxSuppression"),l=$o(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=as.runKernel($e,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const _o=qs({resizeBilinear_:function(t,e,n=!1){const s=Hs(t,"images","resizeBilinear");v(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),v(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let r=s,a=!1;3===s.rank&&(a=!0,r=jr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[i,o]=e,l={images:r},u={alignCorners:n,size:e},c=as.runKernelFunc(((t,e)=>(e([r]),t.resizeBilinear(r,i,o,n))),l,null,Me,u);return a?jr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Mo=qs({resizeNearestNeighbor_:function(t,e,n=!1){const s=Hs(t,"images","resizeNearestNeighbor");v(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),v(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),v("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let r=s,a=!1;3===s.rank&&(a=!0,r=jr(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[i,o]=e,l={images:r},u={alignCorners:n,size:e},c=as.runKernelFunc(((t,e)=>(e([r]),t.resizeNearestNeighbor(r,i,o,n))),l,null,_e,u);return a?jr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Bo=qs({lessEqual_:function(t,e){let n=Hs(t,"a","lessEqual"),s=Hs(e,"b","lessEqual");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.lessEqual(n,s);return e([n,s]),r}),r,null,"LessEqual")}}),Lo=qs({bandPart_:function(t,e,n){v(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),v(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Hs(t,"a","bandPart");v(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(e<=a))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);e<0&&(e=a),n<0&&(n=i);const o=jr(Oi(0,a,1,"int32"),[-1,1]),l=Oi(0,i,1,"int32"),u=ri(o,l),c=oi(Bo(u,Or(+e,"int32")),Qa(u,Or(-n,"int32"))),h=hi([a,i],s.dtype);return jr(Ji(no(jr(s,[-1,a,i])).map((t=>ao(c,t,h)))),r)}}),zo=qs({pow_:function(t,e){let n=Hs(t,"base","pow"),s=Hs(e,"exp","pow");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.pow(n,s);return e([n,s,r]),r}),r,null,"Pow")}});function Wo(t,e,n=null){if(0===t.rank)return Mr(t);if(1!==t.rank&&null===n)return Wo(jr(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return ai(Mr(t),n);if(e===1/0)return si(Mr(t),n);if(e===-1/0)return fi(Mr(t),n);if("euclidean"===e||2===e)return Xi(ai(zo(Mr(t),Or(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return si(ai(Mr(t),n[0]),n[1]-1);if(e===1/0)return si(ai(Mr(t),n[1]),n[0]);if(e===-1/0)return fi(ai(Mr(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Xi(ai(gi(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Uo=qs({norm_:function(t,e="euclidean",n=null,s=!1){const r=Wo(t=Hs(t,"x","norm"),e,n);let a=r.shape;if(s){const e=T(n,t.shape);a=Ur(r.shape,e)}return jr(r,a)}}),Po=qs({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,v(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)v(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=Ki(t,t.shape[0],0).map((t=>Yi(t,[0])));v(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],s=t;for(let e=0;e<t.length;++e)n.push(as.tidy((()=>{let t=s[e];if(e>0)for(let s=0;s<e;++s){const e=ti(ai(ti(n[s],t)),n[s]);t=ri(t,e)}return Fa(t,Uo(t,"euclidean"))})));return e?Ji(n,0):n}});function Vo(t,e=!1){return as.tidy((()=>{v(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],s=t.shape[1];let r=Pa(n),a=Xs(t);const i=Zi([[1]],[1,1]);let o=Xs(i);const l=n>=s?s:n;for(let t=0;t<l;++t){const e=a,l=o,u=r;[o,a,r]=as.tidy((()=>{const e=Wi(a,[t,t],[n-t,1]),l=Uo(e),u=Wi(a,[t,t],[1,1]),c=ao(Ja(u,0),Zi([[-1]]),Zi([[1]])),h=ri(u,ti(c,l)),d=Fa(e,h);o=1===d.shape[0]?Xs(i):va([i,Wi(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=yi(Fa(wo(c,h),l)),f=Wi(a,[t,0],[n-t,s]),m=ti(p,o),g=qr(o);if(0===t)a=ri(f,wo(m,wo(g,f)));else{const e=ri(f,wo(m,wo(g,f)));a=va([Wi(a,[0,0],[t,s]),e],0)}const b=qr(m),y=Wi(r,[0,t],[n,r.shape[1]-t]);if(0===t)r=ri(y,wo(wo(y,o),b));else{const e=ri(y,wo(wo(y,o),b));r=va([Wi(r,[0,0],[n,t]),e],1)}return[o,a,r]})),Rr([e,l,u])}return!e&&n>s&&(r=Wi(r,[0,0],[n,s]),a=Wi(a,[0,0],[s,s])),[r,a]}))}const Go=qs({qr_:function(t,e=!1){if(v(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return Vo(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),s=no(jr(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),r=[],a=[];return s.forEach((t=>{const[n,s]=Vo(t,e);r.push(n),a.push(s)})),[jr(Ji(r,0),t.shape),jr(Ji(a,0),t.shape)]}}});var Ho;!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ho||(Ho={}));const jo=qs({computeWeightedLoss_:function(t,e,n=Ho.SUM_BY_NONZERO_WEIGHTS){const s=Hs(t,"losses","computeWeightedLoss");let r=null;null!=e&&(r=Hs(e,"weights","computeWeightedLoss"));const a=null==r?s:ti(s,r);if(n===Ho.NONE)return a;if(n===Ho.SUM)return ai(a);if(n===Ho.MEAN){if(null==r)return pi(a);{const t=s.size/r.size,e=Fa(ai(a),ai(r));return t>1?Fa(e,Or(t)):e}}if(n===Ho.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Fa(ai(a),Or(s.size));{const t=ti(r,di(s.shape)),e=Ks(ai(xi(t,Or(0))),"float32");return Fa(ai(a),e)}}throw Error(`Unknown reduction: ${n}`)}});qs({absoluteDifference_:function(t,e,n,s=Ho.SUM_BY_NONZERO_WEIGHTS){const r=Hs(t,"labels","absoluteDifference"),a=Hs(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Hs(n,"weights","absoluteDifference")),k(r.shape,a.shape,"Error in absoluteDifference: ");const o=Mr(ri(r,a));return jo(o,i,s)}}),qs({cosineDistance_:function(t,e,n,s,r=Ho.SUM_BY_NONZERO_WEIGHTS){const a=Hs(t,"labels","cosineDistance"),i=Hs(e,"predictions","cosineDistance");let o=null;null!=s&&(o=Hs(s,"weights","cosineDistance")),k(a.shape,i.shape,"Error in cosineDistance: ");const l=Or(1),u=ri(l,ai(ti(a,i),n,!0));return jo(u,o,r)}}),qs({hingeLoss_:function(t,e,n,s=Ho.SUM_BY_NONZERO_WEIGHTS){let r=Hs(t,"labels","hingeLoss");const a=Hs(e,"predictions","hingeLoss");let i=null;null!=n&&(i=Hs(n,"weights","hingeLoss")),k(r.shape,a.shape,"Error in hingeLoss: ");const o=Or(1);r=ri(ti(Or(2),r),o);const l=_i(ri(o,ti(r,a)));return jo(l,i,s)}}),qs({huberLoss_:function(t,e,n,s=1,r=Ho.SUM_BY_NONZERO_WEIGHTS){const a=Hs(t,"labels","huberLoss"),i=Hs(e,"predictions","huberLoss");let o=null;null!=n&&(o=Hs(n,"weights","huberLoss")),k(a.shape,i.shape,"Error in huberLoss: ");const l=Or(s),u=Mr(ri(i,a)),c=mi(u,l),h=ri(u,c),d=Br(ti(Or(.5),gi(c)),ti(l,h));return jo(d,o,r)}}),qs({logLoss_:function(t,e,n,s=1e-7,r=Ho.SUM_BY_NONZERO_WEIGHTS){const a=Hs(t,"labels","logLoss"),i=Hs(e,"predictions","logLoss");let o=null;null!=n&&(o=Hs(n,"weights","logLoss")),k(a.shape,i.shape,"Error in logLoss: ");const l=Or(1),u=Or(s),c=yi(ti(a,ni(Br(i,u)))),h=ti(ri(l,a),ni(Br(ri(l,i),u))),d=ri(c,h);return jo(d,o,r)}});const qo=qs({squaredDifference_:function(t,e){let n=Hs(t,"a","squaredDifference"),s=Hs(e,"b","squaredDifference");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.squaredDifference(n,s);return e([n,s]),r}),r,null,Ze,{})}});qs({meanSquaredError_:function(t,e,n,s=Ho.SUM_BY_NONZERO_WEIGHTS){const r=Hs(t,"labels","meanSquaredError"),a=Hs(e,"predictions","meanSquaredError");let i=null;null!=n&&(i=Hs(n,"weights","meanSquaredError")),k(r.shape,a.shape,"Error in meanSquaredError: ");const o=qo(r,a);return jo(o,i,s)}});const Ko=qs({log1p_:function(t){const e=Hs(t,"x","log1p"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.log1p(e);return n([e]),s}),n,null,ue)}});qs({sigmoidCrossEntropy_:function(t,e,n,s=0,r=Ho.SUM_BY_NONZERO_WEIGHTS){let a=Hs(t,"multiClassLabels","sigmoidCrossEntropy");const i=Hs(e,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Hs(n,"weights","sigmoidCrossEntropy")),k(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const t=Or(s),e=Or(1),n=Or(.5);a=Br(ti(a,ri(e,t)),ti(n,t))}const l=function(t,e){const n=Hs(t,"labels","sigmoidCrossEntropyWithLogits"),s=Hs(e,"logits","sigmoidCrossEntropyWithLogits");k(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=_i(s),a=ti(s,n),i=Ko(za(yi(Mr(s))));return Br(ri(r,a),i)}(a,i);return jo(l,o,r)}});const Xo=qs({logSumExp_:function(t,e=null,n=!1){const s=Hs(t,"x","logSumExp"),r=T(e,s.shape),a=si(s,r,!0),i=ri(s,a),o=za(i),l=ai(o,r),u=ni(l),c=Br(jr(a,u.shape),u);if(n){const t=Ur(c.shape,r);return jr(c,t)}return c}});qs({softmaxCrossEntropy_:function(t,e,n,s=0,r=Ho.SUM_BY_NONZERO_WEIGHTS){let a=Hs(t,"onehotLabels","softmaxCrossEntropy");const i=Hs(e,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Hs(n,"weights","softmaxCrossEntropy")),k(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const t=Or(s),e=Or(1),n=Or(a.shape[1]);a=Br(ti(a,ri(e,t)),Fa(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Fr(((t,e,s)=>{const r=Xo(e,[n],!0),a=ri(Ks(e,"float32"),r);s([t,a]);const i=yi(ti(a,t));return{value:ai(i,[n]),gradFunc:(t,e)=>{const[s,r]=e,a=Ur(t.shape,[n]);return[ti(jr(t,a),ri(Ks(s,"float32"),za(r))),ti(jr(t,a),ri(za(r),Ks(s,"float32")))]}}}))(t,e)}(a,i);return jo(l,o,r)}});const Yo={bandPart:Lo,gramSchmidt:Po,qr:Go};class Jo extends _r{constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=as.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=as.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${e}/accum_grad`,variable:Er((()=>Ii(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${e}/accum_var`,variable:Er((()=>Ii(s).variable(!1)))});const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Er((()=>{const t=Br(ti(a,this.rho),ti(gi(r),1-this.rho)),e=ti(Fa(Xi(Br(i,this.epsilon)),Xi(Br(a,this.epsilon))),r),n=Br(ti(i,this.rho),ti(gi(e),1-this.rho));a.assign(t),i.assign(n);const o=Br(ti(e,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Rr(this.accumulatedGrads.map((t=>t.variable))),Rr(this.accumulatedUpdates.map((t=>t.variable))))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedUpdates=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}Jo.className="Adadelta",Ir(Jo);class Qo extends _r{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=as.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:`${e}/accumulator`,variable:Er((()=>Va(s.shape,this.initialAccumulatorValue).variable(t)))}}const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=this.accumulatedGrads[n].variable;Er((()=>{const t=Br(a,gi(r));a.assign(t);const e=Br(ti(Fa(r,Xi(Br(t,as.backend.epsilon()))),-this.learningRate),s);s.assign(e)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Rr(this.accumulatedGrads.map((t=>t.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}Qo.className="Adagrad",Ir(Qo);class Zo extends _r{constructor(t,e,n,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Er((()=>{this.accBeta1=Or(e).variable(),this.accBeta2=Or(n).variable()})),null==s&&(this.epsilon=as.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Er((()=>{const n=ri(1,this.accBeta1),s=ri(1,this.accBeta2);e.forEach(((e,r)=>{const a=as.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Er((()=>Ii(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${e}/v`,variable:Er((()=>Ii(a).variable(!1)))});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Br(ti(o,this.beta1),ti(i,1-this.beta1)),c=Br(ti(l,this.beta2),ti(gi(i),1-this.beta2)),h=Fa(u,n),d=Fa(c,s);o.assign(u),l.assign(c);const p=Br(ti(Fa(h,Br(Xi(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(ti(this.accBeta1,this.beta1)),this.accBeta2.assign(ti(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Rr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedSecondMoment&&Rr(this.accumulatedSecondMoment.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),Er((()=>{this.accBeta1.assign(zo(this.beta1,this.iterations_+1)),this.accBeta2.assign(zo(this.beta2,this.iterations_+1))}));const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)}))),this.accumulatedSecondMoment=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}Zo.className="Adam",Ir(Zo);class tl extends _r{constructor(t,e,n,s=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Er((()=>{this.iteration=Or(0).variable(),this.accBeta1=Or(e).variable()})),null==s&&(this.epsilon=as.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map((t=>t.name)):Object.keys(t);Er((()=>{const n=ri(1,this.accBeta1),s=Fa(-this.learningRate,Br(ti(this.iteration,this.decay),1));e.forEach(((e,r)=>{const a=as.registeredVariables[e];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${e}/m`,variable:Ii(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${e}/v`,variable:Ii(a).variable(!1)});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Br(ti(o,this.beta1),ti(i,1-this.beta1)),c=ti(l,this.beta2),h=Mr(i),d=Za(c,h);o.assign(u),l.assign(d);const p=Br(ti(Fa(s,n),Fa(u,Br(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(Br(this.iteration,1)),this.accBeta1.assign(ti(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Rr(this.accumulatedFirstMoment.map((t=>t.variable))),null!=this.accumulatedWeightedInfNorm&&Rr(this.accumulatedWeightedInfNorm.map((t=>t.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}tl.className="Adamax",Ir(tl);class el extends _r{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=Array.isArray(t)?t[n].tensor:t[e];if(null==s)return;const r=as.registeredVariables[e];Er((()=>{const t=Br(ti(this.c,s),r);r.assign(t)}))})),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Ar(Or(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}el.className="SGD",Ir(el);class nl extends el{constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Or(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=as.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:`${e}/momentum`,variable:Er((()=>Ii(s).variable(t)))}}const r=this.accumulations[n].variable,a=Array.isArray(t)?t[n].tensor:t[e];null!=a&&Er((()=>{let t;const e=Br(ti(this.m,r),a);t=this.useNesterov?Br(ti(this.c,Br(a,ti(e,this.m))),s):Br(ti(this.c,e),s),r.assign(e),s.assign(t)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Rr(this.accumulations.map((t=>t.variable)))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map((t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}nl.className="Momentum",Ir(nl);class sl extends _r{constructor(t,e=.9,n=0,s=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=as.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map((t=>t.name)):Object.keys(t)).forEach(((e,n)=>{const s=as.registeredVariables[e],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${e}/rms`,variable:Er((()=>Ii(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${e}/momentum`,variable:Er((()=>Ii(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${e}/mg`,variable:Er((()=>Ii(s).variable(r)))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Er((()=>{const t=Br(ti(i,this.decay),ti(gi(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,r=Br(ti(e,this.decay),ti(a,1-this.decay)),l=Fa(ti(a,this.learningRate),Xi(ri(t,Br(gi(r),this.epsilon)))),u=Br(ti(o,this.momentum),l);i.assign(t),e.assign(r),o.assign(u);const c=ri(s,u);s.assign(c)}else{const t=Br(ti(i,this.decay),ti(gi(a),1-this.decay)),e=Br(ti(o,this.momentum),Fa(ti(a,this.learningRate),Xi(Br(t,this.epsilon))));i.assign(t),o.assign(e);const n=ri(s,e);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Rr(this.accumulatedMeanSquares.map((t=>t.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Rr(this.accumulatedMeanGrads.map((t=>t.variable))),null!=this.accumulatedMoments&&Rr(this.accumulatedMoments.map((t=>t.variable)))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map((t=>({name:t.originalName,tensor:t.variable}))))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.accumulatedMoments=t.slice(e,2*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map((t=>({originalName:t.name,variable:t.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}sl.className="RMSProp",Ir(sl);class rl{static sgd(t){return new el(t)}static momentum(t,e,n=!1){return new nl(t,e,n)}static rmsprop(t,e=.9,n=0,s=null,r=!1){return new sl(t,e,n,s,r)}static adam(t=.001,e=.9,n=.999,s=null){return new Zo(t,e,n,s)}static adadelta(t=.001,e=.95,n=null){return new Jo(t,e,n)}static adamax(t=.002,e=.9,n=.999,s=null,r=0){return new tl(t,e,n,s,r)}static adagrad(t,e=.1){return new Qo(t,e)}}const al={sgd:rl.sgd,momentum:rl.momentum,adadelta:rl.adadelta,adagrad:rl.adagrad,rmsprop:rl.rmsprop,adamax:rl.adamax,adam:rl.adam},il="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:t=>t();function ol(){return new Promise((t=>il((()=>t()))))}function ll(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function ul(t,e,n,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(t[0]/n),r=r.concat(t.slice(1));else{r=r.concat(t[0]);const n=e.length;for(let s=0;s<n;++s)r=r.concat([t[s+1]/e[s],e[s]]);r=r.concat(t.slice(n+1))}return r}function cl(t,e,n=!0){const s=[];if(n){s.push(e);for(let n=e+1;n<t;++n)n<=2*e?(s.push(n),s.push(n-(e+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<t;++s)s>=2*e+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function hl(t,e,n,s=!0){const r=[];s?r.push(t[0]/n):r.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?s?r.push(e[n-1]*t[n]):r.push(t[n]/e[n-1]):r.push(t[n]);return r}function dl(t,e){const n=[0];for(let s=0;s<e;++s)n.push(t[s][0]);return n}function pl(t,e,n){const s=t.slice(0,1);for(let r=0;r<n;++r)s.push(t[r+1]-e[r][0]-e[r][1]);return s}function fl(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,s=n[n.length-1];let r=1;for(let t=0;t<n.length-1;++t)r*=n[t];const a=t.shape,i=n.slice();i.pop();let o=1;for(let e=s;e<t.rank;++e)o*=a[e],i.push(a[e]);const l=[...G(t.shape).map((t=>t/o)),1].slice(0,s);return[i,r,o,l]}function ml(t,e,n){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(t.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+t.length-s)throw new Error(a+" update.rank != "+(r+t.length-s));for(let t=0;t<r;++t)if(n.shape[t]!==e.shape[t])throw new Error(a+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-r;++e)if(n.shape[e+r]!==t[e+s])throw new Error(a+` updates.shape[${e+r}] (${n.shape[e+r]}) != shape[${e+r}] (${t[e+r]})`)}function gl(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}ml(n,e,t)}function bl(t,e,n){const s=e.shape.length,r=s>1?e.shape[s-1]:1,a=n.length;let i=1;for(let t=r;t<a;++t)i*=n[t];const o=r<1?1:r;return{sliceRank:r,numUpdates:$(e.shape)/o,sliceSize:i,strides:[...G(n.slice(0,r)),1],outputSize:$(n)}}const yl=1.7580993408473768,xl=1.0507009873554805,wl=.3275911,vl=.254829592,kl=-.284496736,Il=1.421413741,Cl=-1.453152027,$l=1.061405429;function Sl(...t){et().getBool("IS_TEST")||console.warn(...t)}function Nl(...t){et().getBool("IS_TEST")||console.log(...t)}function El(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let s=0;s<n.length;s+=2)n[s]=t[s/2],n[s+1]=e[s/2];return n}function Rl(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let s=0;s<t.length;s+=2)e[s/2]=t[s],n[s/2]=t[s+1];return{real:e,imag:n}}function Al(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Dl(t){const e=Math.floor(t.length/4),n=new Float32Array(e),s=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],s[Math.floor(e/4)]=t[e+1];return{real:n,imag:s}}function Tl(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Fl(t,e,n,s){t[2*s]=e,t[2*s+1]=n}function Ol(t,e){const n=new Float32Array(t/2),s=new Float32Array(t/2);for(let r=0;r<Math.ceil(t/2);r++){const a=(e?2:-2)*Math.PI*(r/t);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function _l(t,e,n){const s=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(s),imag:Math.sin(s)}}function Ml(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=hi(t.shape),s=Ks(t,"float32"),r=n.complex(s,e);return e.dispose(),s.dispose(),r}if(!M(t.dtype,e))return as.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const s=n.real(t),r=Ks(s,e);return s.dispose(),r}if("int32"===e)return n.int(t);if("bool"===e){const e=Or(0,t.dtype),s=n.notEqual(t,e);return e.dispose(),s}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function Bl(t,e){return as.makeTensorFromDataId(t.dataId,e,t.dtype)}function Ll(t,e,n){const s=(e-t)/(n-1),r=K(n,"float32");r[0]=t;for(let t=1;t<r.length;t++)r[t]=r[t-1]+s;return Fi(r,"float32")}function zl(t,e,n){const s=new Array(t.rank).fill(0),r=t.shape.slice();return e.map((e=>{const a=[...r];a[n]=e;const i=Wi(t,s,a);return s[n]+=e,i}))}function Wl(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const s=Us(n,t.dtype);for(let e=0;e<s.values.length;++e){const n=s.indexToLoc(e),r=new Array(t.rank);for(let e=0;e<r.length;e++)r[e]=n[e]%t.shape[e];const a=t.locToIndex(r);s.values[e]=t.values[a]}return s.toTensor()}function Ul(t,e,n,s,r){const a=e[e.length-1],[i,o]=[t.length/a,a],l=O(n,i*s),u=O("int32",i*s);for(let e=0;e<i;e++){const n=e*o,r=t.subarray(n,n+o),a=[];for(let t=0;t<r.length;t++)a.push({value:r[t],index:t});a.sort(((t,e)=>e.value-t.value));const i=e*s,c=l.subarray(i,i+s),h=u.subarray(i,i+s);for(let t=0;t<s;t++)c[t]=a[t].value,h[t]=a[t].index}const c=e.slice();return c[c.length-1]=s,[wa(l,c,n),wa(u,c,"int32")]}function Pl(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const s=Us(t,"int32"),r=Us([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const a=s.indexToLoc(n[e]),i=e*t.length;r.values.set(a,i)}return r.toTensor()}const Vl={kernelName:it,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,fo(Ks(n,"float32"),-1))}}},Gl={kernelName:ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=gi(Ks(n,"float32")),s=Xi(ri(Or(1),e));return yi(Fa(t,s))}}}},Hl={kernelName:lt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xi(ri(gi(Ks(n,"float32")),1));return Fa(t,e)}}}},jl={kernelName:ut,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{let e=t;const s=Ma(n.shape,r);return s.length>0&&(e=ai(e,s)),jr(e,n.shape)},b:()=>{let e=t;const n=Ma(s.shape,r);return n.length>0&&(e=ai(e,n)),jr(e,s.shape)}}}},ql={kernelName:ct,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ii(n)}}},Kl={kernelName:ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Ii(n)}}},Xl={kernelName:dt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,Xi(ri(Or(1),gi(Ks(n,"float32")))))}}},Yl={kernelName:pt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Xi(Br(Or(1),gi(Ks(n,"float32"))));return Fa(t,e)}}}},Jl={kernelName:gt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{const e=Br(gi(n),gi(s));let a=ti(t,Fa(s,e));const i=Ma(n.shape,r);return i.length>0&&(a=ai(a,i)),jr(a,n.shape)},b:()=>{const e=Br(gi(n),gi(s));let a=yi(ti(t,Fa(n,e)));const i=Ma(s.shape,r);return i.length>0&&(a=ai(a,i)),jr(a,s.shape)}}}},Ql={kernelName:ft,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,Br(gi(Ks(n,"float32")),1))}}},Zl={kernelName:mt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,ri(Or(1),gi(Ks(n,"float32"))))}}},tu=qs({avgPool3dBackprop_:function(t,e,n,s,r=[1,1,1],a,i){const o=Hs(t,"dy","avgPool3dBackprop"),l=Hs(e,"input","avgPool3dBackprop");let u=o,c=l,h=!1;4===l.rank&&(h=!0,u=jr(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=jr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),v(5===u.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${u.rank}.`)),v(5===c.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${c.rank}.`)),v(la(s,r),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`)),null!=i&&v(N(a),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const d={dy:u,input:c},p={filterSize:n,strides:s,dilations:r,pad:a,dimRoundingMode:i},f=as.runKernelFunc((t=>{const e=Zr(c.shape,n,s,r,a,i);return t.avgPool3dBackprop(u,c,e)}),d,null,"AvgPool3DBackprop",p);return h?jr(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),eu={kernelName:xt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,dilations:i,pad:o,dimRoundingMode:l}=n,u=null==i?[1,1,1]:i;return{x:()=>tu(t,s,r,a,u,o,l)}}},nu=qs({avgPoolBackprop_:function(t,e,n,s,r){const a=Hs(t,"dy","avgPoolBackprop"),i=Hs(e,"input","avgPoolBackprop");v(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=jr(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=jr(a,[1,a.shape[0],a.shape[1],a.shape[2]])),v(4===l.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${l.rank}.`)),v(4===o.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=as.runKernelFunc((t=>{const e=Qr(o.shape,n,s,1,r);return t.avgPoolBackprop(l,o,e)}),c,null,yt,h);return u?jr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),su={kernelName:bt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{filterSize:r,strides:a,pad:i}=n;return{x:()=>nu(t,s,r,a,i)}}},ru={kernelName:wt,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[s,r]=e,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>wo(t,r,!1,!1),b:()=>wo(t,s,!0,!1)}:a&&!i?{a:()=>wo(r,t,!1,!0),b:()=>wo(s,t,!1,!1)}:{a:()=>wo(r,t,!0,!0),b:()=>wo(t,s,!0,!0)}:{a:()=>wo(t,r,!1,!0),b:()=>wo(s,t,!0,!1)}}},au=qs({spaceToBatchND_:function(t,e,n){const s=Hs(t,"x","spaceToBatchND");v(s.rank>=1+e.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`)),v(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),v(s.shape.reduce(((t,s,r)=>r>0&&r<=e.length?t&&(s+n[r-1][0]+n[r-1][1])%e[r-1]==0:t),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const r={x:s},a={blockShape:e,paddings:n};return as.runKernelFunc((t=>t.spaceToBatchND(s,e,n)),r,null,Ye,a)}}),iu={kernelName:vt,gradFunc:(t,e,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>au(t,s,r)}}},ou={kernelName:kt,gradFunc:(t,e,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let t=r.length-1;t>=0;t--)if(r[t]===a[t])i[t]=1;else if(1!==r[t])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let t=0;t<i.length;t++)i[t]>1&&o.push(t);return{x:()=>ai(t,o,!0)}}},lu={kernelName:It,gradFunc:t=>({x:()=>t.clone()})},uu={kernelName:Ct,gradFunc:t=>({x:()=>Ii(t)})},cu={kernelName:$t,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>ao(oi(Qa(s,r),Bo(s,a)),t,Ii(t))}}},hu={kernelName:Nt,saveAllInputs:!0,gradFunc:(t,e,n)=>{const s=e.map((t=>t.shape)),{axis:r}=n,a=T(r,e[0].shape)[0],i=s.map((t=>t[a]));return Ki(t,i,a).map((t=>()=>t))}},du={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return v(oa(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ea(s.shape,t,r,i,o,l),filter:()=>ho(s,t,r.shape,i,o,l)}}},pu={kernelName:At,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Sa(t,r,a,i,o,1,l),filter:()=>ho(t,s,r.shape,a,i,o,l)}}},fu=qs({conv3DBackpropFilter_:function(t,e,n,s,r){let a=t;4===t.rank&&(a=jr(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let i=e;4===i.rank&&(i=jr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),v(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),v(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),v(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),v(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),v(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return as.runKernelFunc((t=>{const e=ea(a.shape,n,s,1,r);return t.conv3dDerFilter(a,i,e)}),o,null,Tt,l)}}),mu=qs({conv3DBackpropInput_:function(t,e,n,s,r){v(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let a=t,i=e,o=!1;4===e.rank&&(o=!0,i=jr(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),a=[1,t[0],t[1],t[2],t[3]]);const l=a[4],u=i.shape[4];v(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),v(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),v(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),v(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),v(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=as.runKernelFunc((t=>{const e=ea(a,n.shape,s,1,r);return t.conv3dDerInput(i,n,e)}),c,null,Ft,h);return o?jr(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),gu={kernelName:Dt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a}=n;v(oa(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=e;return{x:()=>mu(i.shape,t,o,r,a),filter:()=>fu(i,t,o.shape,r,a)}}},bu=qs({sin_:function(t){const e=Hs(t,"x","sin"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.sin(e);return n([e]),s}),n,null,Ge)}}),yu={kernelName:Ot,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(yi(bu(Ks(n,"float32"))),t)}}},xu=qs({sinh_:function(t){const e=Hs(t,"x","sinh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.sinh(e);return n([e]),s}),n,null,He)}}),wu={kernelName:_t,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(xu(Ks(n,"float32")),t)}}},vu=qs({cumsum_:function(t,e=0,n=!1,s=!1){const r=Hs(t,"x","cumsum"),a={x:r},i={axis:e,exclusive:n,reverse:s};return as.runKernelFunc(((t,a)=>{const i=Vr([e],r.rank);let o=r;null!=i&&(o=qr(r,i));const l=Hr(1,r.rank)[0];let u=t.cumsum(o,l,n,s);if(a([r]),null!=i){const t=Gr(i);u=qr(u,t)}return u}),a,null,Mt,i)}}),ku={kernelName:Mt,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const e=Vr([r],s.rank);let n=vu(t,r,a,!i);return null!=e&&(n=qr(n,e)),n}}}},Iu=qs({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,r,a=[1,1],i){let o=t;3===t.rank&&(o=jr(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l=e;3===l.rank&&(l=jr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return as.runKernelFunc((e=>{const u=ta(t.shape,n,s,a,r,i,!0);return e.depthwiseConv2DDerFilter(o,l,u)}),u,null,Lt,c)}}),Cu=qs({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,r,a=[1,1],i){let o=e,l=!1;3===e.rank&&(l=!0,o=jr(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:t},h=as.runKernelFunc((e=>{const l=ta(t,n.shape,s,a,r,i,!0);return e.depthwiseConv2DDerInput(o,n,l)}),u,null,zt,c);return l?jr(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),$u={kernelName:Bt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;v(oa(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=e;return v(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),v(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),v(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),v(la(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&v(N(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>Cu(l.shape,t,u,r,a,s,i),filter:()=>Iu(l,t,u.shape,r,a,s,i)}}},Su={kernelName:Wt,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[s,r]=e,a={x:s,filter:r,dy:t},i={x:s,filter:r,dy:t};return{x:()=>as.runKernel(Ut,a,n),filter:()=>as.runKernel(Pt,i,n)}}},Nu={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{const e=Fa(t,Ks(s,"float32")),a=Ma(n.shape,r);return a.length>0?jr(ai(e,a),n.shape):e},b:()=>{let e=ti(t,Ks(n,"float32"));const a=Ma(s.shape,r);a.length>0&&(e=jr(ai(e,a),s.shape));const i=gi(s);return yi(Fa(e,Ks(i,"float32")))}}}},Eu={kernelName:Gt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,s=e=>e.eluDer(t,n),r={dy:t,y:n};return{x:()=>as.runKernelFunc(s,r,null,"EluGrad")}}},Ru={kernelName:Ht,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=ti(za(yi(gi(n))),2/Math.sqrt(Math.PI));return{x:()=>ti(t,s)}}},Au={kernelName:jt,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,n)}}},Du={kernelName:qt,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,za(n))}}},Tu={kernelName:Jt,gradFunc:t=>({x:()=>Ii(t)})},Fu={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{const e=Fa(t,Ks(s,"float32")),a=Ma(n.shape,r);return a.length>0?jr(ai(e,a),n.shape):e},b:()=>{let e=ti(t,Ks(n,"float32"));const a=Ma(s.shape,r);a.length>0&&(e=jr(ai(e,a),s.shape));const i=gi(s);return yi(Fa(e,Ks(i,"float32")))}}}},Ou=qs({rsqrt_:function(t){const e=Hs(t,"x","rsqrt"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.rsqrt(e);return n([e]),s}),n,null,We)}}),_u={kernelName:Zt,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=e,l=null==o?Or(1):o,u=Ma(a.shape,r.shape),c=[];if(1===a.rank){for(let t=0;t<r.shape.length-1;++t)c.push(r.shape[t]);c.push(1)}const h=ri(r,a),d=ti(t,l),p=Ou(Br(i,Or(s))),f=ti(ti(ti(p,p),p),Or(-.5));return{x:()=>1===a.rank?jr(ti(ti(t,Ua(jr(p,[1,1,1,a.shape[0]]),c)),l),r.shape):jr(ti(ti(t,p),l),r.shape),mean:()=>{let t=ti(ti(p,Or(-1)),d);return 1===a.rank&&(t=ai(t,u)),jr(t,a.shape)},variance:()=>{let t=ti(ti(f,h),d);return 1===a.rank&&(t=ai(t,u)),jr(t,a.shape)},scale:()=>{const e=ti(h,p);let n=ti(t,e);return 1===a.rank&&(n=ai(n,u)),jr(n,a.shape)},offset:()=>{let e=t;return 1===a.rank&&(e=ai(e,u)),jr(e,a.shape)}}}},Mu=qs({unsortedSegmentSum_:function(t,e,n){const s=Hs(t,"x","unsortedSegmentSum"),r=Hs(e,"segmentIds","unsortedSegmentSum","int32");v(N(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return as.runKernelFunc(((t,e)=>{const a=t.unsortedSegmentSum(s,r,n);return e([r]),a}),a,null,un,i)}}),Bu={kernelName:te,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[s,r]=e,{axis:a}=n,i=T(a,s.shape)[0];return{x:()=>{const e=s.shape,n=r.size,o=e.slice(0,i),l=o.length,u=e.slice(a,e.length).slice(1),c=u.length,h=Lu(0,l),d=Lu(l+1,l+1+c),p=zu([o,[n],u]),f=jr(t,p),m=jr(r,[n]),g=zu([[l],h,d]),b=qr(f,g);let y=Mu(b,m,s.shape[i]);const x=Gr(g);return y=qr(y,x),y},indices:()=>r}}};function Lu(t,e){const n=[];for(let s=t;s<e;++s)n.push(s);return n}function zu(t){const e=[];for(let n=0;n<t.length;++n)for(let s=0;s<t[n].length;++s)e.push(t[n][s]);return e}const Wu={kernelName:ee,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>Ii(n),b:()=>Ii(s)}}},Uu={kernelName:ne,gradFunc:t=>({x:()=>Ks(t,"float32")})},Pu={kernelName:ae,gradFunc:t=>({x:()=>Ii(t)})},Vu={kernelName:ie,gradFunc:t=>({x:()=>Ii(t)})},Gu={kernelName:oe,gradFunc:t=>({x:()=>Ii(t)})},Hu={kernelName:ue,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,Br(n,1))}}},ju={kernelName:le,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,Ks(n,"float32"))}}},qu={kernelName:he,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{axis:r}=n;return{logits:()=>{const e=za(s);return ri(t,ti(ai(t,r,!0),e))}}}},Ku=qs({localResponseNormalizationBackprop_:function(t,e,n,s=5,r=1,a=1,i=.5){const o={x:t,y:e,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return as.runKernelFunc((o=>o.LRNGrad(n,t,e,s,r,a,i)),o,null,"LRNBackprop",l)}}),Xu={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Ku(s,r,t,a,i,o,l)}}};function Yu(t,e,n,s){return e.rank<n.rank&&(e=jr(e,Ur(e.shape,s))),t.rank<n.rank&&(t=jr(t,Ur(t.shape,s))),{x:()=>ti(t,Ks(La(n,e),t.dtype))}}const Ju={kernelName:de,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{reductionIndices:r}=s,a=e[0],i=Yu(t,e[1],a,T(r,a.shape));return{x:()=>i.x()}}},Qu=qs({less_:function(t,e){let n=Hs(t,"a","less"),s=Hs(e,"b","less");[n,s]=Qn(n,s),Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.less(n,s)),r,null,"Less")}}),Zu={kernelName:pe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>ti(t,Ks(Qa(n,s),"float32")),b:()=>ti(t,Ks(Qu(n,s),"float32"))}}},tc=qs({maxPool3dBackprop_:function(t,e,n,s,r,a=[1,1,1],i,o){const l=Hs(t,"dy","maxPool3dBackprop"),u=Hs(e,"input","maxPool3dBackprop"),c=Hs(n,"output","maxPool3dBackprop");let h=l,d=u,p=c,f=!1;4===u.rank&&(f=!0,h=jr(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=jr(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=jr(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),v(5===h.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${h.rank}.`)),v(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),v(5===p.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${p.rank}.`)),v(la(r,a),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),null!=o&&v(N(i),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const m={dy:h,input:d,output:p},g={filterSize:s,strides:r,dilations:a,pad:i,dimRoundingMode:o},b=as.runKernelFunc((t=>{const e=Zr(d.shape,s,r,a,i,o);return t.maxPool3dBackprop(h,d,p,e)}),m,null,"MaxPool3DBackprop",g);return f?jr(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),ec={kernelName:ge,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,dilations:o,pad:l,dimRoundingMode:u}=n,c=null==o?[1,1,1]:o;return{x:()=>tc(t,s,r,a,i,c,l,u)}}},nc=qs({maxPoolBackprop_:function(t,e,n,s,r,a,i){const o=Hs(t,"dy","maxPoolBackprop"),l=Hs(e,"input","maxPoolBackprop"),u=Hs(n,"output","maxPoolBackprop");v(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),v(4===o.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${o.rank}.`)),v(4===l.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&v(N(a),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return as.runKernelFunc((t=>{const e=Qr(l.shape,s,r,1,a,i);return t.maxPoolBackprop(o,l,u,e)}),c,null,me,h)}}),sc={kernelName:fe,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s,r]=e,{filterSize:a,strides:i,pad:o}=n;return{x:()=>nc(t,s,r,a,i,o)}}},rc={kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const s=n,{axis:r}=s,[a,i]=e,o=Yu(t,i,a,T(r,a.shape));return{x:()=>o.x()}}},ac={kernelName:xe,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e;return{a:()=>ti(t,Ks(Bo(n,s),"float32")),b:()=>ti(t,Ks(Ja(n,s),"float32"))}}},ic={kernelName:we,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>Wi(t,a,s.shape)}}},oc={kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{const e=Ma(n.shape,r);return e.length>0?jr(ai(t,e),n.shape):t},b:()=>{const e=ti(t,yi(Ga(Fa(n,s)))),a=Ma(s.shape,r);return a.length>0?jr(ai(e,a),s.shape):e}}}},lc={kernelName:ve,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{const e=ti(t,Ks(s,"float32")),a=Ma(n.shape,r);return a.length>0?jr(ai(e,a),n.shape):e},b:()=>{const e=ti(t,Ks(n,"float32")),a=Ma(s.shape,r);return a.length>0?jr(ai(e,a),s.shape):e}}}},uc={kernelName:ke,gradFunc:t=>({x:()=>yi(t)})},cc={kernelName:Ee,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>hi(n.shape,"float32")}}},hc={kernelName:Ne,gradFunc:t=>({x:()=>Ii(t)})},dc={kernelName:Re,inputsToSave:["x"],gradFunc:(t,e,n)=>{const s=e[0],{paddings:r}=n,a=r.map((t=>t[0]));return{x:()=>Wi(t,a,s.shape)}}},pc={kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,s,r]=e,a=n,i=s,o=Ba(a.shape,i.shape);return{a:()=>{const e=Ks(i,"float32");let n=ti(t,ti(e,zo(a,ri(e,Or(1)))));const s=Ma(a.shape,o);return s.length>0&&(n=ai(n,s)),jr(n,a.shape)},b:()=>{const e=Ja(a,0),n=ao(e,ni(a),Ii(a));let s=ti(t,ti(r,n));const l=Ma(i.shape,o);return l.length>0&&(s=ai(s,l)),jr(s,i.shape)}}}},fc={kernelName:Ae,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,s]=e,r=Ja(n,0);return{x:()=>ao(r,t,ti(t,s)),alpha:()=>{let e=ao(r,Ii(t),ti(t,n));const a=Ma(s.shape,t.shape);return a.length>0&&(e=ai(e,a)),jr(e,s.shape)}}}},mc={kernelName:Te,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,yi(gi(n)))}}},gc={kernelName:Be,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,s=ti(Bo(n,6),fo(n));return{x:()=>ti(t,Ks(s,"float32"))}}},bc={kernelName:Fe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,Ks(fo(n),"float32"))}}},yc={kernelName:Oe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>jr(t,n.shape)}}},xc={kernelName:Me,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeBilinearBackprop(t,s,r)},a={images:s};return{images:()=>as.runKernelFunc(r,a,null,"ResizeBilinearGrad",n)}}},wc={kernelName:_e,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[s]=e,r=e=>{const{alignCorners:r}=n;return e.resizeNearestNeighborBackprop(t,s,r)},a={images:s};return{images:()=>as.runKernelFunc(r,a,null,"ResizeNearestNeighborGrad",n)}}},vc={kernelName:Le,gradFunc:(t,e,n)=>{const{dims:s}=n,r=T(s,t.shape);return{x:()=>Mi(t,r)}}},kc={kernelName:ze,gradFunc:t=>({x:()=>Ii(t)})},Ic={kernelName:We,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>yi(Fa(t,ti(zo(n,1.5),2)))}}},Cc=qs({logicalNot_:function(t){const e=Hs(t,"x","logicalNot","bool"),n={x:e};return as.runKernelFunc((t=>t.logicalNot(e)),n,null,ce)}}),$c={kernelName:Ue,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Ks(Ii(n),"float32"),t:()=>ti(t,Ks(n,t.dtype)),e:()=>ti(t,Ks(Cc(n),t.dtype))}}},Sc={kernelName:Pe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Ja(n,Or(0)),s=Or(yl),r=Or(xl),a=ti(t,r),i=ti(ti(t,s),za(Ks(n,"float32")));return ao(e,a,i)}}}},Nc={kernelName:qe,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,ti(n,ri(Or(1),n)))}}},Ec={kernelName:je,gradFunc:t=>({x:()=>Ii(t)})},Rc=qs({cos_:function(t){const e=Hs(t,"x","cos"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.cos(e);return n([e]),s}),n,null,Ot)}}),Ac={kernelName:Ge,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(Rc(Ks(n,"float32")),t)}}},Dc=qs({cosh_:function(t){const e=Hs(t,"x","cosh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.cosh(e);return n([e]),s}),n,null,_t)}}),Tc={kernelName:He,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(Dc(Ks(n,"float32")),t)}}},Fc={kernelName:Ve,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{begin:r,size:a}=n,i=s.shape,[o,l]=wr(s,r,a),u=[];for(let e=0;e<t.rank;e++)u.push([o[e],i[e]-o[e]-l[e]]);return{x:()=>$i(t,u)}}},Oc={kernelName:Qe,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[s]=e,{dim:r}=n,a=ti(t,s);return{logits:()=>ri(a,ti(ai(a,[r],!0),s))}}},_c={kernelName:Ke,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,zi(n))}}},Mc=qs({batchToSpaceND_:function(t,e,n){const s=Hs(t,"x","batchToSpaceND"),r=e.reduce(((t,e)=>t*e));v(s.rank>=1+e.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`)),v(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),v(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`));const a={x:s},i={blockShape:e,crops:n};return as.runKernelFunc((t=>t.batchToSpaceND(s,e,n)),a,null,vt,i)}}),Bc={kernelName:Ye,gradFunc:(t,e,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>Mc(t,s,r)}}},Lc={kernelName:Je,gradFunc:(t,e,n)=>{const{axis:s}=n;return{x:()=>va(t,s)}}},zc=[Vl,Gl,Hl,jl,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,s)=>{n[s]=()=>t.clone()})),n}},ql,Kl,Xl,Yl,Jl,Ql,Zl,eu,su,ru,iu,ou,lu,uu,cu,hu,pu,du,gu,yu,wu,ku,$u,Su,Nu,Eu,Ru,Au,Du,Fu,Tu,_u,Bu,Wu,Uu,Pu,Vu,Gu,Hu,ju,qu,Xu,Ju,Ju,Zu,ec,sc,rc,ac,ic,oc,lc,uc,cc,hc,dc,dc,pc,fc,mc,gc,bc,yc,xc,wc,vc,kc,Ic,$c,Sc,Nc,Ec,Ac,Tc,Fc,Oc,_c,Bc,Bc,Lc,Lc,{kernelName:Xe,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,ti(Xi(Ks(n,"float32")),2))}}},{kernelName:Ze,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Or(2);return{a:()=>ti(t,ti(r,ri(n,s))),b:()=>ti(t,ti(r,ri(s,n)))}}},{kernelName:tn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(t,ti(Ks(n,"float32"),2))}}},{kernelName:hn,gradFunc:t=>({x:()=>Ii(t)})},{kernelName:en,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,s]=e,r=Ba(n.shape,s.shape);return{a:()=>{let e=t;const s=Ma(n.shape,r);return s.length>0&&(e=ai(e,s)),jr(e,n.shape)},b:()=>{let e=t;const n=Ma(s.shape,r);return n.length>0&&(e=ai(e,n)),jr(yi(e),s.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,r=s.shape.slice(),{axis:a}=n;T(a,s.shape).forEach((t=>{r[t]=1}));const i=jr(t,r),o=ti(i,di(s.shape,"float32"));return{x:()=>o}}},{kernelName:nn,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Fa(t,gi(Rc(n)))}}},{kernelName:sn,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>ti(ri(Or(1),gi(n)),t)}}},{kernelName:rn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[s]=e,{reps:r}=n;return{x:()=>{let e=Ii(s);if(1===s.rank)for(let n=0;n<r[0];++n)e=Br(e,Wi(t,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)e=Br(e,Wi(t,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)e=Br(e,Wi(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)e=Br(e,Wi(t,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return e}}}},{kernelName:an,gradFunc:(t,e,n)=>{const s=n,{perm:r}=s,a=Gr(r);return{x:()=>qr(t,a)}}},{kernelName:ln,gradFunc:(t,e,n)=>{const s=n,{axis:r}=s;return{value:()=>Ji(t,r)}}},{kernelName:un,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Za(e,Ii(e)),s=Ya(t,n);let r=Qa(e,Or(0,"int32"));const a=s.rank-r.rank;for(let t=0;t<a;++t)r=Wa(r,t+1);r=oi(r,di(s.shape,"bool"));const i=Ii(s);return ao(r,s,i)}(t,n)}}},{kernelName:cn,gradFunc:t=>({x:()=>Ii(t)})}];for(const t of zc)In(t);Pn.prototype.abs=function(){return this.throwIfDisposed(),Mr(this)};const Wc=qs({acos_:function(t){const e=Hs(t,"x","acos"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.acos(e);return n([e]),s}),n,null,ot)}});Pn.prototype.acos=function(){return this.throwIfDisposed(),Wc(this)};const Uc=qs({acosh_:function(t){const e=Hs(t,"x","acosh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.acosh(e);return n([e]),s}),n,null,lt)}});Pn.prototype.acosh=function(){return this.throwIfDisposed(),Uc(this)};const Pc=qs({mod_:function(t,e){let n=Hs(t,"a","mod"),s=Hs(e,"b","mod");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.mod(n,s);return e([n,s]),r}),r,null,"Mod")}}),Vc=qs({addStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","addStrict"),s=Hs(e,"b","addStrict");return k(n.shape,s.shape,"Error in addStrict: "),Br(n,s)}}),Gc=qs({divStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","div"),s=Hs(e,"b","div");return k(n.shape,s.shape,"Error in divideStrict: "),Fa(n,s)}}),Hc=qs({maximumStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","maximumStrict"),s=Hs(e,"b","maximumStrict");return k(n.shape,s.shape,"Error in maximumStrict: "),Za(n,s)}}),jc=qs({minimumStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","minimumStrict"),s=Hs(e,"b","minimumStrict");return k(n.shape,s.shape,"Error in minimumStrict: "),mi(n,s)}}),qc=qs({modStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","modStrict"),s=Hs(e,"b","modStrict");return k(n.shape,s.shape,"Error in modStrict: "),Pc(n,s)}}),Kc=qs({mulStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","mul"),s=Hs(e,"b","mul");return k(n.shape,s.shape,"Error in multiplyStrict: "),ti(n,s)}}),Xc=qs({powStrict_:function(t,e){return $r("strict variants of ops have been deprecated and will be removed in future"),k(t.shape,e.shape,"Error in powStrict: "),zo(t,e)}}),Yc=qs({squaredDifferenceStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","squaredDifferenceStrict"),s=Hs(e,"b","squaredDifferenceStrict");return k(n.shape,s.shape,"Error in squaredDifferenceStrict: "),qo(n,s)}}),Jc=qs({subStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","subStrict"),s=Hs(e,"b","subStrict");return k(n.shape,s.shape,"Error in subStrict: "),ri(n,s)}});Pn.prototype.addStrict=function(t){return this.throwIfDisposed(),Vc(this,t)},Pn.prototype.add=function(t){return this.throwIfDisposed(),Br(this,t)},Pn.prototype.all=function(t,e){return this.throwIfDisposed(),Kr(this,t,e)},Pn.prototype.any=function(t,e){return this.throwIfDisposed(),Xr(this,t,e)},Pn.prototype.argMax=function(t){return this.throwIfDisposed(),Yr(this,t)};const Qc=qs({argMin_:function(t,e=0){let n=Hs(t,"x","argMin");const s={x:n},r={axis:e};return as.runKernelFunc(((t,s)=>{s([n]),null==e&&(e=0);let r=T(e,n.shape);const a=Vr(r,n.rank);return null!=a&&(n=qr(n,a),r=Hr(r.length,n.rank)),t.argMin(n,r[0])}),s,null,ht,r)}});Pn.prototype.argMin=function(t){return this.throwIfDisposed(),Qc(this,t)},Pn.prototype.asScalar=function(){return this.throwIfDisposed(),v(1===this.size,(()=>"The array must have only 1 element.")),jr(this,[])},Pn.prototype.asType=function(t){return this.throwIfDisposed(),Ks(this,t)},Pn.prototype.as1D=function(){return this.throwIfDisposed(),jr(this,[this.size])},Pn.prototype.as2D=function(t,e){return this.throwIfDisposed(),jr(this,[t,e])},Pn.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),jr(this,[t,e,n])},Pn.prototype.as4D=function(t,e,n,s){return this.throwIfDisposed(),jr(this,[t,e,n,s])},Pn.prototype.as5D=function(t,e,n,s,r){return this.throwIfDisposed(),jr(this,[t,e,n,s,r])};const Zc=qs({asin_:function(t){const e=Hs(t,"x","asin"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.asin(e);return n([e]),s}),n,null,dt)}});Pn.prototype.asin=function(){return this.throwIfDisposed(),Zc(this)};const th=qs({asinh_:function(t){const e=Hs(t,"x","asinh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.asinh(e);return n([e]),s}),n,null,pt)}});Pn.prototype.asinh=function(){return this.throwIfDisposed(),th(this)};const eh=qs({atan_:function(t){const e=Hs(t,"x","atan"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.atan(e);return n([e]),s}),n,null,ft)}});Pn.prototype.atan=function(){return this.throwIfDisposed(),eh(this)};const nh=qs({atan2_:function(t,e){let n=Hs(t,"a","atan2"),s=Hs(e,"b","atan2");[n,s]=Qn(n,s);const r={a:n,b:s};return as.runKernelFunc(((t,e)=>{const r=t.atan2(n,s);return e([n,s]),r}),r,null,gt)}});Pn.prototype.atan2=function(t){return this.throwIfDisposed(),nh(this,t)};const sh=qs({atanh_:function(t){const e=Hs(t,"x","atanh"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.atanh(e);return n([e]),s}),n,null,mt)}});Pn.prototype.atanh=function(){return this.throwIfDisposed(),sh(this)},Pn.prototype.avgPool=function(t,e,n,s){return this.throwIfDisposed(),ca(this,t,e,n,s)},Pn.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Mc(this,t,e)},Pn.prototype.batchNorm=function(t,e,n,s,r){return this.throwIfDisposed(),pa(this,t,e,n,s,r)},Pn.prototype.broadcastTo=function(t){return this.throwIfDisposed(),ro(this,t)},Pn.prototype.cast=function(t){return this.throwIfDisposed(),Ks(this,t)};const rh=qs({ceil_:function(t){const e=Hs(t,"x","ceil"),n={x:e};return as.runKernelFunc((t=>t.ceil(e)),n,null,Ct)}});Pn.prototype.ceil=function(){return this.throwIfDisposed(),rh(this)},Pn.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ba(this,t,e)},Pn.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Pn&&(t=[t]),va([this,...t],e)},Pn.prototype.conv1d=function(t,e,n,s,r,a){return this.throwIfDisposed(),Na(this,t,e,n,s,r,a)},Pn.prototype.conv2dTranspose=function(t,e,n,s,r){return this.throwIfDisposed(),Ra(this,t,e,n,s,r)},Pn.prototype.conv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),Sa(this,t,e,n,s,r,a)},Pn.prototype.cos=function(){return this.throwIfDisposed(),Rc(this)},Pn.prototype.cosh=function(){return this.throwIfDisposed(),Dc(this)},Pn.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),vu(this,t,e,n)};const ah=qs({depthToSpace_:function(t,e,n="NHWC"){const s=Hs(t,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];v(r*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${e}  for depthToSpace with input shape\n    ${s.shape}`)),v(a*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${e} for depthToSpace with input shape\n        ${s.shape}`)),v(i%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:e,dataFormat:n};return as.runKernelFunc((t=>t.depthToSpace(s,e,n)),o,null,"DepthToSpace",l)}});Pn.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ah(this,t,e)},Pn.prototype.depthwiseConv2D=function(t,e,n,s,r,a){return $r("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Da(this,t,e,n,s,r,a)},Pn.prototype.depthwiseConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),Da(this,t,e,n,s,r,a)};const ih=qs({dilation2d_:function(t,e,n,s,r=[1,1],a="NHWC"){const i=Hs(t,"x","dilation2d"),o=Hs(e,"filter","dilation2d");v(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),v(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),v("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=jr(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=as.runKernel(Wt,c,h);return u?jr(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});Pn.prototype.dilation2d=function(t,e,n,s,r){return this.throwIfDisposed(),ih(this,t,e,n,s,r)};const oh=qs({divNoNan_:function(t,e){let n=Hs(t,"a","div"),s=Hs(e,"b","div");[n,s]=Qn(n,s);const r=Fa(n,s),a=Ii(r),i=La(s,a);return ao(i,a,r)}});Pn.prototype.divNoNan=function(t){return this.throwIfDisposed(),oh(this,t)},Pn.prototype.divStrict=function(t){return this.throwIfDisposed(),Gc(this,t)},Pn.prototype.div=function(t){return this.throwIfDisposed(),Fa(this,t)};const lh=qs({dot_:function(t,e){const n=Hs(t,"t1","dot"),s=Hs(e,"t2","dot");v(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(v(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const t=jr(n,[1,-1]),e=jr(s,[-1,1]),r=wo(t,e);return jr(r,[])}if(1===n.rank&&2===s.rank){const t=jr(n,[1,-1]),e=jr(s,[s.shape[0],s.shape[1]]),r=wo(t,e);return jr(r,[r.size])}if(2===n.rank&&1===s.rank){const t=jr(s,[-1,1]),e=wo(n,t);return jr(e,[e.size])}{const t=jr(s,[s.shape[0],s.shape[1]]);return wo(n,t)}}});Pn.prototype.dot=function(t){return this.throwIfDisposed(),lh(this,t)},Pn.prototype.elu=function(){return this.throwIfDisposed(),Oa(this)};const uh=qs({equalStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","equalStrict"),s=Hs(e,"b","equalStrict");return k(n.shape,s.shape,"Error in equalStrict: "),La(n,s)}}),ch=qs({greaterEqualStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","greaterEqualStrict"),s=Hs(e,"b","greaterEqualStrict");return k(n.shape,s.shape,"Error in greaterEqualStrict: "),Qa(n,s)}}),hh=qs({greaterStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","greaterStrict"),s=Hs(e,"b","greaterStrict");return k(n.shape,s.shape,"Error in greaterStrict: "),Ja(n,s)}}),dh=qs({lessEqualStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","lessEqualStrict"),s=Hs(e,"b","lessEqualStrict");return k(n.shape,s.shape,"Error in lessEqualStrict: "),Bo(n,s)}}),ph=qs({lessStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","lessStrict"),s=Hs(e,"b","lessStrict");return k(n.shape,s.shape,"Error in lessStrict: "),Qu(n,s)}}),fh=qs({notEqualStrict_:function(t,e){$r("strict variants of ops have been deprecated and will be removed in future");const n=Hs(t,"a","notEqualStrict"),s=Hs(e,"b","notEqualStrict");return k(n.shape,s.shape,"Error in notEqualStrict: "),xi(n,s)}});Pn.prototype.equalStrict=function(t){return this.throwIfDisposed(),uh(this,t)},Pn.prototype.equal=function(t){return this.throwIfDisposed(),La(this,t)};const mh=qs({erf_:function(t){let e=Hs(t,"x","erf");v("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=Ks(e,"float32"));const n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.erf(e);return n([e]),s}),n,null,Ht)}});Pn.prototype.erf=function(){return this.throwIfDisposed(),mh(this)},Pn.prototype.exp=function(){return this.throwIfDisposed(),za(this)},Pn.prototype.expandDims=function(t){return this.throwIfDisposed(),Wa(this,t)};const gh=qs({expm1_:function(t){const e=Hs(t,"x","expm1"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.expm1(e);return n([e]),s}),n,null,qt)}});Pn.prototype.expm1=function(){return this.throwIfDisposed(),gh(this)},Pn.prototype.fft=function(){return this.throwIfDisposed(),oo(this)},Pn.prototype.flatten=function(){return this.throwIfDisposed(),jr(this,[this.size])},Pn.prototype.floor=function(){return this.throwIfDisposed(),Ga(this)},Pn.prototype.floorDiv=function(t){return this.throwIfDisposed(),Ta(this,t)},Pn.prototype.gather=function(t,e){return this.throwIfDisposed(),Ya(this,t,e)},Pn.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ch(this,t)},Pn.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Qa(this,t)},Pn.prototype.greaterStrict=function(t){return this.throwIfDisposed(),hh(this,t)},Pn.prototype.greater=function(t){return this.throwIfDisposed(),Ja(this,t)},Pn.prototype.ifft=function(){return this.throwIfDisposed(),uo(this)},Pn.prototype.irfft=function(){return this.throwIfDisposed(),co(this)};const bh=qs({isFinite_:function(t){const e=Hs(t,"x","isFinite"),n={x:e};return as.runKernelFunc((t=>t.isFinite(e)),n,null,ae)}});Pn.prototype.isFinite=function(){return this.throwIfDisposed(),bh(this)};const yh=qs({isInf_:function(t){const e=Hs(t,"x","isInf"),n={x:e};return as.runKernelFunc((t=>t.isInf(e)),n,null,ie)}});Pn.prototype.isInf=function(){return this.throwIfDisposed(),yh(this)};const xh=qs({isNaN_:function(t){const e=Hs(t,"x","isNaN"),n={x:e};return as.runKernelFunc((t=>t.isNaN(e)),n,null,oe)}});Pn.prototype.isNaN=function(){return this.throwIfDisposed(),xh(this)},Pn.prototype.leakyRelu=function(t){return this.throwIfDisposed(),ei(this,t)},Pn.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),dh(this,t)},Pn.prototype.lessEqual=function(t){return this.throwIfDisposed(),Bo(this,t)},Pn.prototype.lessStrict=function(t){return this.throwIfDisposed(),ph(this,t)},Pn.prototype.less=function(t){return this.throwIfDisposed(),Qu(this,t)};const wh=qs({localResponseNormalization_:function(t,e=5,n=1,s=1,r=.5){const a=Hs(t,"x","localResponseNormalization");v(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),v(N(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=jr(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:e,bias:n,alpha:s,beta:r},c=as.runKernelFunc(((t,a)=>{const o=t.localResponseNormalization4D(i,e,n,s,r);return a([i,o]),o}),l,null,"LRN",u);return o?jr(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Pn.prototype.localResponseNormalization=function(t,e,n,s){return this.throwIfDisposed(),wh(this,t,e,n,s)};const vh=qs({logSigmoid_:function(t){const e=Hs(t,"x","logSigmoid");return Fr((t=>({value:yi(ji(yi(t))),gradFunc:e=>ti(e,zi(yi(t)))})))(e)}});Pn.prototype.logSigmoid=function(){return this.throwIfDisposed(),vh(this)},Pn.prototype.logSoftmax=function(t){return this.throwIfDisposed(),ii(this,t)},Pn.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Xo(this,t,e)},Pn.prototype.log=function(){return this.throwIfDisposed(),ni(this)},Pn.prototype.log1p=function(){return this.throwIfDisposed(),Ko(this)},Pn.prototype.logicalAnd=function(t){return this.throwIfDisposed(),oi(this,t)},Pn.prototype.logicalNot=function(){return this.throwIfDisposed(),Cc(this)};const kh=qs({logicalOr_:function(t,e){const n=Hs(t,"a","logicalOr","bool"),s=Hs(e,"b","logicalOr","bool");Ba(n.shape,s.shape);const r={a:n,b:s};return as.runKernelFunc((t=>t.logicalOr(n,s)),r,null,"LogicalOr")}});Pn.prototype.logicalOr=function(t){return this.throwIfDisposed(),kh(this,t)};const Ih=qs({logicalXor_:function(t,e){const n=Hs(t,"a","logicalXor","bool"),s=Hs(e,"b","logicalXor","bool");return Ba(n.shape,s.shape),oi(kh(t,e),Cc(oi(t,e)))}});Pn.prototype.logicalXor=function(t){return this.throwIfDisposed(),Ih(this,t)},Pn.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),wo(this,t,e,n)},Pn.prototype.maxPool=function(t,e,n,s){return this.throwIfDisposed(),li(this,t,e,n,s)},Pn.prototype.max=function(t,e){return this.throwIfDisposed(),si(this,t,e)},Pn.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Hc(this,t)},Pn.prototype.maximum=function(t){return this.throwIfDisposed(),Za(this,t)},Pn.prototype.mean=function(t,e){return this.throwIfDisposed(),pi(this,t,e)},Pn.prototype.min=function(t,e){return this.throwIfDisposed(),fi(this,t,e)},Pn.prototype.minimumStrict=function(t){return this.throwIfDisposed(),jc(this,t)},Pn.prototype.minimum=function(t){return this.throwIfDisposed(),mi(this,t)};const Ch=qs({mirrorPad_:function(t,e,n){v("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Hs(t,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");v(e.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`));const r="reflect"===n?1:0;for(let t=0;t<s.rank;t++)v(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),v(e[t][0]>=0&&e[t][0]<=s.shape[t]-r&&e[t][1]>=0&&e[t][1]<=s.shape[t]-r,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${s.shape[t]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:e,mode:n},i={x:s};return as.runKernel(we,i,a)}});Pn.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Ch(this,t,e)},Pn.prototype.modStrict=function(t){return this.throwIfDisposed(),qc(this,t)},Pn.prototype.mod=function(t){return this.throwIfDisposed(),Pc(this,t)},Pn.prototype.mulStrict=function(t){return this.throwIfDisposed(),Kc(this,t)},Pn.prototype.mul=function(t){return this.throwIfDisposed(),ti(this,t)},Pn.prototype.neg=function(){return this.throwIfDisposed(),yi(this)},Pn.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Uo(this,t,e,n)},Pn.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),fh(this,t)},Pn.prototype.notEqual=function(t){return this.throwIfDisposed(),xi(this,t)},Pn.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),wi(this,t,e,n)},Pn.prototype.onesLike=function(){return this.throwIfDisposed(),Ci(this)},Pn.prototype.pad=function(t,e){return this.throwIfDisposed(),$i(this,t,e)};const $h=qs({pool_:function(t,e,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=Hs(t,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=jr(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(la(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const u=Qr(o.shape,e,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),s=n.map((t=>Math.floor(t/2))),r=n.map(((t,e)=>t-s[e]));return n.map(((t,e)=>[s[e],r[e]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(t,e,n){const s=n.map((t=>t[0])),r=n.map((t=>t[1])),a=t.concat(s,r),i=e.map(((t,e)=>(t-a[e]%t)%t)),o=r.map(((t,e)=>t+i[e]));return[e.map(((t,e)=>[s[e],o[e]])),e.map(((t,e)=>[0,i[e]]))]}([u.inHeight,u.inWidth],c,h),m=d?s:"valid",g=d?o:au(o,c,p),b=("avg"===n?()=>ca(g,e,a,m):()=>li(g,e,a,m))(),y=d?b:Mc(b,c,f);return l?jr(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});Pn.prototype.pool=function(t,e,n,s,r){return this.throwIfDisposed(),$h(this,t,e,n,s,r)},Pn.prototype.powStrict=function(t){return this.throwIfDisposed(),Xc(this,t)},Pn.prototype.pow=function(t){return this.throwIfDisposed(),zo(this,t)},Pn.prototype.prelu=function(t){return this.throwIfDisposed(),Ni(this,t)};const Sh=qs({prod_:function(t,e=null,n=!1){let s=Hs(t,"x","prod");"bool"===s.dtype&&(s=Ks(s,"int32"));const r={x:s},a={axis:e,keepDims:n};return as.runKernelFunc((t=>{const r=T(e,s.shape),a=Vr(r,s.rank);let i=r,o=s;null!=a&&(o=qr(s,a),i=Hr(i.length,s.rank));let l=t.prod(o,i);if(n){const t=Ur(l.shape,r);l=jr(l,t)}return l}),r,null,"Prod",a)}});Pn.prototype.prod=function(t,e){return this.throwIfDisposed(),Sh(this,t,e)};const Nh=qs({reciprocal_:function(t){const e=Hs(t,"x","reciprocal"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.reciprocal(e);return n([e]),s}),n,null,Te)}});Pn.prototype.reciprocal=function(){return this.throwIfDisposed(),Nh(this)},Pn.prototype.relu=function(){return this.throwIfDisposed(),_i(this)},Pn.prototype.relu6=function(){return this.throwIfDisposed(),po(this)},Pn.prototype.reshapeAs=function(t){return this.throwIfDisposed(),jr(this,t.shape)},Pn.prototype.reshape=function(t){return this.throwIfDisposed(),jr(this,t)},Pn.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),_o(this,t,e)},Pn.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),Mo(this,t,e)},Pn.prototype.reverse=function(t){return this.throwIfDisposed(),Mi(this,t)},Pn.prototype.rfft=function(){return this.throwIfDisposed(),lo(this)};const Eh=qs({round_:function(t){const e=Hs(t,"x","round"),n={x:e};return as.runKernelFunc((t=>t.round(e)),n,null,ze)}});Pn.prototype.round=function(){return this.throwIfDisposed(),Eh(this)},Pn.prototype.rsqrt=function(){return this.throwIfDisposed(),Ou(this)},Pn.prototype.selu=function(){return this.throwIfDisposed(),Bi(this)},Pn.prototype.separableConv2d=function(t,e,n,s,r,a){return this.throwIfDisposed(),Li(this,t,e,n,s,r,a)},Pn.prototype.sigmoid=function(){return this.throwIfDisposed(),zi(this)};const Rh=qs({sign_:function(t){const e=Hs(t,"x","sign"),n={x:e};return as.runKernelFunc((t=>t.sign(e)),n,null,je)}});Pn.prototype.sign=function(){return this.throwIfDisposed(),Rh(this)},Pn.prototype.sin=function(){return this.throwIfDisposed(),bu(this)},Pn.prototype.sinh=function(){return this.throwIfDisposed(),xu(this)},Pn.prototype.slice=function(t,e){return this.throwIfDisposed(),Wi(this,t,e)},Pn.prototype.softmax=function(t){return this.throwIfDisposed(),Hi(this,t)},Pn.prototype.softplus=function(){return this.throwIfDisposed(),ji(this)},Pn.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),au(this,t,e)},Pn.prototype.split=function(t,e){return this.throwIfDisposed(),Ki(this,t,e)},Pn.prototype.sqrt=function(){return this.throwIfDisposed(),Xi(this)},Pn.prototype.square=function(){return this.throwIfDisposed(),gi(this)},Pn.prototype.squaredDifference=function(t){return this.throwIfDisposed(),qo(this,t)},Pn.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Yc(this,t)},Pn.prototype.squeeze=function(t){return this.throwIfDisposed(),Yi(this,t)},Pn.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Pn?[this,t]:[this,...t];return Ji(n,e)},Pn.prototype.step=function(t){return this.throwIfDisposed(),fo(this,t)};const Ah=qs({stridedSlice_:function(t,e,n,s,r=0,a=0,i=0,o=0,l=0){let u=Hs(t,"x","stridedSlice");const c={x:u},h={begin:e,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return as.runKernelFunc((t=>{null==s&&(s=new Array(e.length));const c=or(i);if(c.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=u.rank-e.length,d=or(o),p=u.shape.slice();d.forEach((t=>{e[t]=0,n[t]=1,p.splice(t,0,1)})),u=jr(u,p);const{begin:f,end:m,strides:g}=dr(u.shape,c,h,e,n,s,r,a,i);e=f,n=m,s=g;const b=or(l);b.forEach((t=>{n[t]=e[t]+1,s[t]=1}));const y=lr(e,n,s),x=y.filter(((t,e)=>-1===b.indexOf(e)));if(s.every((t=>1===t)))return jr(Wi(u,e,y),x);const w=t.stridedSlice(u,e,n,s);return jr(w,x)}),c,null,"StridedSlice",h)}});Pn.prototype.stridedSlice=function(t,e,n,s,r,a,i,o){return this.throwIfDisposed(),Ah(this,t,e,n,s,r,a,i,o)},Pn.prototype.subStrict=function(t){return this.throwIfDisposed(),Jc(this,t)},Pn.prototype.sub=function(t){return this.throwIfDisposed(),ri(this,t)},Pn.prototype.sum=function(t,e){return this.throwIfDisposed(),ai(this,t,e)};const Dh=qs({tan_:function(t){const e=Hs(t,"x","tan"),n={x:e};return as.runKernelFunc(((t,n)=>{const s=t.tan(e);return n([e]),s}),n,null,nn)}});Pn.prototype.tan=function(){return this.throwIfDisposed(),Dh(this)},Pn.prototype.tanh=function(){return this.throwIfDisposed(),Qi(this)},Pn.prototype.tile=function(t){return this.throwIfDisposed(),Ua(this,t)},Pn.prototype.toBool=function(){return this.throwIfDisposed(),Ks(this,"bool")},Pn.prototype.toFloat=function(){return this.throwIfDisposed(),Ks(this,"float32")},Pn.prototype.toInt=function(){return this.throwIfDisposed(),Ks(this,"int32")};const Th=qs({topk_:function(t,e=1,n=!0){const s=Hs(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const a={x:s},i={k:e,sorted:n},[o,l]=as.runKernelFunc((t=>t.topk(s,e,n)),a,null,"TopK",i);return{values:o,indices:l}}});Pn.prototype.topk=function(t,e){return this.throwIfDisposed(),Th(this,t,e)},Pn.prototype.transpose=function(t){return this.throwIfDisposed(),qr(this,t)};const Fh=qs({unique_:function(t,e=0){const n=Hs(t,"x","unique",null);v(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:e},[a,i]=as.runKernel(on,s,r);return{values:a,indices:i}}});Pn.prototype.unique=function(t){return this.throwIfDisposed(),Fh(this,t)},Pn.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Mu(this,t,e)},Pn.prototype.unstack=function(t){return this.throwIfDisposed(),no(this,t)},Pn.prototype.where=function(t,e){return this.throwIfDisposed(),ao(t,this,e)},Pn.prototype.zerosLike=function(){return this.throwIfDisposed(),Ii(this)}},669:(t,e,n)=>{"use strict";var s={};n.r(s),n.d(s,{addImpl:()=>Aa,ceilImpl:()=>ai,expImpl:()=>Vi,expm1Impl:()=>ji,floorImpl:()=>po,logImpl:()=>$o,maxImpl:()=>To,multiplyImpl:()=>Xi,notEqualImpl:()=>Vo,rsqrtImpl:()=>Qo,simpleAbsImpl:()=>za,sliceImpl:()=>Zi,squaredDifferenceImpl:()=>kl,subImpl:()=>no,transposeImpl:()=>Fo,uniqueImpl:()=>Dl});var r=n(941);let a;function i(){return null==a&&(a=(0,r.y3$)().epsilon()),a}class o extends Error{constructor(t){super(t),Object.setPrototypeOf(this,o.prototype)}}class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class u extends Error{constructor(t){super(t),Object.setPrototypeOf(this,u.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class h extends Error{constructor(t){super(t),Object.setPrototypeOf(this,h.prototype)}}function d(t,e){if(Array.isArray(t)){let n=[];for(let s=0;s<e;s++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function p(t,e){if(!t)throw new h(e)}function f(t,e){let n=0;for(const s of t)s===e&&n++;return n}function m(t){return 1===t.length?t[0]:t}function g(t){return Array.isArray(t)?t:[t]}function b(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function y(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,((t,e)=>e.toUpperCase()))}Error;let x={};function w(t){if(null==t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function v(t){if(null!=t&&"object"==typeof t)if(Array.isArray(t))t.forEach((t=>v(t)));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"==typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!=typeof e.value?v(e):t[n]=e.value)}}}function k(t,e={},n={},s="object",r=!1){if("string"==typeof t){const r=t;let a;if(r in n)a=n[r];else if(r in x)a=x[r];else if(a=e[r],null==a)throw new u(`Unknown ${s}: ${t}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=t;if(null==a.className||null==a.config)throw new u(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in x?[o,l]=x.className:i in e&&([o,l]=e[i]),null==o)throw new u(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const t={};for(const e of Object.keys(x))t[e]=x[e];for(const e of Object.keys(n))t[e]=n[e];a.config.customObjects=t;const e=Object.assign({},x);for(const t of Object.keys(n))x[t]=n[t];v(a.config);const s=l(o,a.config,n,r);return x=Object.assign({},e),s}{const t=Object.assign({},x);for(const t of Object.keys(n))x[t]=n[t];const e=new o(a.config);return x=Object.assign({},t),e}}}function I(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function C(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function $(t){if(null==t)throw new u(`Invalid value in obj: ${JSON.stringify(t)}`);for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function S(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new u(`${n} is not a valid ${e}.  Valid values are ${t} or null/undefined.`)}function N(t,e,n=0,s=1/0){return p(n>=0),p(s>=n),Array.isArray(t)&&t.length>=n&&t.length<=s&&t.every((t=>typeof t===e))}function E(t,e){Array.isArray(t)?(r.D5U.hu(t.length>0,(()=>`${e} is unexpectedly an empty array.`)),t.forEach(((t,n)=>E(t,`element ${n+1} of ${e}`)))):r.D5U.hu(Number.isInteger(t)&&t>0,(()=>`Expected ${e} to be a positive integer, but got ${R(t)}.`))}function R(t){return null===t?"null":Array.isArray(t)?"["+t.map((t=>R(t))).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}function A(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function D(t,e){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(t,t),e,!0))))}class T extends r.m7h.iV{getConfig(){return{}}}class F extends T{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>{const e=D(t,this.axis),n=r.iUl(e,0,this.maxValue);return r.dC7(t,r.hiC(n,r.IHx(i(),e)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}F.className="MaxNorm",r.m7h.ax(F);class O extends T{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>r.hiC(t,r.IHx(i(),D(t,this.axis)))))}getConfig(){return{axis:this.axis}}}O.className="UnitNorm",r.m7h.ax(O);class _ extends T{apply(t){return r.UYe(t)}}_.className="NonNeg",r.m7h.ax(_);class M extends T{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return(0,r.lub)((()=>{const e=D(t,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(e,this.minValue,this.maxValue)),r.dC7(1-this.rate,e));return r.dC7(t,r.hiC(n,r.IHx(i(),e)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}M.className="MinMaxNorm",r.m7h.ax(M);const B={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function L(t){return w(t)}function z(t,e={}){return k(t,r.m7h.U3.getMap().classNameMap,e,"constraint")}function W(t){return null==t?null:"string"==typeof t?z({className:t in B?B[t]:t,config:{}}):t instanceof T?t:z(t)}const U=["channelsFirst","channelsLast"],P=["valid","same","causal"],V=["max","avg"],G=["sum","mul","concat","ave"],H=new Map;function j(t){S(U,"DataFormat",t)}function q(t){S(P,"PaddingMode",t)}function K(t){S(V,"PoolMode",t)}const X=[];function Y(t,e){X.push(t);try{const t=e();return X.pop(),t}catch(t){throw X.pop(),t}}function J(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===X.length?"":X.join("/")+"/")+t}function Q(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");H.has(t)||H.set(t,0);const e=H.get(t);if(H.set(t,H.get(t)+1),e>0){const n=`${t}_${e}`;return H.set(n,1),n}return t}const Z=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tt(t){return!!t.match(Z)}function et(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let s=1;for(let r=e;r<n;++r)s*=t[r];return s}function nt(t){return t=Array.isArray(t)?new Float32Array(t):t,(0,r.RRF)(t)}function st(t){return r.VV$(nt(t)).dataSync()[0]}function rt(t){return r.Fp7(nt(t)).dataSync()[0]}function at(t,e){if(e<t)throw new u(`end (${e}) < begin (${t}) is forbidden.`);const n=[];for(let s=t;s<e;++s)n.push(s);return n}function it(t,e){return t.asType(e)}function ot(t,e=-1){const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function lt(t,e,n){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:return r.SmN(t,[e,0],[n,t.shape[1]]);case 3:return r.CnO(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return r.p0P(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return r.tPi(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return r.tPi(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new u(`sliceAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ut(t,e,n){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:return r.SmN(t,[0,e],[t.shape[0],n]);case 3:return r.CnO(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return r.p0P(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new u(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ct(t,e,n,s){return(0,r.lub)((()=>{switch(t.rank){case 1:return r.jZU(t,e,n);case 2:switch(s){case 1:return lt(t,e,n);case 2:return ut(t,e,n);default:throw new u(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return lt(t,e,n);case 2:return r.CnO(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return ut(t,e,n);default:throw new u(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return lt(t,e,n);case 2:return r.p0P(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return r.p0P(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return ut(t,e,n);default:throw new u(`The axis is not within the rank of the tensor ${s}`)}default:throw new u(`sliceAlongLastAxis() received an unsupported tensor rank: ${t.rank}`)}}))}function ht(t,e=-1){let n;return e<0&&(n=t[0].rank,e=0!==n?n:0),e===t[0].rank&&(e=-1),r.zoF(t,e)}function dt(t,e){switch(t.rank){case 1:return r.gME([t,e]);case 2:return r.Izb([t,e],0);case 3:return r.MNy([t,e],0);case 4:return r.ZaL([t,e],0);default:throw new u(`concatAlongFirstAxis() received an unsupported tensor rank: ${t.rank}`)}}function pt(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new u(`The length of input n (${e.length}) does not match the number of dimensions in input x (${t.rank})`);return r.Gg6(t,e)}function ft(t,e=0,n=1,s,a){return r.nGf(t,e,n,s,a)}function mt(t,e,n,s){if(t.rank<2||e.rank<2)throw new c(`dot requires both inputs to be rank >= 2 but got x shape = ${t.shape} and y shape = ${e.shape}`);if(e.rank>=3&&t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new c(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${t.shape} and  y shape = ${e.shape}`);if(2===t.rank&&2===e.rank){const a=!1,i=!1;return r.imm.OI({a:t,b:e,transposeA:a,transposeB:i,bias:s?yt(t.rank,s,"channelsLast"):null,activation:n})}{const a=t.shape.slice(),i=a.pop();t=t.reshape([-1,i]);const o=e.shape.slice(),l=o.pop(),u=o.pop(),c=[...o,l],h=Array.from({length:e.rank},((t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n));e=e.transpose(h).reshape([u,-1]);const d=[...a,...c],p=!1,f=!1;return r.imm.OI({a:t,b:e,transposeA:p,transposeB:f,bias:s?yt(t.rank,s,"channelsLast"):null,activation:n}).reshape(d)}}function gt(t,e,n){return(0,r.lub)((()=>(e=Array.isArray(e)?(0,r.RRF)(e,"int32"):e.toInt(),r.Iqj(t,e,n))))}function bt(t){return r.dC7(t,t)}function yt(t,e,n){const s=e.shape;if(1!==e.rank&&e.rank!==t)throw new u(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${t}`);if(5===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(4===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(3===t){if("channelsFirst"===n)return 1===s.length?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(t<3)return e;throw new u(`Unsupported input rank by biasAdd: ${e.rank}`)}function xt(t,e,n){return(0,r.lub)((()=>(null==n&&(n="channelsLast"),j(n),t.add(yt(t.rank,e,n)))))}function wt(t,e,n,s){return(0,r.lub)((()=>r.rvX(t,e,n,s)))}function vt(t,e,n=!1){return n?t():e()}const kt=["fanIn","fanOut","fanAvg"],It=["normal","uniform","truncatedNormal"];class Ct extends r.m7h.iV{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class $t extends Ct{apply(t,e){return(0,r.lls)(t,e)}}$t.className="Zeros",r.m7h.ax($t);class St extends Ct{apply(t,e){return(0,r.iUs)(t,e)}}St.className="Ones",r.m7h.ax(St);class Nt extends Ct{constructor(t){if(super(),"object"!=typeof t)throw new u(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new u(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(t,e))))}getConfig(){return{value:this.value}}}Nt.className="Constant",r.m7h.ax(Nt);class Et extends Ct{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return(0,r.LGj)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Et.className="RandomUniform",r.m7h.ax(Et);class Rt extends Ct{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`randomNormal does not support dType ${e}.`);return ft(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Rt.className="RandomNormal",r.m7h.ax(Rt);class At extends Ct{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`truncatedNormal does not support dType ${e}.`);return(0,r.Xu6)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}At.className="TruncatedNormal",r.m7h.ax(At);class Dt extends Ct{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return(0,r.lub)((()=>{if(2!==t.length||t[0]!==t[1])throw new u("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(t[0]))}))}getConfig(){return{gain:this.gain}}}Dt.className="Identity",r.m7h.ax(Dt);class Tt extends Ct{constructor(t){if(super(),t.scale<0)throw new u(`scale must be a positive float. Got: ${t.scale}`);var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,S(kt,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){S(It,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t,e="channelsLast"){let n,s;if(j(e),2===t.length)n=t[0],s=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===e){const e=et(t,2);n=t[1]*e,s=t[0]*e}else if("channelsLast"===e){const e=et(t,0,t.length-2);n=t[t.length-2]*e,s=t[t.length-1]*e}}else{const e=et(t);n=Math.sqrt(e),s=Math.sqrt(e)}return[n,s]}(t),s=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new c(`${this.getClassName()} does not support dType ${e}.`);return(0,r.Xu6)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*i);return(0,r.LGj)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Tt.className="VarianceScaling",r.m7h.ax(Tt);class Ft extends Tt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Ft.className="GlorotUniform",r.m7h.ax(Ft);class Ot extends Tt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Ot.className="GlorotNormal",r.m7h.ax(Ot);class _t extends Tt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}_t.className="HeNormal",r.m7h.ax(_t);class Mt extends Tt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Mt.className="HeUniform",r.m7h.ax(Mt);class Bt extends Tt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Bt.className="LeCunNormal",r.m7h.ax(Bt);class Lt extends Tt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Tt.className}}Lt.className="LeCunNormal",r.m7h.ax(Lt);class zt extends Ct{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new c("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return(0,r.lub)((()=>{if(t.length<2)throw new c("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const e=ft(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=r.$r2.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),(0,r.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}zt.className="Orthogonal",r.m7h.ax(zt);const Wt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ut(t,e={}){return k(t,r.m7h.U3.getMap().classNameMap,e,"initializer")}function Pt(t){return w(t)}function Vt(t){if("string"==typeof t){const e=t in Wt?Wt[t]:t;if("GlorotNormal"===e)return new Ot;if("GlorotUniform"===e)return new Ft;if("HeNormal"===e)return new _t;if("HeUniform"===e)return new Mt;if("LeCunNormal"===e)return new Bt;if("LeCunUniform"===e)return new Lt;{const t={};return t.className=e,t.config={},Ut(t)}}return t instanceof Ct?t:Ut(t)}let Gt=0;function Ht(){return Gt++}const jt={};function qt(t=""){return t in jt||(jt[t]=0),jt[t]+=1,t+jt[t].toString()}function Kt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Xt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Yt(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new u(`Expected Tensor length to be 1; got ${t.length}`);e=t[0]}else e=t;return e}function Jt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new u(`Expected exactly 1 Shape; got ${t.length}`)}return t}function Qt(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce(((t,e)=>t*e));return e}class Zt{constructor(t,e="float32",n="Variable",s=!0,a=null){this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=Ht(),n=null==n?"Variable":n,this.originalName=J(n),this.name=Q(this.originalName),this.trainable_=s,this.constraint=a,this.val=r.VD$(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function te(t){return t.map((t=>t.read()))}function ee(t){t.forEach((t=>{t[0].write(t[1])}))}class ne{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class se{constructor(t,e,n,s,r,a,i){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Ht(),null!=a&&(this.originalName=J(a),this.name=Q(this.originalName)),this.rank=e.length}}let re=0;class ae{constructor(t,e){this.callArgs=e,this.id=re++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const e of t.inboundLayers)null!=e&&e.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ie=0;class oe extends r.m7h.iV{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ie++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=b(t)+"_"+qt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new l(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new u(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return m(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return m(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new o(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new o(`Layer ${this.name} is not connected, no input to return.`);return m(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new o(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new o(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return m(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((t=>t()))}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach((e=>e.trainable=t)),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((t=>t.trainable)):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((t=>!t.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=g(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=g(this.inputSpec);if(t.length!==e.length)throw new u(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let n=0;n<t.length;n++){const s=t[n],r=e[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new u(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new u(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new u(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new u(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const t=s.shape;for(const e in r.axes){const s=Number(e),a=r.axes[e],i=s>=0?t[s]:t[t.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new u(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const e=r.shape[t],a=s.shape[t];if(null!=e&&null!=a&&e!==a)throw new u(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=g(t);let s=!0;for(const t of n)if(!(t instanceof se)){s=!1;break}let r=!0;for(const t of n)if(t instanceof se){r=!1;break}if(s===r)throw new u("Arguments to apply() must be all SymbolicTensors or all Tensors");return Y(this.name,(()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of g(t))e.push(n.shape);this.build(m(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let s=this.call(t,e);const r=g(s),a=[];for(let t of r)-1!==n.indexOf(t)&&(t=t.clone()),a.push(t);if(s=m(a),null!=this.activityRegularizer)throw new c("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(t){t=g(t);const e=[];for(const n of t)e.push(n.shape);return m(e)}(t),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new se(a,n,this,g(t),e,this.name,s))):new se(a,s,this,g(t),e,this.name),this.addInboundNode(t,r,null,null,n,s,e),this._refCount++,null!=this.activityRegularizer)throw new c("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=t[s]&&t[s]!==n&&(e=!0)})),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new o(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new o(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new l(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Qt(this.weights)}build(t){this.built=!0}getWeights(t=!1){return te(t?this.trainableWeights:this.weights)}setWeights(t){(0,r.lub)((()=>{const e=this.weights;if(e.length!==t.length)throw new u(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const n=[],s=te(e);for(let a=0;a<s.length;++a){const i=s[a],o=e[a],l=t[a];if(!r.D5U.cO(i.shape,l.shape))throw new u(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}ee(n)}))}addWeight(t,e,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(t))throw new u(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=Vt("zeros"));const o=s.apply(e,n),l=new Zt(o,n,t,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=g(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach((t=>{if(null!=t)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return e}addInboundNode(t,e,n,s,r,a,i=null){const o=g(t);e=g(e),n=g(n),s=g(s),r=Xt(r),a=Xt(a);const l=[],u=[],c=[];for(const t of o)l.push(t.sourceLayer),u.push(t.nodeIndex),c.push(t.tensorIndex);new ae({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:e,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let t=0;t<e.length;t++)e[t].sourceLayer=this,e[t].nodeIndex=this.inboundNodes.length-1,e[t].tensorIndex=t}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach((t=>t.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function le(t,e,n){if((null==e||null!=n&&n>0)&&(e=t.sourceLayer,n=t.nodeIndex),0===e.inboundNodes.length)return[t];{const t=e.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{const e=[];for(let n=0;n<t.inboundLayers.length;n++){const s=le(t.inputTensors[n],t.inboundLayers[n],t.nodeIndices[n]);for(const t of s)-1===e.indexOf(t)&&e.push(t)}return e}}}class ue extends oe{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:qt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new u("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new u("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new u("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const s=new se(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new ae({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new u(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function ce(t){if(null==t)return;const e=[],n=[],s=[];for(const r in t){const a=t[r];if("number"!=typeof a){const t=a;e.push(t.data()),n.push(r),s.push(t)}}if(e.length>0){const a=await Promise.all(e);for(let e=0;e<a.length;++e)t[n[e]]=a[e][0];(0,r.B90)(s)}}function he(t){if(null!=t)for(const e in t){const n=t[e];"number"!=typeof n&&n.dispose()}}var de;ue.className="InputLayer",r.m7h.ax(ue),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(de||(de={}));class pe{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class fe{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class me extends pe{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const t in e){const s=e[t];if("number"==typeof s)this.totals.hasOwnProperty(t)||(this.totals[t]=0),this.totals[t]=this.totals[t]+s*n;else{let e;t in this.totals?e=this.totals[t]:this.totals[t]=0;const a=(0,r.lub)((()=>(0,r.IHx)(this.totals[t],(0,r.dC7)(s,n))));this.totals[t]=a,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const t of this.params.metrics)null!=this.totals[t]&&("number"==typeof this.totals[t]?e[t]=this.totals[t]/this.seen:(0,r.lub)((()=>{const n=(0,r.dC7)((0,r.hiC)(1,this.seen),this.totals[t]);e[t]=n,this.totals[t].dispose(),(0,r.CnY)(e[t])})))}}class ge extends pe{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const t in e)null==this.history[t]&&(this.history[t]=[]),this.history[t].push(e[t])}async syncData(){const t=[],e=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];t.push(i.data()),e.push(s),n.push(a)}}const s=await Promise.all(t);for(let t=0;t<s.length;++t)this.history[e[t]][n[t]].dispose(),this.history[e[t]][n[t]]=s[t][0]}}class be extends pe{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.D5U.hj(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,s=r.D5U.zO();return(...a)=>{const i=r.D5U.zO();return i-s<e||(s=i,n=t(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const s=[];null!=this.yield&&(await ce(n),s.push(this.yield(t,e,n))),s.push((0,r.glt)()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ce(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await ce(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push((0,r.glt)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ce(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await ce(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push((0,r.glt)()):r.D5U.hj(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await ce(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ce(t),await this.trainEnd(t))}}function ye(t,e){return null==t&&(t={}),t instanceof pe?[t]:Array.isArray(t)&&t[0]instanceof pe?t:g(t).map((t=>new be(t,e)))}class xe{constructor(){}static registerCallbackConstructor(t,e){r.D5U.hu(t>=0&&Number.isInteger(t),(()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`)),xe.checkForDuplicate(e),null==xe.constructors[t]&&(xe.constructors[t]=[]),xe.constructors[t].push(e)}static checkForDuplicate(t){for(const e in xe.constructors)xe.constructors[+e].forEach((e=>{if(e===t)throw new u("Duplicate callback constructor.")}))}static clear(){xe.constructors={}}static createCallbacks(t){const e=[];for(const n in xe.constructors){const s=+n;t>=s&&e.push(...xe.constructors[s])}return e.map((t=>new t))}}function we(t,e,n,s,r,a,i,o,l){const u=new ge,c=[new me,...xe.createCallbacks(e)];null!=t&&c.push(...t),c.push(u);const h=new fe(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}function ve(t,e={},n=!1){return k(t,r.m7h.U3.getMap().classNameMap,e,"layer",n)}function ke(t,e){return(0,r.lub)((()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=r.Smz(bt(t),e,!0),s=r.hlL(n.shape,i()),a=r._b3(r.gWQ(n,s));return r.hiC(t,a)}))}function Ie(t,e){return(0,r.lub)((()=>r.J69(bt(r.luU(e,t)),-1)))}function Ce(t,e){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(e,t)),-1)))}function $e(t,e){return(0,r.lub)((()=>{const n=r.luU(t,e),s=r.iUl(r.WnP(t),i(),Number.MAX_VALUE),a=r.WnP(r.hiC(n,s));return r.dC7(100,r.J69(a,-1))}))}function Se(t,e,n=!1){return(0,r.lub)((()=>{if(n)e=r.XAC(e);else{const t=r.Smz(e,e.shape.length-1,!0);e=r.hiC(e,t)}return e=r.iUl(e,i(),1-i()),r.W76(r.Smz(r.dC7(t.toFloat(),r.cM7(e)),e.shape.length-1))}))}function Ne(t,e,n=!1){return(0,r.lub)((()=>{const s=r.GWj(function(t){const e=[et(t.shape)];return t.reshape(e)}(t)).toInt(),a=(e=r.iUl(e,i(),1-i())).shape;return Se(r.lfX(s,a[a.length-1]).reshape(a),e,n)}))}function Ee(t,e){return(0,r.lub)((()=>{let n;return n=r.iUl(e,i(),1-i()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(t,e){if(!r.D5U.cO(t.shape,e.shape))throw new u(`logits and labels must have the same shape, but got shapes ${JSON.stringify(t.shape)} and ${JSON.stringify(e.shape)}`);return(0,r.lub)((()=>{const n=e.relu(),s=e.abs().neg();return n.sub(e.mul(t)).add(s.exp().log1p())}))}(t,n),-1)}))}function Re(t,e){return(0,r.lub)((()=>{const n=ke(t,-1),s=ke(e,-1),a=r.dC7(n,s);return r.W76(r.Smz(a,-1))}))}xe.constructors={};const Ae={meanSquaredError:Ie,meanAbsoluteError:Ce,meanAbsolutePercentageError:$e,meanSquaredLogarithmicError:function(t,e){return(0,r.lub)((()=>{const n=r.iUl(e,i(),Number.MAX_VALUE),s=r.cM7(r.IHx(1,n)),a=r.iUl(t,i(),Number.MAX_VALUE),o=r.cM7(r.IHx(1,a));return r.J69(bt(r.luU(s,o)),-1)}))},squaredHinge:function(t,e){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(t,e)));return r.J69(bt(n),-1)}))},hinge:function(t,e){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(t,e)));return r.J69(n,-1)}))},categoricalHinge:function(t,e){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(t,e),-1),s=r.Fp7(r.dC7(r.luU(1,t),e),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(t,e){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(e,t),a=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(a,-1)}))},categoricalCrossentropy:Se,sparseCategoricalCrossentropy:Ne,binaryCrossentropy:Ee,kullbackLeiblerDivergence:function(t,e){return(0,r.lub)((()=>{const n=r.iUl(t,i(),1),s=r.iUl(e,i(),1);return r.Smz(r.dC7(t,r.cM7(r.hiC(n,s))),-1)}))},poisson:function(t,e){return(0,r.lub)((()=>{const n=r.cM7(r.IHx(i(),e));return r.J69(r.luU(e,r.dC7(t,n)),-1)}))},cosineProximity:Re};function De(t){if("string"==typeof t){if(t in Ae)return Ae[t];let e=`Unknown loss ${t}`;throw t.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${t}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new u(e)}return t}function Te(t,e){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(e)),s=it(r.pjt(e,n),t.dtype);return r.J69(r.DgJ(t,s),-1)}))}function Fe(t,e){return(0,r.lub)((()=>it(r.DgJ(r.NqF(t,-1),r.NqF(e,-1)),"float32")))}function Oe(t,e){return Ee(t,e)}function _e(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),r.DgJ(t,e).asType("float32")}const Me=Se,Be=Ne,Le={binaryAccuracy:Te,categoricalAccuracy:Fe,precision:function(t,e){return(0,r.lub)((()=>{const n=function(t,e){return(0,r.lub)((()=>r.HvI(t.equal(1),e.equal(1)).sum().cast("float32")))}(t,e),s=function(t,e){return(0,r.lub)((()=>r.HvI(t.equal(0),e.equal(1)).sum().cast("float32")))}(t,e),a=n.add(s);return r.arb(r.pjt(a,0),n.div(a),0).cast("float32")}))},categoricalCrossentropy:Me,sparseCategoricalCrossentropy:Be,mse:Ie,MSE:Ie,mae:Ce,MAE:Ce,mape:$e,MAPE:$e,cosine:Re};function ze(t){if("string"==typeof t&&t in Le)return Le[t];if("string"!=typeof t&&null!=t)return t;throw new u(`Unknown metric ${t}`)}function We(t){if(p(null!==t,`Unknown LossOrMetricFn ${t}`),"string"==typeof t)return t;{let e;for(const n of Object.keys(Ae))if(Ae[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Le))if(Le[n]===t){e=n;break}return void 0!==e?e:t.name}}function Ue(t,e,n=!1){if(null==t||"object"!=typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Pe(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Pe(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!=typeof n)return!1;if(!Pe(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Pe(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Ve(t,e,n=console.log){let s="";for(let n=0;n<t.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=t[n],s=s.slice(0,e[n]),s+=" ".repeat(e[n]-s.length);n(s)}function Ge(t,e,n){let s;try{s=JSON.stringify(t.outputShape)}catch(t){s="multiple"}Ve([`${t.name} (${t.getClassName()})`,s,t.countParams().toString()],e,n)}function He(t,e,n,s){let r;try{r=JSON.stringify(t.outputShape)}catch(t){r="multiple"}const a=[];for(const e of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(e)))for(let t=0;t<e.inboundLayers.length;++t){const n=e.inboundLayers[t].name,s=e.nodeIndices[t],r=e.tensorIndices[t];a.push(`${n}[${s}][${r}]`)}const i=t.name,o=t.getClassName(),l=0===a.length?"":a[0];Ve([`${i} (${o})`,r,t.countParams().toString(),l],e,s);for(let t=1;t<a.length;++t)Ve(["","","",a[t]],e,s)}function je(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"==typeof n}function qe(t,e){if(null===t)return null;if("string"==typeof t)return y(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];je(e,r,s)?n.push(s):n.push(qe(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];if("name"===n&&"string"==typeof s)e[n]=s;else{const t=y(n);e[t]=qe(s,t)}}return e}}function Ke(t,e){if(null==t)return null;if("string"==typeof t)return b(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){const n=[],s=t.length;for(let r=0;r<s;++r){const s=t[r];je(e,r,s)?n.push(s):n.push(Ke(s,e))}return n}{const e={};for(const n of Object.keys(t)){const s=t[n];e[b(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Ke(s,n):s}return e}}class Xe{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof Xe)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new u(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return(0,r.pju)(e,t.dtype)}catch(n){throw new u(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${t.name}' (${t.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof se){if(null==this.id2Value[t.id])throw new u(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new u(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof se){if(null==this.id2Value[t.id])throw new u(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new u(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const Ye={},Je={};function Qe(t,e,n,s){const a=null!=n&&n.training,i=Array.isArray(t),o=i?t:[t],l=o.map((t=>t.name)),u=[],c=e.names();for(const t of l)-1!==c.indexOf(t)?u.push(e.getValue(t)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+e.names().join(",");let d,p;if(null==Ye[h]){const t=function(t,e){r.D5U.hu(null!=t&&t.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===t.length){const r=tn(t[0],e);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of t){const{sorted:t,recipientMap:i}=tn(a,e);for(const e of t)r.has(e.name)||(n.push(e),r.add(e.name));for(const t in i)null==s[t]&&(s[t]=new Set),i[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Ze(s)}}(o,e);d=t.sorted,p=t.recipientCounts,Ye[h]=d,Je[h]=p}d=Ye[h],p={},a||Object.assign(p,Je[h]);const f=new Xe(e);for(let t=0;t<d.length;++t){if(null!=s){const t=(0,r.sq6)().numTensors;t>s.maxNumTensors&&(s.maxNumTensors=t),t<s.minNumTensors&&(s.minNumTensors=t)}const i=d[t],o=i.sourceLayer;if(o instanceof ue)continue;const c=[],h=[],m=[];let b=!1;for(const t of i.inputs){const n=f.getValue(t),s=f.getMask(t);c.push(n),h.push(s),null!=s&&(b=!0),a||(p[t.name]--,0!==p[t.name]||e.hasKey(t)||-1!==l.indexOf(t.name)||n.isDisposed||!0===t.sourceLayer.stateful||m.push(n))}b&&((n=n||{}).mask=h[0]);const y=g(o.apply(c,n));let x=null;o.supportsMasking&&(x=o.computeMask(c,h));const w=en(i),v=Array.isArray(w)?w:[w];for(let t=0;t<v.length;++t){f.hasKey(v[t])||f.add(v[t],y[t],Array.isArray(x)?x[0]:x);const e=l.indexOf(v[t].name);-1!==e&&(u[e]=y[t])}a||(0,r.B90)(m)}return f.disposeMasks(),i?u:u[0]}function Ze(t){const e={};for(const n in t)e[n]=t[n].size;return e}function tn(t,e){const n=new Set,s=[],r={};for(const t of e.names())n.add(t);const a=[],i=[];for(a.push(t);a.length>0;){const t=a[a.length-1];if(n.has(t.name)){a.pop();continue}const e=i[i.length-1]===a.length-1;if(0===t.inputs.length||e)a.pop(),s.push(t),n.add(t.name),e&&i.pop();else{i.push(a.length-1);for(const e of t.inputs)null==r[e.name]&&(r[e.name]=new Set),r[e.name].add(t.name),n.has(e.name)||a.push(e)}}return{sorted:s,recipientMap:r}}function en(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const s of t.sourceLayer.inboundNodes[e].outputTensors)if(s.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class nn extends oe{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=qt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],C(this.inputs).length!==this.inputs.length)throw new u(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((t=>t.name))}`);C(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((t=>t.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const t of this.outputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const t of this.inputs){const e=t.sourceLayer,n=t.nodeIndex,s=t.tensorIndex;p(0===n,"input layer has >1 nodes"),p(0===s,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e];if(!(n instanceof ue))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${e} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const t of this.outputLayers)this.outputNames.push(t.name);this.internalInputShapes=this.inputs.map((t=>t.shape)),this.internalOutputShapes=this.outputs.map((t=>t.shape));const e={},n={},s={},r={},a={},i=[],o=(t,e,n,s,r,u)=>{null!=s&&null!=r&&null!=u||(s=t.sourceLayer,r=t.nodeIndex,u=t.tensorIndex);const c=s.inboundNodes[r];if(-1!==n.indexOf(c))throw new l(`The tensor ${t.name} at layer "${s.name}" is part of a cycle.`);if(-1!==e.indexOf(c))return;this.containerNodes.add(nn.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(c)&&n.push(c);const h=c.inboundLayers.length;for(let t=0;t<h;t++){const s=c.inputTensors[t],r=c.inboundLayers[t],a=c.nodeIndices[t],i=c.tensorIndices[t];o(s,e,n,r,a,i)}for(e.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},c=[],h=[];for(const t of this.outputs)o(t,c,h);const d=i.slice().reverse();for(const t of d){n[t.id]=t,t.id in e||(e[t.id]=0);let a=e[t.id];const i=null==s[t.outboundLayer.id]?0:s[t.outboundLayer.id];a=Math.max(a,i),s[t.outboundLayer.id]=a,r[t.outboundLayer.id]=t.outboundLayer,e[t.id]=a;for(let s=0;s<t.inboundLayers.length;s++){const r=t.inboundLayers[s],i=t.nodeIndices[s],o=r.inboundNodes[i],l=null==e[o.id]?0:e[o.id];e[o.id]=Math.max(a+1,l),n[o.id]=o}}const f={};for(const t in e){const s=e[t];s in f||(f[s]=[]),f[s].push(n[t])}const m={};for(const t in s){const e=s[t];e in m||(m[e]=[]),m[e].push(r[t])}let g=Object.keys(m).map((t=>parseInt(t,10))).sort(I);this.layers=[];for(const t of g){const e=m[t];e.sort(((t,e)=>{const n=a[t.id],s=a[e.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof nn&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=m,g=Object.keys(f).map((t=>parseInt(t,10))).sort(I);const b=this.inputs.slice(),y=[];for(const t of g)for(const e of f[t]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===b.indexOf(n))throw new l(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${y}`);for(const t of e.outputTensors)b.push(t);y.push(t.name)}}this.nodesByDepth=f;const x=this.layers.map((t=>t.name));for(const t of x){const e=x.filter((e=>e===t)).length;if(1!==e)throw new l(`The name "${t}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new ae({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((t=>null)),outputMasks:this.outputs.map((t=>null)),inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs.map((t=>t.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach((e=>{e._trainableWeights.forEach((e=>e.trainable=t))})),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new u("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const n={};let s=0;for(const t of this.layers)for(const e of t.weights){if(null!=n[e.originalName])throw new u(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,s++}const r=[];for(const s in t){let a=s;if(null==n[s]){const t=s.split("/");a=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[a])r.push([n[a],t[s]]);else if(e)throw new u(`Provided weight data has no target variable: ${s}`);delete n[a]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new u(`${t.length} of ${s} weights are not set: ${t}`)}ee(r)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 2.7.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const n=Ke(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return(0,r.lub)((()=>{t=g(t);const n=new Xe;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return Qe(this.outputs,n,e)}))}computeMask(t,e){return(0,r.lub)((()=>{let n;return t=g(t),n=null==e?d(null,t.length):g(e),this.runInternalGraph(t,n)[1]}))}computeOutputShape(t){const e=Xt(t);if(e.length!==this.inputLayers.length)throw new u(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let t=0;t<e.length;t++){const s=this.inputLayers[t],r=e[t];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(I);if(s.length>1)for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((t=>t.id)).indexOf(e.id))continue;const s=[];for(let e=0;e<t.inboundLayers.length;e++){const r=t.inboundLayers[e],a=t.nodeIndices[e],i=t.tensorIndices[e],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=Xt(e.computeOutputShape(m(s))),a=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++)n[`${e.name}_${a}_${t}`]=r[t]}}const r=[],a=[];for(let t=0;t<this.outputLayers.length;t++){const e=this.outputLayers[t],n=this.outputLayersNodeIndices[t],s=this.outputLayersTensorIndices[t],r=`${e.name}_${n}_${s}`;a.push(r)}for(let t=0;t<a.length;t++){const e=a[t];p(e in n),r.push(n[e])}return m(r)}runInternalGraph(t,e){null==e&&(e=d(null,t.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=t[s],i=e[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((t=>parseInt(t,10))).sort(I);for(const t of s){const e=this.nodesByDepth[t];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,a=new Array;for(const t of s)t.id in n&&a.push(n[t.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===a.length){const[t,n]=a[0];null==u.mask&&(u.mask=n),o=g(e.call(t,u)),l=g(e.computeMask(t,n)),s=[t],i=[n]}else s=a.map((t=>t[0])),i=a.map((t=>t[1])),null==u.mask&&(u.mask=i),o=g(e.call(s,u)),l=g(e.computeMask(s,i));if(e.activityRegularizer)throw new c("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<r.length;++t){const e=r[t],s=o[t],a=l[t];n[e.id]=[s,a]}}}}const r=[],a=[],i=[];for(const t of this.outputs){p(t.id in n,`Could not compute output ${t.name} : ${t.id}`);const[e,s]=n[t.id];i.push(e.shape),r.push(e),a.push(s)}return[r,a,i]}buildNodeConversionMap(t){const e={};let n;for(const t of this.layers){n=t instanceof nn?1:0;for(let s=0;s<t.inboundNodes.length;s++){const r=nn.nodeKey(t,s);this.containerNodes.has(r)&&(e[r]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new u(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new u("Provide either a layer name or layer index");for(const e of this.layers)if(e.name===t)return e;throw new u(`No such layer: ${t}`)}calculateLosses(){return(0,r.lub)((()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const s=nn.nodeKey(e,n);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t}))}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const t of this.layers){const s=t.getClassName(),r=t.getConfig(),a=[];for(let n=0;n<t.inboundNodes.length;n++){const s=t.inboundNodes[n],r=nn.nodeKey(t,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(e){console.warn(`Layer ${t.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const t=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=e[nn.nodeKey(r,a)];null==l&&(l=0),t.push([r.name,l,o,i])}a.push(t)}}}const i={};i.name=t.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}t.layers=n;const s=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t],r=this.inputLayersNodeIndices[t],a=nn.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[t];s.push([n.name,i,o])}t.inputLayers=s;const r=[];for(let t=0;t<this.outputLayers.length;t++){const n=this.outputLayers[t],s=this.outputLayersNodeIndices[t],a=nn.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=e[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[t];r.push([n.name,i,o])}return t.outputLayers=r,t}static fromConfig(t,e,n={},s=!1){const r={},a={};function i(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function o(t,e){const n=[];let s;for(const a of e){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(t,e);const c=r[o];if(c.inboundNodes.length<=l)return void i(t,e);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&t.apply(m(n),s)}function l(t){const n=t.name,a=ve(t,null!=e.customObjects?e.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,t.inboundNodes.forEach((t=>{if(!(t instanceof Array))throw new u(`Corrupted configuration, expected array for nodeData: ${t}`);i(a,t)}))}const c=e.name,h=e.layers;for(const t of h)l(t);for(;!$(a);)for(const t of h){const e=r[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)o(e,n)}}const d=[],f=[],g=e.inputLayers;for(const t of g){const e=t[0],n=t[1],s=t[2];p(e in r);const a=r[e].inboundNodes[n].outputTensors;d.push(a[s])}const b=e.outputLayers;for(const t of b){const e=t[0],n=t[1],s=t[2];p(e in r);const a=r[e].inboundNodes[n].outputTensors;f.push(a[s])}return new t({inputs:d,outputs:f,name:c})}get stateful(){if(this._stateful)throw new u("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){(0,r.lub)((()=>{this.layers.forEach((t=>{t.stateful&&t.resetStates()}))}))}}function sn(t,e){return function(t,e,n){const s=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>null));if(1===s)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==s)throw new Error(`Provided ${n} is an array of ${t.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const n=[];return e.forEach((e=>{e in t?n.push(t[e]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${e} keys. Provided ${n} not understood: ${JSON.stringify(t)}`)}(t,e,"classWeight")}async function rn(t,e,n,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=(0,r.lub)((()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${t.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${t.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await e.data());(0,r.B90)(e);const a=[];return s.forEach((t=>{if(null==n[t])throw new Error(`classWeight must contain all classes in the training data. The class ${t} exists in the data but not in classWeight`);a.push(n[t])})),(0,r.RRF)(a,"float32")}return null}function an(t,e){return(0,r.dC7)(t,e)}function on(t,e){let n,s;const a=e;n=a.xs,s=a.ys,r.D5U.hu(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`));const i=ln("input",t.inputNames,n),o=ln("output",t.outputNames,s),l=i[0].shape[0];r.D5U.hu(i.length===t.inputs.length,(()=>`LayersModel has ${t.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(t.inputNames)})`)),r.D5U.hu(o.length===t.outputs.length,(()=>`LayersModel has ${t.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(t.outputNames)})`));for(let e=0;e<i.length;e++)r.D5U.hu(i[e].shape[0]===l,(()=>`Batch size mismatch: input ${t.inputNames[e]} has ${i[e].shape[0]}; expected  ${l} based on input ${t.inputNames[0]}.`));for(let e=0;e<o.length;e++)r.D5U.hu(o[e].shape[0]===l,(()=>`Batch size mismatch: output ${t.outputNames[e]} has ${o[e].shape[0]}; expected  ${l} based on input ${t.inputNames[0]}.`));return{xs:i,ys:o}}function ln(t,e,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.hu(n.length===e.length,(()=>`Received an array of ${n.length} Tensors, but expected ${e.length} to match the ${t} keys ${e}.`)),n;{const s=[];for(const r of e){if(null==n[r])throw new u(`The feature data generated by the dataset lacks the required ${t} key '${r}'.`);s.push(n[r])}return s}}function un(t){return"function"==typeof t.iterator}function cn(t){r.D5U.hu(t>0&&Number.isInteger(t),(()=>`batchSize is required to be a positive integer, but got ${t}`))}function hn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map((t=>lt(t,e,n-e))):lt(t,e,n-e)}function dn(t,e){return r.lub((()=>null==t?null:Array.isArray(t)?t.map((t=>dn(t,e))):gt(t,"int32"===e.dtype?e:e.toInt())))}function pn(t,e){const n=[];let s=0,r=null;for(;s<t;)r=s+e,r>=t&&(r=t),n.push([s,r]),s=r;return n}function fn(t){const e=[];t instanceof r.esB&&(t=[t]);for(let n=0;n<t.length;++n){const s=t[n];if(1===s.rank)e.push(ot(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function mn(t,e){if(null==t)return;const n=[];if(e instanceof r.esB)n.push(e.id);else if(Array.isArray(e))e.forEach((t=>n.push(t.id)));else if(null!=e)for(const t in e){const s=e[t];n.push(s.id)}const s=[];if(t instanceof r.esB)-1===n.indexOf(t.id)&&s.push(t);else if(Array.isArray(t))t.forEach((t=>{-1===n.indexOf(t.id)&&s.push(t)}));else if(null!=t)for(const e in t){const r=t[e];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((t=>{t.isDisposed||t.dispose()}))}function gn(t){return Array.isArray(t)}function bn(t){return!function(t){return t instanceof r.esB}(t)&&!gn(t)}function yn(t,e,n,s=!0,r=""){if(null==e||0===e.length){if(null!=t){let e=!1;if(gn(t)&&t.length>0)e=!0;else if(bn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new u(`Error when checking model ${r} expected no data, but got ${t}`)}return[]}if(null==t)return e.map((t=>null));let a;if(bn(t)){t=t,a=[];for(const n of e){if(null==t[n])throw new u(`No data provided for "${n}". Need data for each key in: ${e}`);a.push(t[n])}}else if(gn(t)){if((t=t).length!==e.length)throw new u(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${t}`);a=t}else{if(t=t,e.length>1)throw new u(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${t.shape}`);a=[t]}if(a=fn(a),null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new u(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l>=0&&o!==l)throw new u(`Error when checking ${r}: expected ${e[t]} to have shape [${n[t]}], but got array with shape [${i.shape}].`)}}return a}function xn(t,e,n,s=!0,r=""){let a;if(Array.isArray(t)){if(t.length!==e.length)throw new u(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${t.length} Tensors(s).`);a=t}else{if(e.length>1)throw new u(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(t.shape)}.`);a=[t]}if(null!=n)for(let t=0;t<e.length;++t){if(null==n[t])continue;const i=a[t];if(i.shape.length!==n[t].length)throw new u(`Error when checking ${r}: expected ${e[t]} to have ${n[t].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[t].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[t][a];if(null!=l&&l!==o)throw new u(`Error when checking ${r}: expected ${e[t]} to have shape ${JSON.stringify(n[t])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class wn extends nn{constructor(t){super(t),this.isTraining=!1}summary(t,e,n=console.log){if(!this.built)throw new u("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n,s=console.log){const r=function(t){let e=!0;const n=[],s=[];for(const e in t.nodesByDepth)n.push(t.nodesByDepth[e]);for(const t of n){if(t.length>1||1===t.length&&t[0].inboundLayers.length>1){e=!1;break}s.push(...t)}if(e)for(const n of t.layers){let t=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(t){e=!1;break}t=!0}if(!e)break}return e}(t),a=["Layer (type)","Output shape","Param #"];let i;if(r?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((t=>Math.floor(e*t)))),!r){a.push("Receives inputs"),i=[];for(const e in t.nodesByDepth)i.push(...t.nodesByDepth[e])}s("_".repeat(e)),Ve(a,n,s),s("=".repeat(e));const o=t.layers;for(let t=0;t<o.length;++t)r?Ge(o[t],n,s):He(o[t],n,i,s),s((t===o.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const l=function(t){let e;return e=null!=t.collectedTrainableWeights?Qt(t.collectedTrainableWeights):Qt(t.trainableWeights),e}(t),u=Qt(t.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,i()),Adam:()=>r.p_j.adam(.001,.9,.999,i()),Adamax:()=>r.p_j.adamax(.002,.9,.999,i(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,i()),SGD:()=>r.p_j.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new u(`Unknown Optimizer ${t}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof r.gaJ))throw new u("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new u(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);const n=t.loss;e=n.map((t=>De(t)))}else{const n=De(t.loss);this.outputs.forEach((t=>{e.push(n)}))}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new u(`Unknown entry in loss dictionary: "${e}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==t.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),e.push(De(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let t=0;t<this.outputs.length;++t){const e=this.internalOutputShapes[t],n=this.outputNames[t];this.feedOutputNames.push(n),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[t])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Y("loss",(()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}}));const s=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map((t=>[]));let n;if("string"==typeof t||"function"==typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!=typeof t)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${t}`);n=t}if(Array.isArray(n))return e.map((t=>n));{const t=[];for(const s of e){let e=n.hasOwnProperty(s)?n[s]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),a=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Y("metric",(()=>{for(let t=0;t<this.outputs.length;++t)-1===n.indexOf(t)&&(e=>{let n,s,r;for(const i of e){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const e=this.internalOutputShapes[t];let a;1===e[e.length-1]||this.lossFunctions[t]===Ee?-1!==["accuracy","acc"].indexOf(i)?s=Te:-1!==["crossentropy","ce"].indexOf(i)&&(s=Oe):this.lossFunctions[t]===Ne?-1!==["accuracy","acc"].indexOf(i)?s=_e:-1!==["crossentropy","ce"].indexOf(i)&&(s=Be):-1!==["accuracy","acc"].indexOf(i)?s=Fe:-1!==["crossentropy","ce"].indexOf(i)&&(s=Me),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),r=s,n=""+a}else{const t=ze(i);r=t,n=""+We(i)}let e;Y(n,(()=>{e=r})),a(t,n,e)}})(s[t])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,n={}){const s=null==n.batchSize?32:n.batchSize;cn(s);const r=this.standardizeUserDataXY(t,e,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return m(this.testLoop(i,a,s,n.verbose,n.steps))}finally{mn(r[0],t),mn(r[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const s=null!=(n=n||{}).batches,a=t.testFunction;let i=[];if(n.verbose>0)throw new c("Verbose mode is not implemented yet.");r.D5U.hu(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof e.next?e:await e.iterator();let l=0,u=0;for(;!s||u<n.batches;){const e=await o.next();if(i=r.lub((()=>{if(e.value){const{xs:n,ys:s}=on(t,e.value),o=n.concat(s),c=r.lub((()=>a(o)));if(r.B90(o),0===u)for(let t=0;t<c.length;++t)i.push((0,r.iD$)(0));const h=o[0].shape[0];for(let t=0;t<c.length;++t){const e=c[t],n=i[t];i[t]=r.lub((()=>r.IHx(i[t],r.dC7(h,e)))),u>0&&r.B90(n)}r.B90(c),l+=h,++u}return i})),e.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let t=0;t<i.length;++t){const e=i[t];i[t]=r.hiC(i[t],l),r.B90(e)}return m(i)}(this,t,e)}checkNumSamples(t,e,n,s="steps"){let r;if(null!=n){if(r=null,null!=e)throw new u(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new u(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new u("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),s=n?e:[e],a=this.retrieveSymbolicTensors(s),i=new Xe;if(t instanceof r.esB&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new u(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let e=0;e<this.inputs.length;++e)i.add(this.inputs[e],t[e])}else for(const e of this.inputs){const n=t[e.name];if(null==n)throw new u(`No value is provided for the model's input ${e.name}`);i.add(e,n)}const o=Qe(a,i);return n?o:o[0]}retrieveSymbolicTensors(t){const e=d(null,t.length);let n=t.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((t=>t.name));for(let s=0;s<t.length;++s){const i=a.indexOf(t[s]);if(-1!==i&&(e[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach(((e,s)=>{null==e&&n.push(t[s])})),new u(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return e}predictLoop(t,e=32,n=!1){return r.lub((()=>{const s=this.checkNumSamples(t);if(n)throw new c("Verbose predictLoop() is not implemented yet.");const a=pn(s,e),i=this.outputs.map((t=>[]));for(let e=0;e<a.length;++e)r.lub((()=>{const n=a[e][0],s=a[e][1],r=hn(t,n,s),i=[];if(Array.isArray(r))for(let t=0;t<r.length;++t)i.push({key:this.inputs[t],value:r[t]});else i.push({key:this.inputs[0],value:r});const o=new Xe(i);return Qe(this.outputs,o)})).forEach(((t,e)=>i[e].push(t)));return m(i.map((t=>r.zoF(t,0))))}))}predict(t,e={}){const n=fn(t);xn(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==e.batchSize?32:e.batchSize;return cn(s),this.predictLoop(n,s)}finally{mn(n,t)}}predictOnBatch(t){xn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,n=!0,s){if(null==this.optimizer_)throw new l("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let t=0;t<this.feedOutputShapes.length;++t){const e=this.feedOutputShapes[t];this.feedLossFns[t]===Ne?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(t,e,n){const s=C(t.map((t=>t.shape[0])));s.sort();const a=C(e.map((t=>t.shape[0])));if(a.sort(),s.length>1)throw new u(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((t=>t.shape)))}`);if(a.length>1)throw new u(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((t=>t.shape)))}`);if(s.length>0&&a.length>0&&!r.D5U.cO(s,a))throw new u(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(t=yn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=yn(e,this.feedOutputNames,a,!1,"target")),function(t,e,n){const s=[Ie,Ee,Se];for(let r=0;r<t.length;++r){const a=t[r],i=e[r],o=n[r];if(null!=i){if(i===Se&&1===a.shape[a.shape.length-1])throw new u(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const t=a.shape.slice(1),e=o.slice(1);for(let n=0;n<t.length;++n){const s=t[n],r=e[n];if(null!=r&&s!==r)throw new u(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new u(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(t,e,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const t=sn(s,this.outputNames);l=[];for(let e=0;e<t.length;++e)l.push(await rn(o[e],null,t[e]))}return[i,o,l]}testLoop(t,e,n,s=0,a){return r.lub((()=>{const i=this.checkNumSamples(e,n,a,"steps"),o=[];if(s>0)throw new c("Verbose mode is not implemented yet.");if(null!=a)throw new c("steps mode in testLoop() is not implemented yet");{const s=pn(i,n),a=(0,r.RRF)(at(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],l=s[n][1],u=lt(a,i,l-i),c=dn(e,u),h=t(c);if(0===n)for(let t=0;t<h.length;++t)o.push((0,r.iD$)(0));for(let t=0;t<h.length;++t){const e=h[t];o[t]=r.IHx(o[t],r.dC7(l-i,e))}}for(let t=0;t<o.length;++t)o[t]=r.hiC(o[t],i)}return o}))}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const s=t[n];let r=s;f(t,s)>1&&(r+=`_${f(t.slice(0,n),s)}`),e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((t=>t.read()));return[this.optimizer_.minimize((()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const o=new Xe(t),l=Qe(this.outputs,o,{training:!0});let u;for(let t=0;t<this.lossFunctions.length;++t){let n=(0,this.lossFunctions[t])(s[t],l[t]);null!=a[t]&&(n=an(n,a[t]));const i=r.J69(n);e.push(i),u=0===t?n:r.IHx(u,n)}for(let t=0;t<this.metricsTensors.length;++t){let n;if(this.outputs.length>1&&t<this.outputs.length)n=e[t];else{const e=this.metricsTensors[t][0],a=this.metricsTensors[t][1];n=r.J69(e(s[a],l[a]))}r.CnY(n),i.push(n)}return u=r.J69(u),this.calculateLosses().forEach((t=>{u=r.IHx(u,t)})),u}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>r.lub((()=>{const e=[];let n;const s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let t=0;t<this.inputs.length;++t)i.push({key:this.inputs[t],value:s[t]});const o=new Xe(i),l=Qe(this.outputs,o);for(let t=0;t<this.lossFunctions.length;++t){const s=this.lossFunctions[t],i=r.J69(s(a[t],l[t]));n=0===t?i:r.IHx(n,i),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],s=this.metricsTensors[t][1],i=r.J69(n(a[s],l[s]));e.push(i)}return e}))}async fit(t,e,n={}){return async function(t,e,n,s={}){if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,h,d,p;t.isTraining=!0;try{const f=null==s.batchSize?32:s.batchSize;cn(f);const m=!1,g=await t.standardizeUserData(e,n,s.sampleWeight,s.classWeight,m,f);a=g[0],i=g[1],p=g[2];let b,y=!1;if(null!=s.validationData&&s.validationData.length>0){if(y=!0,2!==s.validationData.length)throw 3===s.validationData.length?new c("validationData including sample weights is not supported yet."):new u(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);o=s.validationData[0],l=s.validationData[1];const e=!0,n=await t.standardizeUserData(o,l,null,null,e,f);h=n[0],d=n[1],b=h.concat(d)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){y=!0;const t=Math.floor(a[0].shape[0]*(1-s.validationSplit)),e=a[0].shape[0];h=hn(a,t,e),a=hn(a,0,t),d=hn(i,t,e),i=hn(i,0,t),b=h.concat(d)}else null!=s.validationSteps&&(y=!0);const x=a.concat(i).concat(p);t.checkTrainableWeightsConsistency();const w=t.makeTrainFunction(),v=t.getDedupedMetricsNames();let k,I;y?(t.makeTestFunction(),k=t.testFunction,I=v.slice().concat(v.map((t=>"val_"+t)))):(k=null,b=[],I=v.slice());const C=ye(s.callbacks,s.yieldEvery);return await async function(t,e,n,s,a,i,o,l,u,h,d,p,f,m,g){null==a&&(a=32),null==i&&(i=1),null==d&&(d=!0),null==f&&(f=0);let b=!1;null!=u&&null!=h&&(b=!0);const y=t.checkNumSamples(n,a,m,"steps_per_epoch");let x;null!=y&&(x=at(0,y)),null==o&&(o=1);const{callbackList:w,history:v}=we(l,o,i,f,y,m,a,b,p);w.setModel(t),t.history=v,await w.onTrainBegin(),t.stopTraining_=!1;for(let o=f;o<i;++o){await w.onEpochBegin(o);const i={};{if("batch"===d)throw new c("batch shuffling is not implemneted yet");d&&r.D5U.TV(x);const o=(0,r.RRF)(x),l=pn(y,a);for(let c=0;c<l.length;++c){const d={};if(await w.onBatchBegin(c,d),r.lub((()=>{const p=l[c][0],f=l[c][1],m=lt(o,p,f-p);d.batch=c,d.size=f-p;const g=dn(n,m),y=e(g);for(let t=0;t<s.length;++t){const e=s[t],n=y[t];d[e]=n,r.CnY(n)}if(c===l.length-1&&b){const e=t.testLoop(u,h,a);for(let t=0;t<s.length;++t){const n=s[t],a=e[t];r.CnY(a),i["val_"+n]=a}}})),await w.onBatchEnd(c,d),he(d),t.stopTraining_)break}o.dispose()}if(await w.onEpochEnd(o,i),t.stopTraining_)break}return await w.onTrainEnd(),await t.history.syncData(),t.history}(t,w,x,v,f,s.epochs,s.verbose,C,k,b,s.shuffle,I,s.initialEpoch,null)}finally{t.isTraining=!1,mn(a,e),mn(i,n),mn(h,o),mn(d,l),null!=p&&r.B90(p)}}(this,t,e,n)}async fitDataset(t,e){return async function(t,e,n){const s=null!=n.batchesPerEpoch;if(r.D5U.hu(null!=t.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.hu(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.hu(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.hu(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.hu(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(un(n.validationData))r.D5U.hu(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const t=function(t){if(3===t.length)throw new c("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);i=t.xs,o=t.ys}const l=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let h;h=a?u.slice().concat(u.map((t=>"val_"+t))):u.slice();const d=ye(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:f,history:m}=we(d,p,n.epochs,null,null,function(t,e){let n=null;return null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size),n}(e,n),null,a,h);f.setModel(t),t.history=m,await f.onTrainBegin(),t.stopTraining_=!1;let b=null==n.initialEpoch?0:n.initialEpoch,y=await e.iterator();for(;b<n.epochs;){const c={};await f.onEpochBegin(b);let h=0,d=0;for(s||(y=await e.iterator());!s||h<n.batchesPerEpoch;){const e=await y.next();if(s&&e.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:s,ys:a}=on(t,e.value),i={};i.batch=d,i.size=s[0].shape[0],await f.onBatchBegin(d,i);const o=[];if(null!=n.classWeight){const e=sn(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)o.push(await rn(a[t],null,e[t]))}const c=s.concat(a).concat(o),p=l(c);r.B90(c);for(let t=0;t<u.length;++t){const e=u[t],n=p[t];i[e]=n,r.CnY(n)}await f.onBatchEnd(d,i),he(i),d++,h++}if(s?h>=n.batchesPerEpoch:e.done){if(a){let e;e=un(n.validationData)?g(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):g(t.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)c[`val_${t.metricsNames[n]}`]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(b,c),b++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),s=n[0],a=n[1],i=this.makeTrainFunction()(s.concat(a)),o=[];for(const t of i){const e=await t.data();o.push(e[0])}return r.B90(i),m(o)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let t=0;t<s.length;++t)n&&!s[t].trainable||e.push({name:s[t].originalName,tensor:r[t]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=r.sq6().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-r.sq6().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=b(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map((t=>b(t)))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const s of e){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=b(n[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[b(We(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((t=>b(We(t))));{const t={};for(const e in this.metrics)t[e]=b(We(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ve(qe(t.optimizer_config));let n,s;if("string"==typeof t.loss)n=y(t.loss);else if(Array.isArray(t.loss))n=t.loss.map((t=>y(t)));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=y(t.loss[e])}if(Array.isArray(t.metrics))s=t.metrics.map((t=>y(t)));else if(null!=t.metrics){s={};for(const e in t.metrics)s[e]=y(t.metrics[e])}this.compile({loss:n,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const e=r.io.yB(t);if(0===e.length)throw new u(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new u(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new u("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.yz(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v2.7.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:a}=await r.io.yz(await this.optimizer.getWeights(),t);n.specs.push(...a),n.data=r.io.JY([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;Ue(this.userDefinedMetadata,this.name,t),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,t.save(s)}setUserDefinedMetadata(t){Ue(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}wn.className="Model",r.m7h.ax(wn);class vn extends wn{}vn.className="Functional",r.m7h.ax(vn);class kn extends wn{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:qt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some((t=>t<0)))throw new u(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof kn||t instanceof wn;let n;if(e){if(n=t,1!==n.outputs.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new u("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=function(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new u("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;return null==n&&(n="float32"),new ue({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new u(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=le(this.outputs[0])}this.inboundNodes=[],new ae({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:d(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((t=>t.shape)),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Jt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,n=console.log){this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,n={}){if(!this.built)throw new l("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new l("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,n={}){if(!this.built)throw new l("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new l("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,n={},s=!1){let a,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new u("Legacy serialization format not supported yet.");a=e}else r.D5U.hu(null!=e.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof kn))throw new c(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const t of a){const e=ve(t,void 0,s);s&&e.setFastWeightInitDuringBuild(!0),o.add(e)}return o}set stopTraining(t){if(null==this.model)throw new u("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new u("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}kn.className="Sequential",r.m7h.ax(kn);class In extends r.m7h.iV{getConfig(){return{}}}class Cn extends In{apply(t,e=1){return function(t,e=1){if(1!==e)throw new c(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return r.pyx(t)}(t,e)}}Cn.className="elu",r.m7h.ax(Cn);class $n extends In{apply(t){return r.U8D(t)}}$n.className="selu",r.m7h.ax($n);class Sn extends In{apply(t){return r.UYe(t)}}Sn.className="relu",r.m7h.ax(Sn);class Nn extends In{apply(t){return(0,r.lub)((()=>r.LTh(6,r.UYe(t))))}}Nn.className="relu6",r.m7h.ax(Nn);class En extends In{apply(t){return t}}En.className="linear",r.m7h.ax(En);class Rn extends In{apply(t){return r.XD2(t)}}Rn.className="sigmoid",r.m7h.ax(Rn);class An extends In{apply(t){return function(t){return(0,r.lub)((()=>{const e=r.IHx(.5,r.dC7(.2,t));return r.iUl(e,0,1)}))}(t)}}An.className="hardSigmoid",r.m7h.ax(An);class Dn extends In{apply(t){return r.Wvh(t)}}Dn.className="softplus",r.m7h.ax(Dn);class Tn extends In{apply(t){return function(t){return(0,r.lub)((()=>r.hiC(t,r.WnP(t).add(1))))}(t)}}Tn.className="softsign",r.m7h.ax(Tn);class Fn extends In{apply(t){return r.AEp(t)}}Fn.className="tanh",r.m7h.ax(Fn);class On extends In{apply(t,e=-1){return r.XAC(t,e)}}On.className="softmax",r.m7h.ax(On);class _n extends In{apply(t,e=-1){return r.CmS(t,e)}}_n.className="logSoftmax",r.m7h.ax(_n);class Mn extends In{apply(t,e=1){return(0,r.lub)((()=>r.XD2(t.mul(e)).mul(t)))}}function Bn(t){return t.getClassName()}function Ln(t,e={}){return k(t,r.m7h.U3.getMap().classNameMap,e,"activation")}function zn(t){if(null==t){return Ln({className:"linear",config:{}})}if("string"==typeof t){const e={};return e.className=t,e.config={},Ln(e)}return t instanceof In?t:Ln(t)}Mn.className="swish",r.m7h.ax(Mn);class Wn extends r.m7h.iV{}class Un extends Wn{constructor(t){super(),function(t){if(null!=t&&"object"!=typeof t)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${t}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return(0,r.lub)((()=>{let e=(0,r.lls)([1]);return this.hasL1&&(e=(0,r.IHx)(e,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(t))))),this.hasL2&&(e=(0,r.IHx)(e,(0,r.Smz)(r.dC7(this.l2,bt(t))))),e.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Un.className="L1L2",r.m7h.ax(Un);const Pn={l1l2:"L1L2"};function Vn(t){return w(t)}function Gn(t,e={}){return k(t,r.m7h.U3.getMap().classNameMap,e,"regularizer")}function Hn(t){return null==t?null:"string"==typeof t?Gn({className:t in Pn?Pn[t]:t,config:{}}):t instanceof Wn?t:Gn(t)}class jn extends oe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Yt(t);let n=(0,r.UYe)(t);return null!=this.maxValue&&(n=(0,r.iUl)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}jn.className="ReLU",r.m7h.ax(jn);class qn extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Yt(t);return(0,r.hi7)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}qn.className="LeakyReLU",r.m7h.ax(qn);class Kn extends oe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Vt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Hn(t.alphaRegularizer),this.alphaConstraint=W(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new u(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Jt(t)).slice(1);if(null!=this.sharedAxes)for(const t of this.sharedAxes)e[t-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let e=1;e<t.length;++e)n[e]=t[e];this.inputSpec=[new ne({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Yt(t),(0,r.AL3)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Pt(this.alphaInitializer),alphaRegularizer:Vn(this.alphaRegularizer),alphaConstraint:L(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Kn.className="PReLU",r.m7h.ax(Kn);class Xn extends oe{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new c(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Yt(t);return(0,r.pyx)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Xn.className="ELU",r.m7h.ax(Xn);class Yn extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Yt(t);return n.mul(it(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}Yn.className="ThresholdedReLU",r.m7h.ax(Yn);class Jn extends oe{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new On).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Yt(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function Qn(t,e,n){if("number"==typeof t)return d(t,e);if(t.length!==e)throw new u(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${t.length} elements.`);for(let r=0;r<e;++r){const a=t[r];if((s=a)!==parseInt(s.toString(),10))throw new u(`The ${n} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(t)} including a non-integer number ${a}`)}return t;var s}function Zn(t,e,n,s,r=1){if(null==t)return t;let a;return a="same"===n?t:t-(e+(e-1)*(r-1))+1,Math.floor((a+s-1)/s)}function ts(t,e,n,s){if(null==t)return null;if("valid"===s)t=t*e+rt([n-e,0]);else{if("same"!==s)throw new u(`Unsupport padding mode: ${s}.`);t*=e}return t}function es(t,e){return(0,r.lub)((()=>(j(e),"channelsFirst"===e?r.p4s(t,[0,2,3,1]):t)))}function ns(t,e){return(0,r.lub)((()=>(j(e),"channelsFirst"===e?r.p4s(t,[0,2,3,4,1]):t)))}function ss(t,e,n,s=[1,1],a="valid",i,o,l=null){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),j(i),3!==t.rank&&4!==t.rank)throw new u(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${t.rank}.`);if(3!==e.rank&&4!==e.rank)throw new u(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${t.rank}.`);let h=es(t,i);if("causal"===a)throw new c("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return h=r.imm.Te({x:h,filter:e,strides:s,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(h=r.p4s(h,[0,3,1,2])),h}))}Jn.className="Softmax",r.m7h.ax(Jn);class rs extends oe{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",rs.verifyArgs(e),this.rank=t,E(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new c(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Qn(e.kernelSize,t,"kernelSize"),this.strides=Qn(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,q(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,j(this.dataFormat),this.activation=zn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Vt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=W(e.biasConstraint),this.biasRegularizer=Hn(e.biasRegularizer),this.activityRegularizer=Hn(e.activityRegularizer),this.dilationRate=Qn(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new u(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new u(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new u(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(p("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,3))throw new u(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Bn(this.activation),useBias:this.useBias,biasInitializer:Pt(this.biasInitializer),biasRegularizer:Vn(this.biasRegularizer),activityRegularizer:Vn(this.activityRegularizer),biasConstraint:L(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class as extends rs{constructor(t,e){super(t,e),this.kernel=null,as.verifyArgs(e),this.filters=e.filters,E(this.filters,"filters"),this.kernelInitializer=Vt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=W(e.kernelConstraint),this.kernelRegularizer=Hn(e.kernelRegularizer)}build(t){t=Jt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u(`The channel dimension of the input should be defined. Found ${t[e]}`);const n=t[e],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return(0,r.lub)((()=>{let e;t=Yt(t);const n=null==this.bias?null:this.bias.read(),s=A(this.activation.getClassName());if(null!=s&&2===this.rank)e=ss(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)e=function(t,e,n,s=1,a="valid",i,o=1){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),j(i),3!==t.shape.length)throw new u(`The input of a conv1dWithBias operation should be 3, but is ${t.shape.length} instead.`);if(3!==e.shape.length)throw new u(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new u(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if("channelsFirst"===i&&(t=r.p4s(t,[0,2,1])),"causal"===a)throw new c("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=r.PAt(t,e,s,"same"===a?"same":"valid","NWC",o);return null!=n&&(l=xt(l,n)),l}))}(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=ss(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new c("convolutions greater than 3D are not implemented yet.");e=function(t,e,n,s=[1,1,1],a="valid",i,o){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),j(i),4!==t.rank&&5!==t.rank)throw new u(`conv3dWithBias expects input to be of rank 4 or 5, but received ${t.rank}.`);if(4!==e.rank&&5!==e.rank)throw new u(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${t.rank}.`);let l=ns(t,i);if("causal"===a)throw new c("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=r.pdZ(l,e,s,"same"===a?"same":"valid","NDHWC",o),null!=n&&(l=xt(l,n)),"channelsFirst"===i&&(l=r.p4s(l,[0,4,1,2,3])),l}))}(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e}))}computeOutputShape(t){t=Jt(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let t=0;t<n.length;++t){const s=Zn(n[t],this.kernelSize[t],this.padding,this.strides[t],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[t]);e.push(s)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:Pt(this.kernelInitializer),kernelRegularizer:Vn(this.kernelRegularizer),kernelConstraint:L(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new u(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class is extends as{constructor(t){super(2,t),is.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,2))throw new u(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}is.className="Conv2D",r.m7h.ax(is);class os extends as{constructor(t){super(3,t),os.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new u(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}os.className="Conv3D",r.m7h.ax(os);class ls extends is{constructor(t){if(super(t),this.inputSpec=[new ne({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new u(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Jt(t)).length)throw new u("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ne({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return r.lub((()=>{let e=Yt(t);if(4!==e.shape.length)throw new u(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${e.shape.length}`);const n=e.shape,s=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const o=n[a],l=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=[s,ts(o,d,c,this.padding),ts(l,p,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=r.p4s(e,[0,2,3,1]));let m=r.bc(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=r.p4s(m,[0,3,1,2])),null!=this.bias&&(m=xt(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m}))}computeOutputShape(t){const e=(t=Jt(t)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return e[n]=this.filters,e[s]=ts(e[s],o,a,this.padding),e[r]=ts(e[r],l,i,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}ls.className="Conv2DTranspose",r.m7h.ax(ls);class us extends as{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new u("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new u("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new u(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Vt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Hn(e.depthwiseRegularizer),this.depthwiseConstraint=W(e.depthwiseConstraint),this.pointwiseInitializer=Vt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Hn(e.pointwiseRegularizer),this.pointwiseConstraint=W(e.pointwiseConstraint)}build(t){if((t=Jt(t)).length<this.rank+2)throw new u(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new u(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const n=t[e],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let t=0;t<this.rank;++t)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new ne({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return(0,r.lub)((()=>{let e;if(t=Yt(t),1===this.rank)throw new c("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=r.p4s(t,[0,2,3,1])),e=r.U_I(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=xt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=r.p4s(e,[0,3,1,2])),e}))}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Pt(this.depthwiseInitializer),t.pointwiseInitializer=Pt(this.pointwiseInitializer),t.depthwiseRegularizer=Vn(this.depthwiseRegularizer),t.pointwiseRegularizer=Vn(this.pointwiseRegularizer),t.depthwiseConstraint=L(this.depthwiseConstraint),t.pointwiseConstraint=L(this.pointwiseConstraint),t}}us.className="SeparableConv";class cs extends us{constructor(t){super(2,t)}}cs.className="SeparableConv2D",r.m7h.ax(cs);class hs extends as{constructor(t){super(1,t),hs.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!N(t.kernelSize,"number",1,1))throw new u(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}hs.className="Conv1D",r.m7h.ax(hs);class ds extends oe{constructor(t){super(t),"number"==typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return(0,r.lub)((()=>{if(t=Yt(t),"channelsLast"===this.dataFormat){const e=ct(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ct(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=ct(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ct(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ds.className="Cropping2D",r.m7h.ax(ds);class ps extends oe{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return r.lub((()=>{let e=Yt(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=r.p4s(e,[0,2,3,1]);const t=this.size[0]*n[2],s=this.size[1]*n[3],a=e.resizeNearestNeighbor([t,s]);return r.p4s(a,[0,3,1,2])}{const t=this.size[0]*n[1],s=this.size[1]*n[2];return e.resizeNearestNeighbor([t,s])}}))}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ps.className="UpSampling2D",r.m7h.ax(ps);class fs extends rs{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Vt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=W(t.depthwiseConstraint),this.depthwiseRegularizer=Hn(t.depthwiseRegularizer)}build(t){if((t=Jt(t)).length<4)throw new u(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new u(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const n=t[e],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{let e=function(t,e,n=[1,1],s="valid",a,i){return(0,r.lub)((()=>{null==a&&(a="channelsLast"),j(a);let o=es(t,a);if(4!==t.rank)throw new u(`Input for depthwiseConv2d is required to be 4-D, but is instead ${t.rank}-D`);if(4!==e.rank)throw new u(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=r.B10(o,e,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}(t=Yt(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=xt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e}))}computeOutputShape(t){t=Jt(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Zn(e,this.kernelSize[0],this.padding,this.strides[0]),a=Zn(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,r,a]:[t[0],r,a,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Pt(this.depthwiseInitializer),t.depthwiseRegularizer=Vn(this.depthwiseRegularizer),t.depthwiseConstraint=L(this.depthwiseRegularizer),t}}function ms(t,e,n,s){if(Array.isArray(t)){if(null!=e||null!=n)throw new u("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=t.slice(t.length-s,t.length),t=t.slice(0,t.length-s)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function r(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=r(e),constants:n=r(n)}}function gs(t,e,n,s=!1,a,i,o=!1,l=!1){return r.lub((()=>{const h=e.shape.length;if(h<3)throw new u(`Input should be at least 3D, but is ${h}D.`);const d=[1,0].concat(at(2,h));if(e=r.p4s(e,d),null!=i)throw new c("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===h-1&&(a=r.dt4(a,-1)),a=r.p4s(a,d)),s&&(e=r.GYS(e,0),null!=a&&(a=r.GYS(a,0)));const p=[];let f,m=n;const g=e.shape[0],b=r.HHK(e);let y,x;null!=a&&(y=r.HHK(a));for(let e=0;e<g;++e){const n=b[e],s=r.lub((()=>t(n,m)));if(null==a)f=s[0],m=s[1];else{const t=r.lub((()=>{const t=y[e],n=r.JpU(t).sub(t);return{output:s[0].mul(t).add(m[0].mul(n)),newStates:m.map(((e,r)=>s[1][r].mul(t).add(e.mul(n))))}}));f=t.output,m=t.newStates}l&&p.push(f)}if(l){const t=1;x=r.knu(p,t)}return[f,x,m]}))}fs.className="DepthwiseConv2D",r.m7h.ax(fs);class bs extends oe{constructor(t){let e;if(super(t),null==t.cell)throw new u("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new $s({cells:t.cell}):t.cell,null==e.stateSize)throw new u("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new ne({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?at(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((t=>null)):this.states_}setStates(t){this.states_=t}computeOutputShape(t){Kt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let s;if(s=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const s of e)n.push([t[0],s]);return[s].concat(n)}return s}computeMask(t,e){return r.lub((()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map((t=>null));return[t].concat(e)}return t}))}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new c("Constants support is not implemented in RNN yet.");Kt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new ne({shape:[e,null,...n]});const s=[t[0]].concat(t.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.D5U.cO(this.stateSpec.map((t=>t.shape[t.shape.length-1])),a))throw new u(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((t=>new ne({shape:[null,t]})));this.stateful&&this.resetStates()}resetStates(t,e=!1){(0,r.lub)((()=>{if(!this.stateful)throw new o("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>r.lls([n,t]))):this.states_=[r.lls([n,this.cell.stateSize])];else if(null==t)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((t=>r.lls([n,t]))):this.states_[0]=r.lls([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let e=0;e<this.states_.length;++e){const s=t[e],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,i=[n,a];if(!r.D5U.cO(s.shape,i))throw new u(`State ${e} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[e]=s}}this.states_=this.states_.map((t=>r.CnY(t.clone())))}))}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=ms(t,n,s,this.numConstants);t=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){e.initialState=n,a=a.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new ne({shape:t.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(e.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof se){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return(0,r.lub)((()=>{const n=null==e?null:e.mask,s=null==e?null:e.training;let r=null==e?null:e.initialState;t=Yt(t),null==r&&(r=this.stateful?this.states_:this.getInitialState(t));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new u(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=gs(((t,e)=>{const n=this.cell.call([t].concat(e),i);return[n[0],n.slice(1)]}),t,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],c=o[1],h=o[2];this.stateful&&this.resetStates(h,s);const d=this.returnSequences?c:l;return this.returnState?[d].concat(h):d}))}getInitialState(t){return(0,r.lub)((()=>{let e=r.lls(t.shape);return e=r.Smz(e,[1,2]),e=ot(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((t=>t>1?pt(e,[1,t]):e)):this.cell.stateSize>1?[pt(e,[1,this.cell.stateSize])]:[e]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===bs.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e,n={}){const s=ve(e.cell,n);return new t(Object.assign(e,{cell:s}))}}bs.className="RNN",r.m7h.ax(bs);class ys extends oe{}class xs extends ys{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,E(this.units,"units"),this.activation=zn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Hn(t.kernelRegularizer),this.recurrentRegularizer=Hn(t.recurrentRegularizer),this.biasRegularizer=Hn(t.biasRegularizer),this.kernelConstraint=W(t.kernelConstraint),this.recurrentConstraint=W(t.recurrentConstraint),this.biasConstraint=W(t.biasConstraint),this.dropout=st([1,rt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=st([1,rt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Jt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{if(2!==(t=t).length)throw new u(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let n=t[1];t=t[0];const s=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ss({ones:()=>r.JpU(t),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ss({ones:()=>r.JpU(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=mt(null!=i?r.dC7(t,i):t,this.kernel.read()),null!=this.bias&&(a=xt(a,this.bias.read())),null!=o&&(n=r.dC7(n,o));let l=r.IHx(a,mt(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bn(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:Vn(this.kernelRegularizer),recurrentRegularizer:Vn(this.recurrentRegularizer),biasRegularizer:Vn(this.biasRegularizer),activityRegularizer:Vn(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}xs.className="SimpleRNNCell",r.m7h.ax(xs);class ws extends bs{constructor(t){t.cell=new xs(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:a})}))}static fromConfig(t,e){return new t(e)}}ws.className="SimpleRNN",r.m7h.ax(ws);class vs extends ys{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new u("GRUCell does not support reset_after parameter set to true.");this.units=t.units,E(this.units,"units"),this.activation=zn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=zn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Hn(t.kernelRegularizer),this.recurrentRegularizer=Hn(t.recurrentRegularizer),this.biasRegularizer=Hn(t.biasRegularizer),this.kernelConstraint=W(t.kernelConstraint),this.recurrentConstraint=W(t.recurrentConstraint),this.biasConstraint=W(t.biasConstraint),this.dropout=st([1,rt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=st([1,rt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Jt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return(0,r.lub)((()=>{if(2!==(t=t).length)throw new u(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const n=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ss({ones:()=>r.JpU(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ss({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,c;0<this.dropout&&this.dropout<1&&(t=r.dC7(t,a[0]));let h=mt(t,this.kernel.read());this.useBias&&(h=xt(h,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,i[0]));const d=this.recurrentKernel.read(),[p,f]=r.Vl2(d,[2*this.units,this.units],d.rank-1),m=mt(s,p),[g,b,y]=r.Vl2(h,3,h.rank-1),[x,w]=r.Vl2(m,2,m.rank-1);o=this.recurrentActivation.apply(r.IHx(g,x)),l=this.recurrentActivation.apply(r.IHx(b,w));const v=mt(r.dC7(l,s),f);c=this.activation.apply(r.IHx(y,v));const k=r.IHx(r.dC7(o,s),r.dC7(r.IHx(1,r.W76(o)),c));return[k,k]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bn(this.activation),recurrentActivation:Bn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:Vn(this.kernelRegularizer),recurrentRegularizer:Vn(this.recurrentRegularizer),biasRegularizer:Vn(this.biasRegularizer),activityRegularizer:Vn(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}vs.className="GRUCell",r.m7h.ax(vs);class ks extends bs{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new vs(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:a})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}ks.className="GRU",r.m7h.ax(ks);class Is extends ys{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,E(this.units,"units"),this.activation=zn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=zn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Hn(t.kernelRegularizer),this.recurrentRegularizer=Hn(t.recurrentRegularizer),this.biasRegularizer=Hn(t.biasRegularizer),this.kernelConstraint=W(t.kernelConstraint),this.recurrentConstraint=W(t.recurrentConstraint),this.biasConstraint=W(t.biasConstraint),this.dropout=st([1,rt([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=st([1,rt([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Jt(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;s=new((e=class extends Ct{apply(e,s){const r=t.apply([n]),a=(new St).apply([n]),i=t.apply([2*n]);return dt(dt(r,a),i)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return(0,r.lub)((()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new u(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ss({ones:()=>r.JpU(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ss({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,c,h,d;0<this.dropout&&this.dropout<1&&(t=r.dC7(t,i[0]));let p=mt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,o[0])),p=r.IHx(p,mt(s,this.recurrentKernel.read())),this.useBias&&(p=xt(p,this.bias.read()));const[f,m,g,b]=r.Vl2(p,4,p.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(m),h=r.IHx(r.dC7(c,a),r.dC7(l,this.activation.apply(g))),d=this.recurrentActivation.apply(b);const y=r.dC7(d,this.activation.apply(h));return[y,y,h]}))}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Bn(this.activation),recurrentActivation:Bn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),recurrentInitializer:Pt(this.recurrentInitializer),biasInitializer:Pt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Vn(this.kernelRegularizer),recurrentRegularizer:Vn(this.recurrentRegularizer),biasRegularizer:Vn(this.biasRegularizer),activityRegularizer:Vn(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),recurrentConstraint:L(this.recurrentConstraint),biasConstraint:L(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Is.className="LSTMCell",r.m7h.ax(Is);class Cs extends bs{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Is(t),super(t)}call(t,e){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,s=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:a})}))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Cs.className="LSTM",r.m7h.ax(Cs);class $s extends ys{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return(0,r.lub)((()=>{let n=(t=t).slice(1);const s=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?s.push(n.splice(0,t.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[t[0]].concat(n):[a[0]].concat(n),a=o.call(a,e),r.push(a.slice(1))}n=[];for(const t of r.slice().reverse())n.push(...t);return[a[0]].concat(n)}))}build(t){let e;Kt(t)&&(t=t[0]),t=t,this.cells.forEach(((n,s)=>{Y(`RNNCell_${s}`,(()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]}))})),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map((t=>({className:t.getClassName(),config:t.getConfig()})))};return Object.assign({},t,e)}static fromConfig(t,e,n={}){const s=[];for(const t of e.cells)s.push(ve(t,n));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return te(t)}setWeights(t){const e=[];for(const n of this.cells){const s=n.weights.length,r=t.splice(s);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],r[t]])}ee(e)}}function Ss(t){const{ones:e,rate:n,training:s=!1,count:a=1}=t,i=()=>wt(e(),n),o=()=>vt(i,e,s);return!a||a<=1?r.CnY(o().clone()):Array(a).fill(void 0).map(o).map((t=>r.CnY(t.clone())))}$s.className="StackedRNNCells",r.m7h.ax($s);class Ns extends bs{constructor(t){if(t.unroll)throw new c("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new c("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ne({ndim:5})]}call(t,e){return r.lub((()=>{if(null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new u("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,s=null==e?null:e.training,a=null==e?null:e.initialState;return super.call(t,{mask:n,training:s,initialState:a})}))}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return r.lub((()=>{const{stateSize:e}=this.cell,n=t.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],i=r.lls(a);return Array.isArray(e)?Array(e.length).fill(i):[i]}))}resetStates(t,e=!1){r.lub((()=>{if(!this.stateful)throw new o("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_=[r.lls(a)];else if(null==t)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_[0]=r.lls(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],s=a;if(!r.D5U.cO(n.shape,s))throw new u(`State ${e} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[e]=n}}this.states_=this.states_.map((t=>r.CnY(t.clone())))}))}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===e,l=t[o?3:2],u=t[o?4:3],c=Zn(l,s[0],r,a[0],i[0]),h=Zn(u,s[1],r,a[1],i[1]);return[...t.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Ns.className="ConvRNN2D";class Es extends Is{constructor(t){const{filters:e,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=t;super(Object.assign({},t,{units:e})),this.filters=e,E(this.filters,"filters"),this.kernelSize=Qn(n,2,"kernelSize"),this.kernelSize.forEach((t=>E(t,"kernelSize"))),this.strides=Qn(s||1,2,"strides"),this.strides.forEach((t=>E(t,"strides"))),this.padding=r||"valid",q(this.padding),this.dataFormat=a||"channelsLast",j(this.dataFormat),this.dilationRate=Qn(i||1,2,"dilationRate"),this.dilationRate.forEach((t=>E(t,"dilationRate")))}build(t){var e;t=Jt(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new u(`The channel dimension of the input should be defined. Found ${t[n]}`);const s=t[n],a=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;t=new((e=class extends Ct{apply(t,e){return ht([n.apply([s]),r.iUs([s]),n.apply([2*s])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return r.lub((()=>{if(3!==t.length)throw new u(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const n=e.training||!1,s=t[0],a=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Ss({ones:()=>r.JpU(s),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,l=(t,e,n)=>e&&e[n]?r.dC7(e[n],t):t;let c=l(s,o,0),h=l(s,o,1),d=l(s,o,2),p=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Ss({ones:()=>r.JpU(a),rate:this.recurrentDropout,training:n,count:4}));const f=this.recurrentDropoutMask;let m=l(a,f,0),g=l(a,f,1),b=l(a,f,2),y=l(a,f,3);const[x,w,v,k]=r.Vl2(this.kernel.read(),4,3),[I,C,$,S]=this.useBias?r.Vl2(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,C,this.padding),d=this.inputConv(d,v,$,this.padding),p=this.inputConv(p,k,S,this.padding);const[N,E,R,A]=r.Vl2(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,N),g=this.recurrentConv(g,E),b=this.recurrentConv(b,R),y=this.recurrentConv(y,A);const D=this.recurrentActivation.apply(r.IHx(c,m)),T=this.recurrentActivation.apply(r.IHx(h,g)),F=r.IHx(r.dC7(T,i),r.dC7(D,this.activation.apply(r.IHx(d,b)))),O=r.dC7(this.recurrentActivation.apply(r.IHx(p,y)),this.activation.apply(F));return[O,O,F]}))}getConfig(){const t=super.getConfig(),{units:e}=t,n=function(t,e){var n={};for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&e.indexOf(s)<0&&(n[s]=t[s]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(t);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(t,s[r])&&(n[s[r]]=t[s[r]])}return n}(t,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(t,e,n,s){const a=r.Tek(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xt(a,n,this.dataFormat):a}recurrentConv(t,e){return r.Tek(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Es.className="ConvLSTM2DCell",r.m7h.ax(Es);class Rs extends Ns{constructor(t){const e=new Es(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Rs.className="ConvLSTM2D",r.m7h.ax(Rs);class As extends oe{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let t=0;t<this.noiseShape.length;++t)n.push(null==this.noiseShape[t]?e[t]:this.noiseShape[t]);return n}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,s=this.getNoiseShape(n);return vt((()=>wt(n,this.rate,s,this.seed)),(()=>n),t)}return t}))}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}As.className="Dropout",r.m7h.ax(As);class Ds extends As{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Ds.className="SpatialDropout1D",r.m7h.ax(Ds);class Ts extends oe{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,E(this.units,"units"),this.activation=zn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Vt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Vt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=W(t.kernelConstraint),this.biasConstraint=W(t.biasConstraint),this.kernelRegularizer=Hn(t.kernelRegularizer),this.biasRegularizer=Hn(t.biasRegularizer),this.activityRegularizer=Hn(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Jt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Jt(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t),s=A(this.activation.getClassName());let r;return null!=s?r=mt(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=mt(n,this.kernel.read()),null!=this.bias&&(r=xt(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const t={units:this.units,activation:Bn(this.activation),useBias:this.useBias,kernelInitializer:Pt(this.kernelInitializer),biasInitializer:Pt(this.biasInitializer),kernelRegularizer:Vn(this.kernelRegularizer),biasRegularizer:Vn(this.biasRegularizer),activityRegularizer:Vn(this.activityRegularizer),kernelConstraint:L(this.kernelConstraint),biasConstraint:L(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Ts.className="Dense",r.m7h.ax(Ts);class Fs extends oe{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Jt(t);for(const e of t.slice(1))if(null==e)throw new u(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],et(t,1)]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);let n=Yt(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new u(`batchFlatten requires a minimum rank of 2. Got rank: ${t.rank}.`);const e=[t.shape[0],et(t.shape,1)];return t.reshape(e)}(n)}))}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}Fs.className="Flatten",r.m7h.ax(Fs);class Os extends oe{constructor(t){super(t),this.supportsMasking=!0,this.activation=zn(t.activation)}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t);return this.activation.apply(n)}))}getConfig(){const t={activation:Bn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Os.className="Activation",r.m7h.ax(Os);class _s extends oe{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return(0,r.lub)((()=>{return t=Yt(t),e=t,n=this.n,(0,r.lub)((()=>{if(2!==e.shape.length)throw new u(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return pt(ot(e,1),[1,n,1])}));var e,n}))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}_s.className="RepeatVector",r.m7h.ax(_s);class Ms extends oe{constructor(t){super(t),this.targetShape=t.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",s=e.slice();let r=1,a=null;for(let t=0;t<s.length;++t){const e=s[t];if(this.isUnknown(e)){if(null!==a)throw new u("Can only specifiy one unknown dimension.");a=t}else r*=e}const i=et(t);if(null!==a){if(0===r||i%r!=0)throw new u(n);s[a]=i/r}else if(i!==r)throw new u(n);return s}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Ms.className="Reshape",r.m7h.ax(Ms);class Bs extends oe{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=at(1,t.dims.length+1);if(!r.D5U.cO(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ne({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Jt(t)).slice();return this.dims.forEach(((n,s)=>{e[s+1]=t[n]})),e}call(t,e){return(0,r.p4s)(Yt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Bs.className="Permute",r.m7h.ax(Bs);class Ls extends oe{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Yt(t);return(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1)}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t),s=(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}Ls.className="Masking",r.m7h.ax(Ls);class zs extends oe{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(g(t.inputLength))}this.inputDim=t.inputDim,E(this.inputDim,"inputDim"),this.outputDim=t.outputDim,E(this.outputDim,"outputDim"),this.embeddingsInitializer=Vt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Hn(t.embeddingsRegularizer),this.activityRegularizer=Hn(t.activityRegularizer),this.embeddingsConstraint=W(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return(0,r.lub)((()=>this.maskZero?(t=Yt(t),(0,r.Quu)(t,(0,r.P84)(t))):null))}computeOutputShape(t){if(t=Jt(t),null==this.inputLength)return[...t,this.outputDim];const e=g(this.inputLength);if(e.length!==t.length-1)throw new u(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let n=0;for(let s=0;s<e.length;++s){const r=e[s],a=t[s+1];if(null!=r&&null!=a&&r!==a)throw new u(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==r&&(e[n]=a),n++}}return[t[0],...e,this.outputDim]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);let n=Yt(t);return"int32"!==n.dtype&&(n=it(n,"int32")),gt(this.embeddings.read(),n.as1D()).reshape(Jt(this.computeOutputShape(n.shape)))}))}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Pt(this.embeddingsInitializer),embeddingsRegularizer:Vn(this.embeddingsRegularizer),activityRegularizer:Vn(this.activityRegularizer),embeddingsConstraint:L(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}zs.className="Embedding",r.m7h.ax(zs);class Ws extends oe{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new c}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const r=t[t.length-e.length+s],a=e[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new u("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(r)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Jt(t)]),(t=t).length<2)throw new u(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const n of t)null!=n&&null!==n[0]&&e.push(n[0]);if(e=C(e),e.length>1)throw new u(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=null==t[0]?null:t[0].slice(1);for(let e=1;e<t.length;++e){const s=null==t[e]?null:t[e].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=t.map((t=>t.length));-1===t.indexOf(null)&&1===C(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return(0,r.lub)((()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map((t=>t.rank));if(-1===n.indexOf(null)){const s=rt(n);for(let n of t){const t=n.rank;for(let e=0;e<s-t;++e)n=ot(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,a=t[0],i=t.slice(1).concat([a]);let o=s.reshape([a].concat(et(t.slice(1))));o=r.p4s(o,[1,0]),o=o.reshape(i),e.push(o),n=!0}else if(t>1){const a=at(1,t).concat([0]);e.push(r.p4s(s,a)),n=!0}else e.push(s)}let s=this.mergeFunction(e);const a=s.rank;if(n)if(null==a){const t=s.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));s=r.p4s(s.reshape([-1,e]),[1,0]).reshape(n)}else if(a>1){const t=[a-1].concat(at(0,a-1));s=r.p4s(s,t)}return s}}return this.mergeFunction(t)}))}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let n=1;n<t.length;++n){const s=null==t[n]?null:t[n].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(const e of t)null!=e&&null!==e[0]&&n.push(e[0]);return n=C(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return r.lub((()=>{if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an Array");if(!Array.isArray(t))throw new u("`inputs` should be an Array");if(e.length!==t.length)throw new u(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every((t=>null==t)))return null;let n=(e=e.map((t=>null==t?t:r.dt4(t,0))))[0];for(let t=1;t<e.length-1;++t)n=r.HvI(n,e[t]);return n}))}}class Us extends Ws{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.IHx(e,t[n]);return e}))}}Us.className="Add",r.m7h.ax(Us);class Ps extends Ws{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.dC7(e,t[n]);return e}))}}Ps.className="Multiply",r.m7h.ax(Ps);class Vs extends Ws{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=r.IHx(e,t[n]);return r.dC7(1/t.length,e)}))}}Vs.className="Average",r.m7h.ax(Vs);class Gs extends Ws{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.gWQ(e,t[n]);return e}))}}Gs.className="Maximum",r.m7h.ax(Gs);class Hs extends Ws{constructor(t){super(t)}mergeFunction(t){return(0,r.lub)((()=>{let e=t[0];for(let n=1;n<t.length;++n)e=r.LTh(e,t[n]);return e}))}}Hs.className="Minimum",r.m7h.ax(Hs);class js extends Ws{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new u("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const n of t)if(null!=n){e=!1;break}if(e)return;const n=[];for(let e=0;e<t.length;++e){const s=t[e].slice();s.splice(this.axis,1);let a=!1;for(const t of n)if(r.D5U.cO(t,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new u("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return(0,r.lub)((()=>ht(t,this.axis)))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new u("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const t of e.slice(1)){if(null==n[s]||null==t[s]){n[s]=null;break}n[s]+=t[s]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new u("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new u(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return r.lub((()=>{let n=!0;if(e.forEach((t=>{null==t||(n=!1)})),n)return null;const s=[];for(let n=0;n<t.length;++n)null==e[n]?s.push(r.JpU(t[n]).asType("bool")):e[n].rank<t[n].rank?s.push(r.dt4(e[n],-1)):s.push(e[n]);const a=r.zoF(s,this.axis);return r.$6P(a,-1,!1)}))}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function qs(t,e){for(;t<0;)t+=e;return t}js.className="Concatenate",r.m7h.ax(js);class Ks extends Ws{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){r.D5U.hu(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new c("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);if(e[s[0]]!==n[s[1]])throw new u(`Dimension incompatibility: ${e[s[0]]} !== ${n[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new u(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,n=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map(((e,n)=>qs(e,t[n].shape.length))):[qs(this.axes,n.shape.length),qs(this.axes,s.shape.length)],this.normalize&&(n=ke(n,e[0]),s=ke(s,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new c("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.D5U.hu(t.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${t.shape.length}`)),r.D5U.hu(t.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new c("batchDot is not implemented for complex64-type Tensors yet.");const s=t.shape.length,a=e.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return r.lub((()=>{let n,r;if(s>a){n=s-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(a>s){n=a-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)r=i[0]===i[1]?t.mul(e).sum(i[0]):t.transpose([1,0]).mul(e).sum(i[1]);else{const n=i[0]!==t.shape.length-1,s=i[1]===e.shape.length-1;r=t.matMul(e,n,s)}if(n>0){let t;t=s>a?s+a-3:s-1;const e=[];for(let s=t;s<t+n;++s)e.push(s);r=r.squeeze(e)}return 1===r.shape.length&&(r=r.expandDims(1)),r}))}(n,s,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[qs(this.axes,t.length),qs(this.axes,e.length)],n}computeOutputShape(t){r.D5U.hu(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new c("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,n);e.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=e.concat(n);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}Ks.className="Dot",r.m7h.ax(Ks);class Xs extends oe{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t);return vt((()=>ft(n.shape,0,this.stddev).add(n)),(()=>n),e.training||!1)}))}}Xs.className="GaussianNoise",r.m7h.ax(Xs);class Ys extends oe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e);const n=Yt(t);return this.rate>0&&this.rate<1?vt((()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(ft(n.shape,1,t))}),(()=>n),e.training||!1):n}))}}Ys.className="GaussianDropout",r.m7h.ax(Ys);class Js extends oe{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Yt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return(0,r.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return vt((()=>{const e=Yt(t),s=-1.7580993408473766;let a=(0,r.brS)((0,r.LGj)(n),this.rate);a=it(a,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,o=-i*s*this.rate;return e.mul(a).add(a.add(-1).mul(s)).mul(i).add(o)}),(()=>Yt(t)),e.training||!1)}return t}))}}function Qs(t,e,n,s,a,i=.001){let o;if(2===t.rank)o=r.Dxk(t,e,n,s,a,i);else if(3===t.rank)o=r.JY5(t,e,n,s,a,i);else{if(4!==t.rank)throw new c(`batchNormalization is not implemented for array of rank ${t.rank} yet`);o=r.p3b(t,e,n,s,a,i)}return o}Js.className="AlphaDropout",r.m7h.ax(Js);class Zs extends oe{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Vt(t.betaInitializer||"zeros"),this.gammaInitializer=Vt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Vt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Vt(t.movingVarianceInitializer||"ones"),this.betaConstraint=W(t.betaConstraint),this.gammaConstraint=W(t.gammaConstraint),this.betaRegularizer=Hn(t.betaRegularizer),this.gammaRegularizer=Hn(t.gammaRegularizer)}build(t){t=Jt(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new u(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ne({ndim:t.length,axes:{[e]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return(0,r.lub)((()=>{const n=null!=e.training&&e.training,s=Yt(t),a=s.shape,i=a.length,o=at(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=d(1,i);u[l]=a[l];const c=o.slice();c.sort();const h=!r.D5U.cO(c,at(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return Qs(s,t,e,n,r,this.epsilon)}return Qs(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,f,m]=function(t,e,n,s,a=.001){return r.D5U.cO(s.slice().sort(),at(0,t.rank-1))?function(t,e,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(t,s),o=i.mean,l=i.variance;return[Qs(t,o,l,n,e,a),o,l]}))}(t,e,n,s,a):function(t,e,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(t,s),o=i.mean,l=i.variance,u=[];for(const e of at(0,t.rank))-1!==s.indexOf(e)?u.push(1):u.push(t.shape[e]);const c=o.reshape(u),h=l.reshape(u),d=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[Qs(t,c,h,p,d,a),o,l]}))}(t,e,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),g=(t,e,n)=>{r.lub((()=>{const s=1-n,r=t.read(),a=r.sub(e).mul(s);t.write(r.sub(a))}))};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p}))}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),movingMeanInitializer:Pt(this.movingMeanInitializer),movingVarianceInitializer:Pt(this.movingVarianceInitializer),betaRegularizer:Vn(this.betaRegularizer),gammaRegularizer:Vn(this.gammaRegularizer),betaConstraint:L(this.betaConstraint),gammaConstraint:L(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Zs.className="BatchNormalization",r.m7h.ax(Zs);class tr extends oe{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Vt(t.betaInitializer||"zeros"),this.gammaInitializer=Vt(t.gammaInitializer||"ones"),this.betaRegularizer=Hn(t.betaRegularizer),this.gammaRegularizer=Hn(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Jt(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let t=0;t<this.axis.length;++t)this.axis[t]<0&&(this.axis[t]+=e);for(const t of this.axis)if(t<0||t>=e)throw new Error(`Invalid axis: ${t}`);if(this.axis.length!==C(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((e=>t[e]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Yt(t),s=n.shape,a=s.length;return(0,r.lub)((()=>{let{mean:t,variance:e}=(0,r.Gi7)(n,this.axis,!0);const i=d(1,a);for(const t of this.axis)i[t]=s[t];const o=t=>null!=t&&t.shape.length!==a&&this.axis!==[a-1]?t.reshape(i):t;let l=o(this.gamma.read()),u=o(this.beta.read());const c=[],h=[];for(let t=0;t<a;++t)-1!==this.axis.indexOf(t)?(c.push(s[t]),h.push(1)):(c.push(1),h.push(s[t]));return t=t.tile(c),e=e.tile(c),l=l.tile(h),u=u.tile(h),Qs(n,t,e,u,l,this.epsilon)}))}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Pt(this.betaInitializer),gammaInitializer:Pt(this.gammaInitializer),betaRegularizer:Vn(this.betaRegularizer),gammaRegularizer:Vn(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}tr.className="LayerNormalization",r.m7h.ax(tr);class er extends oe{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new u(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,n;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new u(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new u(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new ne({ndim:4})]}computeOutputShape(t){let e,n;return t=Jt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return(0,r.lub)((()=>{return e=Yt(t),n=this.padding,s=this.dataFormat,(0,r.lub)((()=>{if(4!==e.rank)throw new u(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new u("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new u(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let t;return t="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.vku(e,t)}));var e,n,s}))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function nr(t,e,n,s,a,i){return(0,r.lub)((()=>{let o;j(a),K(i),q(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),t=es(t,a);const l="same"===s?"same":"valid";return o="max"===i?r._sB(t,e,n,l):r.wS1(t,e,n,l),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}function sr(t,e,n,s,a,i){return(0,r.lub)((()=>{let o;j(a),K(i),q(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),t=ns(t,a);const l="same"===s?"same":"valid";return o="max"===i?r.YQQ(t,e,n,l):r.uR5(t,e,n,l),"channelsFirst"===a&&(o=r.p4s(o,[0,4,1,2,3])),o}))}er.className="ZeroPadding2D",r.m7h.ax(er);class rr extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new u(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(E(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new u(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}E(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,q(this.padding),this.inputSpec=[new ne({ndim:3})]}computeOutputShape(t){const e=Zn((t=Jt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return(0,r.lub)((()=>{this.invokeCallHook(t,e),t=ot(Yt(t),2);const n=this.poolingFunction(Yt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.L9e(n,[2])}))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class ar extends rr{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),nr(t,e,n,s,r,"max")}}ar.className="MaxPooling1D",r.m7h.ax(ar);class ir extends rr{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),nr(t,e,n,s,r,"avg")}}ir.className="AveragePooling1D",r.m7h.ax(ir);class or extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new u(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];E(this.poolSize,"poolSize"),E(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,j(this.dataFormat),q(this.padding),this.inputSpec=[new ne({ndim:4})]}computeOutputShape(t){t=Jt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=Zn(e,this.poolSize[0],this.padding,this.strides[0]),n=Zn(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return(0,r.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Yt(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class lr extends or{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),nr(t,e,n,s,r,"max")}}lr.className="MaxPooling2D",r.m7h.ax(lr);class ur extends or{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),nr(t,e,n,s,r,"avg")}}ur.className="AveragePooling2D",r.m7h.ax(ur);class cr extends oe{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new u(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];E(this.poolSize,"poolSize"),E(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,j(this.dataFormat),q(this.padding),this.inputSpec=[new ne({ndim:5})]}computeOutputShape(t){t=Jt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=Zn(e,this.poolSize[0],this.padding,this.strides[0]),n=Zn(n,this.poolSize[1],this.padding,this.strides[1]),s=Zn(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,s]:[t[0],e,n,s,t[4]]}call(t,e){return(0,r.lub)((()=>(this.invokeCallHook(t,e),this.poolingFunction(Yt(t),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class hr extends cr{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),sr(t,e,n,s,r,"max")}}hr.className="MaxPooling3D",r.m7h.ax(hr);class dr extends cr{constructor(t){super(t)}poolingFunction(t,e,n,s,r){return j(r),q(s),sr(t,e,n,s,r,"avg")}}dr.className="AveragePooling3D",r.m7h.ax(dr);class pr extends oe{constructor(t){super(t),this.inputSpec=[new ne({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new c}}class fr extends pr{constructor(t){super(t||{})}call(t,e){return(0,r.lub)((()=>{const e=Yt(t);return r.J69(e,1)}))}}fr.className="GlobalAveragePooling1D",r.m7h.ax(fr);class mr extends pr{constructor(t){super(t||{})}call(t,e){return(0,r.lub)((()=>{const e=Yt(t);return r.Fp7(e,1)}))}}mr.className="GlobalMaxPooling1D",r.m7h.ax(mr);class gr extends oe{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,j(this.dataFormat),this.inputSpec=[new ne({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new c}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class br extends gr{call(t,e){return(0,r.lub)((()=>{const e=Yt(t);return"channelsLast"===this.dataFormat?r.J69(e,[1,2]):r.J69(e,[2,3])}))}}br.className="GlobalAveragePooling2D",r.m7h.ax(br);class yr extends gr{call(t,e){return(0,r.lub)((()=>{const e=Yt(t);return"channelsLast"===this.dataFormat?r.Fp7(e,[1,2]):r.Fp7(e,[2,3])}))}}yr.className="GlobalMaxPooling2D",r.m7h.ax(yr);class xr extends oe{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){const s=ve(e.layer,n);delete e.layer;const r={layer:s};return Object.assign(r,e),new t(r)}}class wr extends xr{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Jt(t)).length<3)throw new u(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Jt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),s=t[1];return[n[0],s].concat(n.slice(1))}call(t,e){return(0,r.lub)((()=>gs(((t,n)=>[Yt(this.layer.call(t,e)),[]]),t=Yt(t),[],!1,null,null,!1,!0)[1]))}}wr.className="TimeDistributed",r.m7h.ax(wr);class vr extends xr{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ve(n),e.goBackwards=!0!==e.goBackwards;const s={};var r;if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=ve(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,r=this.mergeMode,S(G,"BidirectionalMergeMode",r),t.weights)throw new c("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,s,r=this.forwardLayer.computeOutputShape(t);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),e=r[0]):e=r[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):m(n)}apply(t,e){let n=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const r=ms(t,n,s,this.numConstants);if(t=r.inputs,n=r.initialState,s=r.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==s)return super.apply(t,e);const a=[],i=[];if(null!=n){const t=n.length;if(t%2>0)throw new u("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,a.push(...n);const s=n.map((t=>new ne({shape:t.shape})));this.forwardLayer.stateSpec=s.slice(0,t/2),this.backwardLayer.stateSpec=s.slice(t/2),i.push(...s)}if(null!=s)throw new c("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof se;for(const t of a)if(t instanceof se!==o)throw new u("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[t].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,e);return this.inputSpec=r,o}return super.apply(t,e)}call(t,e){return(0,r.lub)((()=>{const n=e.initialState;let s,a,i,o;if(null==n)s=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:r})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=r.GYS(a,1)),"concat"===this.mergeMode?o=ht([s,a]):"sum"===this.mergeMode?o=r.IHx(s,a):"ave"===this.mergeMode?o=r.dC7(.5,r.IHx(s,a)):"mul"===this.mergeMode?o=r.dC7(s,a):null==this.mergeMode&&(o=[s,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Y(this.forwardLayer.name,(()=>{this.forwardLayer.build(t)})),Y(this.backwardLayer.name,(()=>{this.backwardLayer.build(t)})),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map((t=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ve(e.layer);if(delete e.layer,null!=e.numConstants)throw new c("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=n,new t(s)}}vr.className="Bidirectional",r.m7h.ax(vr);var kr,Ir,Cr=n(214),$r=n(377);function Sr(t,e,n=new Map,s=new Set){if(null==t)return null;if(s.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Ar(t)){const r=Array.isArray(t)?[]:{};s.add(t);for(const a in t){const i=Sr(t[a],e,n,s);r[a]=i}return s.delete(t),r}throw new Error(`Can't recurse into non-iterable type: ${t}`)}return n.set(t,r.value),r.value}function Nr(t,e=Rr){return Er(t,e)}function Er(t,e,n=new Set){const s=t[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=e(t);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Ar(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Er(t.map((t=>t[a])),e,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function Rr(t){return null===t?null:Ar(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}function Ar(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"==typeof t&&!(t instanceof r.esB))}function Dr(t){return Sr(t,Tr)}function Tr(t){return t instanceof r.esB?{value:t.clone(),recurse:!1}:Ar(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class Fr{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class Or extends Fr{constructor(){super(Or.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let t=0;t<n;t++)e[t]=this.get(this.wrap(this.begin+t));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Or.INITIAL_CAPACITY=32;class _r{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new Gr(this,t)}filter(t){return new Pr(this,t)}map(t){return new Vr(this,t)}mapAsync(t){return new Hr(this,t)}serialMapAsync(t){return new Hr(this,t).serial()}flatmap(t){return new qr(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile((t=>!0===t))}rowMajorBatch(t,e=!0){return new Ur(this,t,e)}columnMajorBatch(t,e=!0,n=Rr){return this.rowMajorBatch(t,e).map((t=>Nr(t,n)))}concatenate(t,e){return new Kr(new Mr([this,t]),e)}take(t){return t<0||null==t?this:new Wr(this,t)}skip(t){return t<0||null==t?this:new zr(this,t)}prefetch(t){return new Xr(this,t)}shuffle(t,e){return new Yr(this,t,e)}serial(){return new Lr(this)}}class Mr extends _r{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:Dr(t),done:!1}}}class Br extends _r{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class Lr extends _r{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class zr extends _r{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;r.B90(t.value)}return this.upstream.next()}}class Wr extends _r{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Ur extends _r{constructor(t,e,n=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class Pr extends _r{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;r.B90(t.value)}}}class Vr extends _r{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.piX.Vu(t.value),n=this.transform(t.value),s=r.piX.Vu(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return{value:n,done:!1}}}class Gr extends _r{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class Hr extends _r{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=r.piX.Vu(t.value),n=await this.transform(t.value),s=r.piX.Vu(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return{value:n,done:!1}}}class jr extends _r{constructor(){super(),this.outputQueue=new Or,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class qr extends jr{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=r.piX.Vu(t.value),n=this.transform(t.value),s=r.piX.Vu(n);this.outputQueue.pushAll(n);for(const t of e)r.piX.BC(t,s)||t.dispose();return!0}}class Kr extends _r{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}(Ir=kr||(kr={}))[Ir.FAIL=0]="FAIL",Ir[Ir.SHORTEST=1]="SHORTEST",Ir[Ir.LONGEST=2]="LONGEST";class Xr extends _r{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new Fr(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class Yr extends Xr{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=$r.alea(n||r.D5U.zO().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Jr{constructor(){this.size=null}batch(t,e=!0){const n=this;let s;return r.D5U.hu(t>0,(()=>`batchSize needs to be positive, but it is\n      ${t}`)),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Qr((async()=>(await n.iterator()).columnMajorBatch(t,e,Zr)),s)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Qr((async()=>(await e.iterator()).concatenate(await t.iterator())),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Qr((async()=>(await e.iterator()).filter((e=>r.lub((()=>t(e)))))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Qr((async()=>(await e.iterator()).map((e=>r.lub((()=>t(e)))))),this.size)}mapAsync(t){const e=this;return Qr((async()=>(await e.iterator()).mapAsync(t)),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Qr((async()=>(await e.iterator()).prefetch(t)),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Qr((async()=>{return n=(r=async()=>({value:await e.iterator(),done:!1}),new Br(r)).take(t),new Kr(n,s);var n,s,r}),n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Qr((async()=>(await e.iterator()).skip(t)),n)}shuffle(t,e,n=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=$r.alea(e||r.D5U.zO().toString());return Qr((async()=>{let e=a.int32();return n&&(e+=a.int32()),(await s.iterator()).shuffle(t,e.toString())}),this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Qr((async()=>(await e.iterator()).take(t)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Qr(t,e=null){return new class extends Jr{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Zr(t){if(null===t)return null;return null==(e=t[0])||null===(n=e)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(e)||"object"==typeof e&&e instanceof r.esB||r.D5U.fU(e)?{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof r.esB?r.knu(t):r.XeE(t)}(t),recurse:!1}:{value:null,recurse:!0};var e,n}function ta(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}Jr.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const ea=r.GDt.GP,na=r.GDt.Vl,sa=r.GDt.Gg,ra=r.GDt.vN,aa=r.GDt.ZA;class ia extends r.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.JLz(this,(0,r.SRH)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,(0,r.OBj)().get("IS_NODE")&&r.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={};return this.data.set(s,{values:t,dtype:n,refCount:1}),s}makeTensorInfo(t,e,n){let s;if("string"===e&&null!=n&&n.length>0&&r.D5U.HD(n[0])){const a=n.map((t=>r.D5U.YW(t)));s=this.write(a,t,e)}else s=this.write(n,t,e);return{dataId:s,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,n,s){this.data.set(t,{values:e,dtype:s,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return r.Wap.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map((t=>r.D5U.v5(t)))}catch(t){throw new Error("Failed to decode encoded string bytes into utf-8")}return r.f3b(t.shape,t.dtype,n)}makeOutput(t,e,n){const s=this.write(t,e,n);return(0,r.SRH)().makeTensorFromDataId(s,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=r.D5U.zO();return t(),{kernelMs:r.D5U.zO()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}stridedSlice(t,e,n,s){ta(t,"stridedSlice");const a=r.kuN.computeOutShape(e,n,s);if(a.some((t=>0===t)))return r.XeE([],a);const i=r.f3b(a,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;t++){const n=i.indexToLoc(t),r=new Array(n.length);for(let t=0;t<r.length;t++)r[t]=n[t]*s[t]+e[t];i.set(o.get(...r),...n)}return i.toTensor()}diag(t){const e=this.readSync(t.dataId),n=r.f3b([t.size,t.size],t.dtype),s=n.values;for(let n=0;n<e.length;n++)s[n*t.size+n]=e[n];return n.toTensor()}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let a=0;for(let n=0;n<t.rank;n++)n!==e&&(s[a++]=t.shape[n]);const i=new Array(t.rank).fill(0),o=t.shape.slice();o[e]=1;const l=new Array(n);for(let n=0;n<l.length;n++)i[e]=n,l[n]=r.tPi(t,i,o).reshape(s);return l}reverse(t,e){ta(t,"reverse");const n=r.f3b(t.shape,t.dtype),s=this.bufferSync(t);for(let r=0;r<n.size;r++){const a=n.indexToLoc(r),i=a.slice();e.forEach((e=>i[e]=t.shape[e]-1-i[e])),n.set(s.get(...i),...a)}return n.toTensor()}neg(t){return ta(t,"neg"),r.dC7(r.iD$(-1),t)}addN(t){ta(t,"addN");const e=t.map((t=>this.readSync(t.dataId))),n=r.f3b(t[0].shape,t[0].dtype),s=n.values;for(let n=0;n<t.length;n++){const t=e[n];for(let e=0;e<s.length;e++)s[e]+=t[e]}return n.toTensor()}softmax(t,e){const n=r.D5U.EC([e],t.shape),s=(0,r.Fp7)(t,n),a=r.Wap.expandShapeToKeepDim(s.shape,n),i=r.luU(t,s.reshape(a)),o=r.Qqt(i),l=this.sum(o,n).reshape(a);return r.hiC(o,l)}pow(t,e){return ta([t,e],"pow"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.pow(t,e)))}floorDiv(t,e){return ta([t,e],"floorDiv"),this.broadcastedBinaryOp(t,e,"int32",((t,e)=>Math.floor(t/e)))}sum(t,e){ta(t,"sum"),r.Wap.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=(0,r.x8V)(t.dtype,"int32"),i=r.lls(n,a),o=r.D5U.NA(s),l=this.readSync(i.dataId),u=this.readSync(t.dataId);for(let t=0;t<l.length;++t){const e=t*o;let n=0;for(let t=0;t<o;++t)n+=u[e+t];l[t]=n}return i}prod(t,e){ta(t,"sum");const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=(0,r.x8V)(t.dtype,"int32"),i=r.lls(n,a),o=r.D5U.NA(s),l=this.readSync(i.dataId),u=this.readSync(t.dataId);for(let t=0;t<l.length;++t){const e=t*o;let n=1;for(let t=0;t<o;++t)n*=u[e+t];l[t]=n}return i}unsortedSegmentSum(t,e,n){ta(t,"unsortedSegmentSum");const s=[],a=t.rank-e.rank;for(let t=0;t<a;++t)e=e.expandDims(t+1);for(let a=0;a<n;++a){const n=r.iD$(a,"int32"),i=r.DgJ(n,e).asType("float32").mul(t).sum(0);s.push(i)}return r.knu(s)}argMin(t,e){ta(t,"argMin");const n=[e];r.Wap.assertAxesAreInnerMostDims("argMin",n,t.rank);const[s,a]=r.Wap.computeOutAndReduceShapes(t.shape,n),i=r.lls(s,"int32"),o=r.D5U.NA(a),l=this.readSync(i.dataId),u=this.readSync(t.dataId);for(let t=0;t<l.length;++t){const e=t*o;let n=u[e],s=0;for(let t=0;t<o;++t){const r=u[e+t];r<n&&(n=r,s=t)}l[t]=s}return i}argMax(t,e){ta(t,"argMax");const n=[e];r.Wap.assertAxesAreInnerMostDims("argMax",n,t.rank);const[s,a]=r.Wap.computeOutAndReduceShapes(t.shape,n),i=r.lls(s,"int32"),o=r.D5U.NA(a),l=this.readSync(i.dataId),u=this.readSync(t.dataId);for(let t=0;t<l.length;++t){const e=t*o;let n=u[e],s=0;for(let t=0;t<o;++t){const r=u[e+t];r>n&&(n=r,s=t)}l[t]=s}return i}cumsum(t,e,n,s){if(ta(t,"cumsum"),e!==t.rank-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${t.rank-1} but got axis=${e}`);const a=(0,r.x8V)(t.dtype,"int32"),i=r.lls(t.shape,a),o=this.readSync(i.dataId),l=this.readSync(t.dataId),u=t.shape[t.rank-1],c=s?(t,e)=>t+u-e-1:(t,e)=>t+e;for(let t=0;t<l.length;t+=u)for(let e=0;e<u;e++){const s=c(t,e);if(0===e)o[s]=n?0:l[s];else{const r=c(t,e-1);o[s]=n?l[r]+o[r]:l[s]+o[r]}}return i}equal(t,e){return ta([t,e],"equal"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t===e?1:0))}notEqual(t,e){return ta([t,e],"notEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t!==e?1:0))}less(t,e){return ta([t,e],"less"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<e?1:0))}lessEqual(t,e){return ta([t,e],"lessEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t<=e?1:0))}greater(t,e){return ta([t,e],"greater"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>e?1:0))}greaterEqual(t,e){return ta([t,e],"greaterEqual"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t>=e?1:0))}logicalAnd(t,e){return ta([t,e],"logicalAnd"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t&&e))}logicalOr(t,e){return ta([t,e],"logicalOr"),this.broadcastedBinaryOp(t,e,"bool",((t,e)=>t||e))}select(t,e,n){ta([t,e,n],"select");const s=this.readSync(t.dataId),a=this.readSync(e.dataId),i=this.readSync(n.dataId),o=r.lls(e.shape,(0,r.x8V)(e.dtype,n.dtype)),l=this.readSync(o.dataId);let u=0;const c=0===t.rank||t.rank>1||1===e.rank?1:r.D5U.NA(e.shape.slice(1));for(let t=0;t<s.length;t++)for(let e=0;e<c;e++)1===s[t]?l[u++]=a[t]:l[u++]=i[t];return o}where(t){ta([t],"where");const e=this.readSync(t.dataId);return aa(t.shape,e)}topk(t,e,n){ta(t,"topk");const s=this.readSync(t.dataId);return ra(s,t.shape,t.dtype,e,n)}min(t,e){ta(t,"min"),r.Wap.assertAxesAreInnerMostDims("min",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.lls(n,t.dtype),i=r.D5U.NA(s),o=this.readSync(a.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=l[e];for(let t=0;t<i;++t){const s=l[e+t];s<n&&(n=s)}o[t]=n}return a}minimum(t,e){return ta([t,e],"minimum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.min(t,e)))}mod(t,e){return ta([t,e],"mod"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}))}maximum(t,e){return ta([t,e],"maximum"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.max(t,e)))}all(t,e){ta(t,"all"),r.Wap.assertAxesAreInnerMostDims("all",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.lls(n,t.dtype),i=r.D5U.NA(s),o=this.readSync(a.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=l[e];for(let t=0;t<i;++t){const s=l[e+t];n=n&&s}o[t]=n}return a}any(t,e){ta(t,"any"),r.Wap.assertAxesAreInnerMostDims("any",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.lls(n,t.dtype),i=r.D5U.NA(s),o=this.readSync(a.dataId),l=this.readSync(t.dataId);for(let t=0;t<o.length;++t){const e=t*i;let n=l[e];for(let t=0;t<i;++t){const s=l[e+t];n=n||s}o[t]=n}return a}squaredDifference(t,e){return ta([t,e],"squaredDifference"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>{const n=t-e;return n*n}))}eluDer(t,e){ta([t,e],"eluDer");const n=new Float32Array(e.size),s=this.readSync(e.dataId),r=this.readSync(t.dataId);for(let t=0;t<s.length;++t){const e=s[t];n[t]=e>=1?r[t]:r[t]*(e+1)}return this.makeOutput(n,e.shape,"float32")}atan2(t,e){return ta([t,e],"atan2"),this.broadcastedBinaryOp(t,e,t.dtype,((t,e)=>Math.atan2(t,e)))}tile(t,e){return ta(t,"tile"),sa(this.bufferSync(t),e)}gather(t,e,n){ta([t,e],"gather");const s=t.shape.slice(),a=this.readSync(e.dataId);s[n]=a.length;const i=r.f3b(s,t.dtype),o=this.bufferSync(t);for(let t=0;t<i.size;++t){const e=i.indexToLoc(t),s=e.slice();s[n]=a[e[n]];const r=o.locToIndex(s);i.values[t]=o.values[r]}return i.toTensor()}batchToSpaceND(t,e,n){ta([t],"batchToSpaceND");const s=e.reduce(((t,e)=>t*e)),a=r.Wap.getReshaped(t.shape,e,s),i=r.Wap.getPermuted(a.length,e.length),o=r.Wap.getReshapedPermuted(t.shape,e,s),l=r.Wap.getSliceBeginCoords(n,e.length),u=r.Wap.getSliceSize(o,n,e.length);return r.p4s(t.reshape(a),i).reshape(o).slice(l,u)}pool3d(t,e,n){ta(t,"pool3d");const s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=this.readSync(t.dataId),y=r.f3b(e.outShape,t.dtype),x=y.values,w=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],v=e.outShape[2]*e.outShape[3]*e.outShape[4],k=e.outShape[3]*e.outShape[4],I=e.outShape[4];for(let r=0;r<e.batchSize;++r){const y=r*w,C=r*t.strides[0];for(let r=0;r<e.inChannels;++r)for(let w=0;w<e.outDepth;++w){const $=w*s-p;let S=$;for(;S<0;)S+=o;const N=Math.min(e.inDepth,c+$),E=y+w*v;for(let s=0;s<e.outHeight;++s){const c=s*a-f;let p=c;for(;p<0;)p+=l;const y=Math.min(e.inHeight,h+c),w=E+s*k;for(let s=0;s<e.outWidth;++s){const a=s*i-m;let c=a;for(;c<0;)c+=u;const h=Math.min(e.inWidth,d+a),f=w+s*I;let v=g,k=0,$=0;for(let e=S;e<N;e+=o){const s=C+e*t.strides[1];for(let e=p;e<y;e+=l){const a=s+e*t.strides[2];for(let e=c;e<h;e+=u){const s=b[a+e*t.strides[3]+r];if("max"===n&&s>v?v=s:"avg"===n&&(k+=s,$++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}x[f+r]="avg"===n?k/$:v}}}}return y.toTensor()}avgPool3d(t,e){return ta(t,"avgPool3d"),this.pool3d(t,e,"avg").toFloat()}avgPool3dBackprop(t,e,n){ta([t,e],"avgPool3dBackprop");const s=n.strideDepth,a=n.strideHeight,i=n.strideWidth,o=n.filterDepth,l=n.filterHeight,u=n.filterWidth,c=n.dilationDepth,h=n.dilationHeight,d=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,m=n.effectiveFilterWidth,g=p-1-n.padInfo.front,b=m-1-n.padInfo.left,y=f-1-n.padInfo.top,x=r.f3b(e.shape,"float32"),w=1/(o*l*u),v=this.bufferSync(t);for(let t=0;t<n.batchSize;++t)for(let e=0;e<n.inChannels;++e)for(let r=0;r<n.inDepth;++r)for(let o=0;o<n.inHeight;++o)for(let l=0;l<n.inWidth;++l){const u=r-g,k=o-y,I=l-b;let C=0;for(let r=0;r<p;r+=c){const o=(u+r)/s;if(!(o<0||o>=n.outDepth||Math.floor(o)!==o))for(let s=0;s<f;s+=h){const r=(k+s)/a;if(!(r<0||r>=n.outHeight||Math.floor(r)!==r))for(let s=0;s<m;s+=d){const a=(I+s)/i;a<0||a>=n.outWidth||Math.floor(a)!==a||(C+=v.get(t,o,r,a,e))}}}x.set(C*w,t,r,o,l,e)}return x.toTensor()}maxPool3d(t,e){return ta(t,"maxPool3d"),this.pool3d(t,e,"max").toFloat()}maxPool3dPositions(t,e){const n=r.f3b(e.outShape,"int32"),s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left,g=this.bufferSync(t);for(let t=0;t<e.batchSize;++t)for(let r=0;r<e.inChannels;++r)for(let b=0;b<e.outDepth;++b){const y=b*s-p;let x=y;for(;x<0;)x+=o;const w=Math.min(e.inDepth,c+y);for(let s=0;s<e.outHeight;++s){const c=s*a-f;let p=c;for(;p<0;)p+=l;const v=Math.min(e.inHeight,h+c);for(let a=0;a<e.outWidth;++a){const f=a*i-m;let k=f;for(;k<0;)k+=u;const I=Math.min(e.inWidth,d+f);let C=Number.NEGATIVE_INFINITY,$=-1;for(let e=x;e<w;e+=o){const n=e-y;for(let s=p;s<v;s+=l){const a=s-c;for(let i=k;i<I;i+=u){const o=i-f,l=g.get(t,e,s,i,r);l>=C&&(C=l,$=n*h*d+a*h+o)}}}n.set($,t,b,s,a,r)}}}return n.toTensor()}maxPool3dBackprop(t,e,n,s){ta([e,n],"maxPool3dBackprop");const a=this.maxPool3dPositions(e,s),i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=d-1-s.padInfo.front,g=f-1-s.padInfo.left,b=p-1-s.padInfo.top,y=r.f3b(e.shape,"float32"),x=this.bufferSync(a),w=this.bufferSync(t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.inDepth;++n)for(let r=0;r<s.inHeight;++r)for(let a=0;a<s.inWidth;++a){const v=n-m,k=r-b,I=a-g;let C=0;for(let n=0;n<d;n+=u){const r=(v+n)/i;if(!(r<0||r>=s.outDepth||Math.floor(r)!==r))for(let a=0;a<p;a+=c){const i=(k+a)/o;if(!(i<0||i>=s.outHeight||Math.floor(i)!==i))for(let o=0;o<f;o+=h){const u=(I+o)/l;if(u<0||u>=s.outWidth||Math.floor(u)!==u)continue;const c=d*p*f-1-x.get(t,r,i,u,e)===n*p*f+a*f+o?1:0;0!==c&&(C+=w.get(t,r,i,u,e)*c)}}}y.set(C,t,n,r,a,e)}return y.toTensor()}resizeBilinear(t,e,n,s){ta(t,"resizeBilinear");const[a,i,o,l]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(r.D5U.NA([a,e,n,l])),h=[s&&e>1?i-1:i,s&&n>1?o-1:o],d=[s&&e>1?e-1:e,s&&n>1?n-1:n];let p=0;const f=h[0]/d[0],m=h[1]/d[1];for(let s=0;s<a;s++)for(let r=0;r<e;r++){const e=f*r,a=Math.floor(e),h=e-a,d=Math.min(i-1,Math.ceil(e)),g=s*t.strides[0]+a*t.strides[1],b=s*t.strides[0]+d*t.strides[1];for(let e=0;e<n;e++){const n=m*e,s=Math.floor(n),r=n-s,a=Math.min(o-1,Math.ceil(n)),i=g+s*t.strides[2],d=b+s*t.strides[2],f=g+a*t.strides[2],y=b+a*t.strides[2];for(let t=0;t<l;t++){const e=u[i+t],n=u[d+t],s=e+(u[f+t]-e)*r,a=s+(n+(u[y+t]-n)*r-s)*h;c[p++]=a}}}return r.XeE(c,[a,e,n,l])}resizeBilinearBackprop(t,e,n){ta([t,e],"resizeBilinearBackprop");const[s,a,i,o]=e.shape,[,l,u]=t.shape,c=new Float32Array(s*a*i*o),h=[n&&l>1?a-1:a,n&&u>1?i-1:i],d=[n&&l>1?l-1:l,n&&u>1?u-1:u],p=h[0]/d[0],f=h[1]/d[1],m=this.readSync(t.dataId);let g=0;for(let t=0;t<s;t++){const n=t*e.strides[0];for(let t=0;t<l;t++){const s=t*p,r=Math.floor(s),l=Math.min(Math.ceil(s),a-1),h=n+r*e.strides[1],d=n+l*e.strides[1],b=s-r,y=1-b;for(let t=0;t<u;t++){const n=t*f,s=Math.floor(n),r=Math.min(Math.ceil(n),i-1),a=n-s,l=1-a,u=h+s*e.strides[2],p=h+r*e.strides[2],x=d+s*e.strides[2],w=d+r*e.strides[2],v=y*l,k=y*a,I=b*l,C=b*a;for(let t=0;t<o;t++){const e=m[g++];c[u+t]+=e*v,c[p+t]+=e*k,c[x+t]+=e*I,c[w+t]+=e*C}}}}return r.yXz(c,[s,i,a,o],e.dtype)}resizeNearestNeighbor(t,e,n,s){ta(t,"resizeNearestNeighbor");const[a,i,o,l]=t.shape,u=this.readSync(t.dataId),c=new Float32Array(a*e*n*l),h=[s&&e>1?i-1:i,s&&n>1?o-1:o],d=[s&&e>1?e-1:e,s&&n>1?n-1:n],p=h[0]/d[0],f=h[1]/d[1];let m=0;for(let r=0;r<a;r++){const a=r*t.strides[0];for(let r=0;r<e;r++){const e=p*r,h=a+Math.min(i-1,s?Math.round(e):Math.floor(e))*t.strides[1];for(let e=0;e<n;e++){const n=f*e,r=h+Math.min(o-1,s?Math.round(n):Math.floor(n))*t.strides[2];for(let t=0;t<l;t++){const e=u[r+t];c[m++]=e}}}}return r.XeE(c,[a,e,n,l],t.dtype)}resizeNearestNeighborBackprop(t,e,n){ta([t,e],"resizeNearestNeighborBackprop");const[s,a,i,o]=e.shape,[,l,u]=t.shape,c=new Float32Array(s*a*i*o),h=this.readSync(t.dataId),d=[n&&l>1?a-1:a,n&&u>1?i-1:i],p=[n&&l>1?l-1:l,n&&u>1?u-1:u],f=d[0]/p[0],m=d[1]/p[1],g=1/f,b=1/m,y=2*Math.ceil(g)+2,x=2*Math.ceil(b)+2;for(let r=0;r<s;r++){const s=r*e.strides[0];for(let r=0;r<a;r++){const d=s+r*e.strides[1],p=Math.floor(r*g),w=Math.floor(p-y/2);for(let p=0;p<i;p++){const g=d+p*e.strides[2],v=Math.floor(p*b),k=Math.floor(v-x/2);for(let e=0;e<o;e++){let o=0;for(let c=0;c<y;c++){const d=c+w;if(d<0||d>=l)continue;const g=s+d*t.strides[1],b=d*f;if(r===Math.min(a-1,n?Math.round(b):Math.floor(b)))for(let s=0;s<x;s++){const r=s+k;if(r<0||r>=u)continue;const a=g+r*t.strides[2],l=r*m;p===Math.min(i-1,n?Math.round(l):Math.floor(l))&&(o+=h[a+e])}}c[g+e]=o}}}}return r.yXz(c,e.shape,e.dtype)}localResponseNormalization4D(t,e,n,s,a){ta(t,"localResponseNormalization4D");const i=t.shape[3],o=i-1,l=this.readSync(t.dataId),u=t.size,c=new Float32Array(u);function h(t){const n=t%i;let s=t-n+Math.max(0,n-e);const r=t-n+Math.min(n+e,o);let a=0;for(;s<=r;s++){const t=l[s];a+=t*t}return a}for(let t=0;t<u;t++){const e=h(t),r=l[t]*Math.pow(n+s*e,-a);c[t]=r}return r.yXz(c,t.shape)}LRNGrad(t,e,n,s,a,i,o){ta(t,"LRNGrad");const l=t.shape[3],u=this.readSync(t.dataId),c=this.readSync(e.dataId),h=this.readSync(n.dataId),d=new Float32Array(t.size),p=t.size;for(let t=0;t<p;t++){const e=t%l,n=t-e+Math.max(0,e-s),r=t-e+Math.min(l,e+s+1);let p=0;for(let t=n;t<r;t++)p+=Math.pow(c[t],2);p=i*p+a;for(let e=n;e<r;e++){let n=-2*i*o*c[e]*h[t]/p;t===e&&(n+=Math.pow(p,-o)),n*=u[t],d[e]+=n}}return r.yXz(d,t.shape)}multinomial(t,e,n,s){ta(t,"multinomial");const a=e?t:r.XAC(t),i=a.shape[0],o=a.shape[1],l=r.lls([i,n],"int32"),u=this.readSync(l.dataId),c=this.readSync(a.dataId);for(let t=0;t<i;++t){const e=t*o,r=new Float32Array(o-1);r[0]=c[e];for(let t=1;t<r.length;++t)r[t]=r[t-1]+c[e+t];const a=$r.alea(s.toString()),i=t*n;for(let t=0;t<n;++t){const e=a();u[i+t]=r.length;for(let n=0;n<r.length;n++)if(e<r[n]){u[i+t]=n;break}}}return l}oneHot(t,e,n,s){ta(t,"oneHot");const a=new Float32Array(t.size*e);a.fill(s);const i=this.readSync(t.dataId);for(let s=0;s<t.size;++s)i[s]>=0&&i[s]<e&&(a[s*e+i[s]]=n);return r.odF(a,[t.size,e],"int32")}nonMaxSuppression(t,e,n,s,r){ta(t,"nonMaxSuppression");const a=this.readSync(t.dataId),i=this.readSync(e.dataId);return ea(a,i,n,s,r)}depthToSpace(t,e,n){r.D5U.hu("NHWC"===n,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${n}`)),r.D5U.hu(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const s=t.shape[0],a=t.shape[1],i=t.shape[2],o=t.shape[3],l=a*e,u=i*e,c=o/(e*e),h=this.readSync(t.dataId),d=new Float32Array(s*l*u*c);let p=0;for(let t=0;t<s;++t)for(let n=0;n<l;++n){const s=Math.floor(n/e),r=n%e;for(let n=0;n<u;++n){const l=Math.floor(n/e),u=(r*e+n%e)*c;for(let e=0;e<c;++e){const n=e+u+o*(l+i*(s+a*t));d[p++]=h[n]}}}return r.yXz(d,[s,l,u,c])}broadcastedBinaryOp(t,e,n,s){const a=r.Wap.assertAndGetBroadcastShape(t.shape,e.shape),i=r.f3b(a,n),o=this.readSync(t.dataId),l=this.readSync(e.dataId),u=r.Wap.getBroadcastDims(t.shape,a),c=r.Wap.getBroadcastDims(e.shape,a),h=i.values;if(u.length+c.length===0)for(let t=0;t<h.length;++t)h[t]=s(o[t%o.length],l[t%l.length]);else{const n=this.bufferSync(t),r=this.bufferSync(e);for(let a=0;a<h.length;++a){const d=i.indexToLoc(a),p=d.slice(-t.rank);u.forEach((t=>p[t]=0));const f=n.locToIndex(p),m=d.slice(-e.rank);c.forEach((t=>m[t]=0));const g=r.locToIndex(m);h[a]=s(o[f],l[g])}}return i.toTensor()}split(t,e,n){return na(t,e,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}cropAndResize(t,e,n,s,a,i){const[o,l,u,c]=t.shape,h=e.shape[0],[d,p]=s,f=r.f3b([h,d,p,c],"float32"),m=this.readSync(e.dataId),g=this.readSync(n.dataId),b=this.readSync(t.dataId),y=t.strides,x=f.strides;for(let t=0;t<h;t++){const e=4*t,n=m[e],s=m[e+1],r=m[e+2],h=m[e+3],w=g[t];if(w>=o)continue;const v=d>1?(r-n)*(l-1)/(d-1):0,k=p>1?(h-s)*(u-1)/(p-1):0;for(let e=0;e<d;e++){const o=d>1?n*(l-1)+e*v:.5*(n+r)*(l-1);if(o<0||o>l-1)for(let n=0;n<p;n++)for(let s=0;s<c;s++){const r=s+n*x[2]+e*x[1]+t*x[0];f.values[r]=i}else if("bilinear"===a){const n=Math.floor(o),r=Math.ceil(o),a=o-n;for(let o=0;o<p;o++){const l=p>1?s*(u-1)+o*k:.5*(s+h)*(u-1);if(l<0||l>u-1){for(let n=0;n<c;n++){const s=n+o*x[2]+e*x[1]+t*x[0];f.values[s]=i}continue}const d=Math.floor(l),m=Math.ceil(l),g=l-d;for(let s=0;s<c;s++){let i=s+d*y[2]+n*y[1]+w*y[0];const l=b[i];i=s+m*y[2]+n*y[1]+w*y[0];const u=b[i];i=s+d*y[2]+r*y[1]+w*y[0];const c=b[i];i=s+m*y[2]+r*y[1]+w*y[0];const h=l+(u-l)*g,p=c+(b[i]-c)*g;i=s+o*x[2]+e*x[1]+t*x[0],f.values[i]=h+(p-h)*a}}}else for(let n=0;n<p;++n){const r=p>1?s*(u-1)+n*k:.5*(s+h)*(u-1);if(r<0||r>u-1){for(let s=0;s<c;s++){const r=s+n*x[2]+e*x[1]+t*x[0];f.values[r]=i}continue}const a=Math.round(r),l=Math.round(o);for(let s=0;s<c;s++){const r=s+a*y[2]+l*y[1]+w*y[0],i=s+n*x[2]+e*x[1]+t*x[0];f.values[i]=b[r]}}}}return f.toTensor()}sparseToDense(t,e,n,s){const{sliceRank:a,numUpdates:i,sliceSize:o,strides:l,outputSize:u}=r.Wap.calculateShapes(e,t,n);return this.scatter(t,e,n,u,o,i,a,l,s,!1)}gatherND(t,e){const n=e.shape,s=n[n.length-1],[a,i,o,l]=r.Wap.prepareAndValidate(t,e);if(0===i)return r.XeE([],a,t.dtype);const u=new r.YDk([i,o],t.dtype),c=this.readSync(e.dataId),h=this.readSync(t.dataId);for(let e=0;e<i;e++){const n=[];let r=0;for(let t=0;t<s;t++){const a=c[e*s+t];r+=a*l[t],n.push(a)}if(r<0||r>=t.size/o)throw new Error(`Invalid indices: ${n} does not index into ${t.shape}`);for(let t=0;t<o;t++)u.values[e*o+t]=h[r*o+t]}return u.toTensor().reshape(a)}scatterND(t,e,n){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:l}=r.Wap.calculateShapes(e,t,n),u=r.iD$(0);return this.scatter(t,e,n,l,i,a,s,o,u,!0)}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported for string tensors");return r.hlL(t.shape,1,t.dtype)}zerosLike(t){const e=r.D5U.rQ(t.dtype,r.D5U.NA(t.shape));return this.makeOutput(e,t.shape,t.dtype)}linspace(t,e,n){return r.Wap.linspaceImpl(t,e,n)}scatter(t,e,n,s,a,i,o,l,u,c){const h=[s/a,a],d=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===s)return r.XeE([],n,e.dtype);const f=new r.YDk(h,e.dtype);f.values.fill(this.readSync(u.dataId)[0]);for(let t=0;t<i;t++){const r=[];let i=0;for(let e=0;e<o;e++){const n=d[t*o+e];r.push(n),i+=n*l[e]}if(i<0||i>=s/a)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[i*a+n]+=p[t*a+n]:f.values[i*a+n]=0===e.rank?p[0]:p[t*a+n]}return f.toTensor().reshape(n)}}function oa(t,e,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if(ta(o,t),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=i,u=l.data.get(o.dataId).values,c=r.D5U.NA(o.shape),h=n||o.dtype,d=r.D5U.rQ(h,c);for(let t=0;t<c;++t)d[t]=e(u[t],a);return l.makeTensorInfo(o.shape,h,d)}}function la(t,e,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(ta(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=e(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}(0,r.jqO)("cpu",(()=>new ia),1);const ua=oa(r.SX0,(t=>t>=0?t:Math.exp(t)-1)),ca={kernelName:r.SX0,backendName:"cpu",kernelFunc:ua};function ha(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const da={kernelName:r.iJz,backendName:"cpu",kernelFunc:ha};function pa(t){return(e,n,s,a,i)=>{const o=r.Wap.assertAndGetBroadcastShape(e,n),l=o.length,u=r.D5U.e3(o),c=r.D5U.NA(o),h=r.D5U.WP(i,c),d=e.length,p=n.length,f=r.D5U.e3(e),m=r.D5U.e3(n),g=r.Wap.getBroadcastDims(e,o),b=r.Wap.getBroadcastDims(n,o);if(g.length+b.length===0)for(let e=0;e<h.length;++e)h[e]=t(s[e%s.length],a[e%a.length]);else for(let e=0;e<h.length;++e){const n=r.D5U.NE(e,l,u),i=n.slice(-d);g.forEach((t=>i[t]=0));const o=r.D5U.qy(i,d,f),c=n.slice(-p);b.forEach((t=>c[t]=0));const y=r.D5U.qy(c,p,m);h[e]=t(s[o],a[y])}return[h,o]}}const fa=pa(((t,e)=>t<0?e*t:t));function ma(t){const{inputs:e,backend:n}=t,{x:s,alpha:r}=e;ta([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=fa(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(l,s.dtype,o)}const ga={kernelName:r.o0g,backendName:"cpu",kernelFunc:ma},ba=oa(r.qkr,(t=>Math.max(0,t))),ya={kernelName:r.qkr,backendName:"cpu",kernelFunc:ba},xa=oa(r.SbG,(t=>Math.min(Math.max(0,t),6))),wa={kernelName:r.SbG,backendName:"cpu",kernelFunc:xa};function va(t,e,n,s){if("linear"===n)return ha({inputs:{x:e},backend:t});if("relu"===n)return ba({inputs:{x:e},backend:t});if("elu"===n)return ua({inputs:{x:e},backend:t});if("relu6"===n)return xa({inputs:{x:e},backend:t});if("prelu"===n)return ma({inputs:{x:e,alpha:s},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ka(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const Ia={kernelName:r.Zz9,backendName:"cpu",kernelFunc:ka};function Ca(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const $a={kernelName:r.xJR,backendName:"cpu",kernelFunc:Ca};function Sa(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return ha({inputs:{x:a},backend:n});const t=r.lls(a.shape),e=Sa({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=ka({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),s}if("complex64"===a.dtype){const t=Ca({inputs:{input:a},backend:n}),e=Sa({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),e}if(!r.D5U.QB(a.dtype,i)){const t=ha({inputs:{x:a},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i){const t=n.data.get(a.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(a.shape,"int32",e)}if("bool"===i){const t=n.data.get(a.dataId).values,e=r.D5U.Os([0],a.dtype),[s,i]=pa(((t,e)=>t!==e?1:0))(a.shape,[],t,e,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}const Na={kernelName:r.RFZ,backendName:"cpu",kernelFunc:Sa};function Ea(t,e,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;ta([a,i],t);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,d]=e(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:t,backend:r})=>{const{a,b:i}=t,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const t=Sa({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),e=o.data.get(t.dataId),s=e.complexTensorInfos.real,r=e.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=Sa({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(p.dataId).values,[g,b,y]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),v=ka({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(t),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const t=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=e(a.shape,i.shape,t,n,r);return o.makeTensorInfo(u,r,l)}}}function Ra(t){return(e,n,s,a,i,o)=>{const l=r.Wap.assertAndGetBroadcastShape(e,n),u=r.D5U.NA(l),c=l.length,h=r.D5U.e3(l),d=r.D5U.WP("float32",u),p=r.D5U.WP("float32",u),f=r.Wap.getBroadcastDims(e,l),m=r.Wap.getBroadcastDims(n,l),g=r.Wap.mergeRealAndImagArrays(s,a),b=r.Wap.mergeRealAndImagArrays(i,o),y=e.length,x=r.D5U.e3(e),w=n.length,v=r.D5U.e3(n);if(f.length+m.length===0)for(let e=0;e<d.length;e++){const n=e%g.length,s=e%b.length,r=t(g[2*n],g[2*n+1],b[2*s],b[2*s+1]);d[e]=r.real,p[e]=r.imag}else for(let e=0;e<d.length;e++){const n=r.D5U.NE(e,c,h),s=n.slice(-y);f.forEach((t=>s[t]=0));const a=r.D5U.qy(s,y,x),i=n.slice(-w);m.forEach((t=>i[t]=0));const o=r.D5U.qy(i,w,v),l=t(g[2*a],g[2*a+1],b[2*o],b[2*o+1]);d[e]=l.real,p[e]=l.imag}return[d,p,l]}}const Aa=pa(((t,e)=>t+e)),Da=Ra(((t,e,n,s)=>({real:t+n,imag:e+s}))),Ta=Ea(r.mm_,Aa,Da),Fa={kernelName:r.mm_,backendName:"cpu",kernelFunc:Ta};function Oa(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:i}=s,o=r.D5U.NA(a.shape),l=r.D5U.JZ(i,o),u=r.D5U.NA(l);r.D5U.hu(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const t=c.complexTensorInfos.real,e=c.complexTensorInfos.imag;t.shape=l,e.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const _a={kernelName:r.HZH,backendName:"cpu",kernelFunc:Oa};function Ma(t){const{inputs:e,backend:n,attrs:s}=t,{a,b:i}=e,{transposeA:o,transposeB:l}=s;ta([a,i],"matMul");const u=a.shape.length,c=i.shape.length,h=o?a.shape[u-2]:a.shape[u-1],d=l?i.shape[c-1]:i.shape[c-2],p=o?a.shape[u-1]:a.shape[u-2],f=l?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),b=r.D5U.NA(m),y=r.D5U.NA(g),x=b===y||1===b||1===y;r.D5U.hu(u>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const w=(b>y?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([p,f]);r.D5U.hu(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${l} must match.`));const v=l?[y,f,d]:[y,d,f],k=Oa({inputs:{x:a},backend:n,attrs:{shape:o?[b,h,p]:[b,p,h]}}),I=Oa({inputs:{x:i},backend:n,attrs:{shape:v}}),C=o?k.shape[1]:k.shape[2],$=o?k.shape[2]:k.shape[1],S=l?I.shape[1]:I.shape[2],N=Math.max(b,y),E=n.data.get(k.dataId).values,R=n.data.get(I.dataId).values,A=r.D5U.e3(k.shape),D=r.D5U.e3(I.shape),[T,F,O]=o?[A[0],1,A[1]]:[A[0],A[1],1],[_,M,B]=l?[1,D[1],D[0]]:[D[1],1,D[0]],L=$*S,z=(0,r.f3b)([N,$,S],k.dtype),W=z.values,U=n.blockSize;for(let t=0;t<N;t++)for(let e=0;e<$;e+=U)for(let n=0;n<S;n+=U)for(let s=0;s<C;s+=U){const r=Math.min(e+U,$),a=Math.min(n+U,S),i=Math.min(s+U,C);for(let o=e;o<r;o++)for(let e=n;e<a;e++){let n=0;for(let r=s;r<i;r++){const s=Math.min(t,b-1)*T,a=Math.min(t,y-1)*B;n+=E[s+o*F+r*O]*R[r*_+e*M+a]}W[t*L+(o*S+e)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,z.dtype,z.values)}const Ba={kernelName:r.XLW,backendName:"cpu",kernelFunc:Ma},La={kernelName:r.usg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{a:r,b:a,bias:i,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:c}=s;let h,d,p;const f=[];h=Ma({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=Ta({inputs:{a:h,b:i},backend:n}),f.push(h),h=d),c&&(p=va(n,h,c,o),f.push(h),h=p);for(const t of f)n.disposeIntermediateTensorInfo(t);return h}};function za(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Wa={kernelName:r.SYM,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;let s=new Float32Array(r.D5U.NA(e.shape));if("complex64"!==e.dtype)s=za(n.data.get(e.dataId).values);else{const t=n.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let t=0;t<i.length;t++){const e=i[t],n=o[t];s[t]=Math.hypot(e,n)}}return n.makeOutput(s,e.shape,"float32")}},Ua=oa(r.VGw,(t=>Math.acos(t))),Pa={kernelName:r.VGw,backendName:"cpu",kernelFunc:Ua},Va=oa(r.SpW,(t=>Math.acosh(t))),Ga={kernelName:r.SpW,backendName:"cpu",kernelFunc:Va},Ha=oa(r.M2y,(t=>Math.asin(t))),ja={kernelName:r.M2y,backendName:"cpu",kernelFunc:Ha},qa=oa(r.qw7,(t=>Math.asinh(t))),Ka={kernelName:r.qw7,backendName:"cpu",kernelFunc:qa},Xa=oa(r.jMg,(t=>Math.atan(t))),Ya={kernelName:r.jMg,backendName:"cpu",kernelFunc:Xa},Ja=oa(r.Oyi,(t=>Math.atanh(t))),Qa={kernelName:r.Oyi,backendName:"cpu",kernelFunc:Ja};function Za(t,e,n,s,a,i){const o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,r.f3b)(a.outShape,n),b=g.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],w=a.outShape[3];for(let e=0;e<a.batchSize;++e){const n=e*y,r=e*s[0];for(let e=0;e<a.inChannels;++e)for(let g=0;g<a.outHeight;++g){const y=g*o-p,v=Math.max(0,y),k=Math.min(a.inHeight,h+y),I=n+g*x;for(let n=0;n<a.outWidth;++n){const o=n*l-f,h=Math.max(0,o),p=Math.min(a.inWidth,d+o);let g=m,y=0,x=0;for(let n=v;n<k;n+=u){const a=r+n*s[1];for(let n=h;n<p;n+=c){const r=t[a+n*s[2]+e];"max"===i&&r>g?g=r:"avg"===i&&(y+=r,x++)}if(isNaN(g))break}b[I+n*w+e]="avg"===i?y/x:g}}}return g}function ti(t,e,n,s,a=!1,i=!1){const o=(0,r.f3b)(s.outShape,"int32"),l=s.strideHeight,u=s.strideWidth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterHeight,p=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,g=(0,r.f3b)(e,n,t);for(let t=0;t<s.batchSize;++t)for(let e=0;e<s.inChannels;++e)for(let n=0;n<s.outHeight;++n){const r=n*l-f;let b=r;for(;b<0;)b+=c;const y=Math.min(s.inHeight,d+r);for(let l=0;l<s.outWidth;++l){const d=l*u-m;let f=d;for(;f<0;)f+=h;const x=Math.min(s.inWidth,p+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=b;n<y;n+=c){const o=n-r;for(let r=f;r<x;r+=h){const l=r-d,u=g.get(t,n,r,e);u>w&&(w=u,v=a?i?((t*s.inHeight+n)*s.inWidth+r)*s.inChannels+e:(n*s.inWidth+r)*s.inChannels+e:o*p+l)}}o.set(v,t,n,l,e)}}return o}const ei={kernelName:r.JhU,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;ta(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.cO(c.inShape,c.outShape))h=ha({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=r.D5U.e3(a.shape),s=Za(t,a.shape,a.dtype,e,c,"avg");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},ni={kernelName:r.xts,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:i}=e,o=i;ta([a,i],"avgPoolBackprop");const{filterSize:l,strides:u,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,l,u,1,c),d=h.strideHeight,p=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,b=h.dilationWidth,y=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,v=y-1-h.padInfo.top,k=(0,r.f3b)(o.shape,"float32"),I=1/(f*m),C=n.data.get(a.dataId).values,$=(0,r.f3b)(a.shape,"float32",C);for(let t=0;t<h.batchSize;++t)for(let e=0;e<h.inChannels;++e)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=n-v,a=s-w;let i=0;for(let n=0;n<y;n+=g){const s=(r+n)/d;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=b){const r=(a+n)/p;r<0||r>=h.outWidth||Math.floor(r)!==r||(i+=$.get(t,s,r,e))}}k.set(i*I,t,n,s,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},si={kernelName:r.sHE,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,scale:i,offset:o,mean:l,variance:u}=e;r.D5U.hu(l.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==o||l.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==i||l.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),ta([a,l,u,i,o],"batchNorm");let{varianceEpsilon:c}=s;null==c&&(c=.001);const h=n.data.get(a.dataId).values,d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values,f=i?n.data.get(i.dataId).values:new Float32Array([1]),m=o?n.data.get(o.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),b=m.length,y=f.length,x=p.length,w=d.length;let v=0,k=0,I=0,C=0;for(let t=0;t<h.length;++t)g[t]=m[v++]+(h[t]-d[k++])*f[I++]/Math.sqrt(p[C++]+c),v>=b&&(v=0),k>=w&&(k=0),I>=y&&(I=0),C>=x&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function ri(t){return(e,n,s)=>{const a=r.D5U.WP(n,e.length);for(let n=0;n<e.length;++n)a[n]=t(e[n],s);return a}}const ai=ri((t=>Math.ceil(t))),ii=la(r.gJX,ai),oi={kernelName:r.gJX,backendName:"cpu",kernelFunc:ii},li=oa(r.xnO,((t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t})),ui={kernelName:r.xnO,backendName:"cpu",kernelFunc:li};function ci(t){const{inputs:e,backend:n}=t,{input:s}=e,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const hi={kernelName:r.J_u,backendName:"cpu",kernelFunc:ci};function di(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,i=r.D5U.EC(a,e[0].shape)[0];let o=r.Wap.computeOutShape(e.map((t=>t.shape)),i);if(0===r.D5U.NA(o))return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===l.length)return l[0];const u=l.map((t=>t.shape));if(r.Wap.assertParamsConsistent(u,i),"complex64"===l[0].dtype){const t=l.map((t=>Ca({inputs:{input:t},backend:n}))),e=l.map((t=>ci({inputs:{input:t},backend:n}))),s=di({inputs:t,backend:n,attrs:{axis:i}}),r=di({inputs:e,backend:n,attrs:{axis:i}}),a=ka({inputs:{real:s,imag:r},backend:n});return t.forEach((t=>n.disposeIntermediateTensorInfo(t))),e.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const c=l.map((t=>{const e=r.D5U.NA(t.shape.slice(i));return Oa({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}));o=r.Wap.computeOutShape(c.map((t=>t.shape)),1);const h=r.D5U.WP(l[0].dtype,r.D5U.NA(o));if(1===c[0].shape[0]){let t=0;c.forEach((e=>{const s=n.data.get(e.dataId).values,a=r.D5U.NA(e.shape);h.set(s,t),t+=a}))}else{let t=0;c.forEach((e=>{const s=n.data.get(e.dataId).values;let r=0;for(let n=0;n<e.shape[0];++n){const a=n*o[1]+t;for(let t=0;t<e.shape[1];++t)h[a+t]=s[r++]}t+=e.shape[1]}))}const d=r.Wap.computeOutShape(l.map((t=>t.shape)),i),p=n.makeTensorInfo(d,e[0].dtype,h);return c.forEach((t=>n.disposeIntermediateTensorInfo(t))),p}const pi={kernelName:r.Eh3,backendName:"cpu",kernelFunc:di};function fi(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:i}=e,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=s;ta([a,i],"conv2d");const d=r.Wap.convertConv2DDataFormat(u),p=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,d),f=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,b=p.dilationWidth,y=p.padInfo.left,x=p.padInfo.top,w="channelsLast"===p.dataFormat,v=new r.YDk(p.outShape,a.dtype),k=r.D5U.e3(a.shape),I=r.D5U.e3(i.shape),C=k[0],$=w?k[1]:k[2],S=w?k[2]:1,N=w?1:k[1],E=v.strides[0],R=w?v.strides[1]:v.strides[2],A=w?v.strides[2]:1,D=w?1:v.strides[1],T=n.data.get(a.dataId).values,F=n.data.get(i.dataId).values,O=v.values;for(let t=0;t<p.batchSize;++t){const e=t*C,n=t*E;for(let t=0;t<p.outHeight;++t){const s=n+t*R,r=t*p.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const a=t*I[0],i=e+n*$;for(let t=0;t<p.outWidth;++t){const e=s+t*A,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const s=n+t*b;if(s<0||s>=p.inWidth)continue;const r=i+s*S;let o=a+t*I[1];for(let t=0;t<p.inChannels;++t){const n=T[r+t*N];for(let t=0;t<p.outChannels;++t)O[e+t*D]+=n*F[o+t];o+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,O)}const mi={kernelName:r.mhS,backendName:"cpu",kernelFunc:fi},gi={kernelName:r.wUP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:i}=e,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:h}=s;ta([a,i],"conv2dBackpropFilter");const d=r.Wap.convertConv2DDataFormat(u),p=r.Wap.computeConv2DInfo(a.shape,h,o,1,l,c,!1,d),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:b}=p,y="channelsLast"===p.dataFormat,x=new r.YDk(p.filterShape,"float32"),w=p.padInfo.left,v=p.padInfo.top,k=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,C=new r.YDk(a.shape,a.dtype,k),$=new r.YDk(i.shape,i.dtype,I);for(let t=0;t<g;++t){const e=Math.max(0,Math.ceil((v-t)/f)),n=Math.min(p.outHeight,(p.inHeight+v-t)/f);for(let s=0;s<b;++s){const r=Math.max(0,Math.ceil((w-s)/m)),a=Math.min(p.outWidth,(p.inWidth+w-s)/m);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=e;c<n;++c){const e=t+c*f-v;for(let t=r;t<a;++t){const n=s+t*m-w;l+=y?C.get(u,e,n,i)*$.get(u,c,t,o):C.get(u,i,e,n)*$.get(u,o,c,t)}}x.set(l,t,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},bi={kernelName:r.wm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:i}=e,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=s;ta([a,i],"conv2dBackpropInput");const d=r.D5U.e3(i.shape),p=r.D5U.e3(a.shape);let f=r.Wap.convertConv2DDataFormat(c);const m=r.Wap.computeConv2DInfo(o,i.shape,l,1,u,h,!1,f),g=new r.YDk(m.inShape,"float32"),b=g.values,y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,[w,v,k]=d,{batchSize:I,filterHeight:C,filterWidth:$,inChannels:S,inHeight:N,inWidth:E,outChannels:R,outHeight:A,outWidth:D,strideHeight:T,strideWidth:F}=m;f=m.dataFormat;const O=C-1-m.padInfo.top,_=$-1-m.padInfo.left,M="channelsLast"===f,B=g.strides[0],L=M?g.strides[1]:g.strides[2],z=M?g.strides[2]:1,W=M?1:g.strides[1],U=p[0],P=M?p[1]:p[2],V=M?p[2]:1,G=M?1:p[1];for(let t=0;t<I;++t)for(let e=0;e<S;++e)for(let n=0;n<N;++n){const s=n-O,r=Math.max(0,Math.ceil(s/T)),a=Math.min(A,(C+s)/T);for(let i=0;i<E;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(D,($+o)/F);let c=0;for(let n=r;n<a;++n){const r=n*T-s;for(let s=l;s<u;++s){const a=U*t+P*n+V*s,i=w*(C-1-r)+v*($-1-(s*F-o))+k*e;for(let t=0;t<R;++t)c+=y[a+G*t]*x[i+t]}}b[B*t+L*n+z*i+W*e]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},yi={kernelName:r.x12,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:i}=e,{strides:o,pad:l,dilations:u}=s;ta([a,i],"conv3d");const c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,u,l),{filterDepth:h,filterHeight:d,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:b}=c,y=b.front,x=b.left,w=b.top,v=new r.YDk(c.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(i.dataId).values,C=v.values,$=r.D5U.e3(a.shape),S=r.D5U.e3(i.shape);for(let t=0;t<c.batchSize;++t){const e=t*$[0],n=t*v.strides[0];for(let t=0;t<c.outDepth;++t){const s=n+t*v.strides[1],r=t*c.strideDepth-y;for(let t=0;t<h;++t){const n=r+t*f;if(n<0||n>=c.inDepth)continue;const a=t*S[0],i=e+n*$[1];for(let t=0;t<c.outHeight;++t){const e=s+t*v.strides[2],n=t*c.strideHeight-w;for(let t=0;t<d;++t){const s=n+t*m;if(s<0||s>=c.inHeight)continue;const r=a+t*S[1],o=i+s*$[2];for(let t=0;t<c.outWidth;++t){const n=e+t*c.outChannels,s=t*c.strideWidth-x;for(let t=0;t<p;++t){const e=s+t*g;if(e<0||e>=c.inWidth)continue;const a=r+t*S[2],i=o+e*c.inChannels;let l=a;for(let t=0;t<c.inChannels;++t){const e=k[i+t];for(let t=0;t<c.outChannels;++t)C[n+t]+=e*I[l+t];l+=c.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},xi={kernelName:r.o2y,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:i}=e,{strides:o,pad:l,filterShape:u}=s;ta([a,i],"conv3dBackpropFilterV2");const c=r.D5U.e3(a.shape),h=r.D5U.e3(i.shape),d=r.Wap.computeConv3DInfo(a.shape,u,o,1,l),p=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.filterDepth,b=d.filterHeight,y=d.filterWidth,x=new r.YDk(d.filterShape,"float32"),w=x.values,[v,k,I,C]=x.strides,$=n.data.get(i.dataId).values,[S,N,E,R]=h,A=n.data.get(a.dataId).values,[D,T,F,O]=c,_=d.padInfo.front,M=d.padInfo.left,B=d.padInfo.top;for(let t=0;t<g;++t){const e=Math.max(0,Math.ceil((_-t)/p)),n=Math.min(d.outDepth,(d.inDepth+_-t)/p),s=t*v;for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((B-r)/f)),i=Math.min(d.outHeight,(d.inHeight+B-r)/f),o=r*k+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((M-s)/m)),u=Math.min(d.outWidth,(d.inWidth+M-s)/m),c=s*I+o;for(let o=0;o<d.inChannels;++o){const h=o*C+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let h=0;h<d.batchSize;++h){const d=h*D,b=h*S;for(let h=e;h<n;++h){const e=(t+h*p-_)*T+d,n=h*N+b;for(let t=a;t<i;++t){const a=(r+t*f-B)*F+e,i=t*E+n;for(let t=l;t<u;++t){const e=t*R+i;g+=A[(s+t*m-M)*O+a+o]*$[e+c]}}}}w[h+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},wi={kernelName:r.ik2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:i}=e,{pad:o,strides:l,inputShape:u}=s;ta([a],"conv3dBackpropInputV2");const c=r.D5U.e3(a.shape),h=r.D5U.e3(i.shape),d=r.Wap.computeConv3DInfo(u,i.shape,l,1,o),p=new r.YDk(d.inShape,"float32"),f=p.values,[m,g,b,y]=p.strides,x=n.data.get(a.dataId).values,[w,v,k,I]=c,C=n.data.get(i.dataId).values,[$,S,N,E]=h,{batchSize:R,filterDepth:A,filterHeight:D,filterWidth:T,inChannels:F,inDepth:O,inHeight:_,inWidth:M,outChannels:B,outDepth:L,outHeight:z,outWidth:W,strideDepth:U,strideHeight:P,strideWidth:V}=d,G=A-1-d.padInfo.front,H=D-1-d.padInfo.top,j=T-1-d.padInfo.left;for(let t=0;t<R;++t)for(let e=0;e<F;++e)for(let n=0;n<O;++n){const s=n-G,r=Math.max(0,Math.ceil(s/U)),a=Math.min(L,(A+s)/U);for(let i=0;i<_;++i){const o=i-H,l=Math.max(0,Math.ceil(o/P)),u=Math.min(z,(D+o)/P);for(let c=0;c<M;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),p=Math.min(W,(T+h)/V);let R=0;for(let n=r;n<a;++n){const r=n*U-s;for(let s=l;s<u;++s){const a=s*P-o;for(let i=d;i<p;++i){const o=w*t+v*n+k*s+I*i,l=$*(A-1-r)+S*(D-1-a)+N*(T-1-(i*V-h))+E*e;for(let t=0;t<B;++t)R+=x[o+t]*C[l+t]}}}f[m*t+g*n+b*i+y*c+e]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},vi=oa(r.mc4,(t=>Math.cos(t))),ki={kernelName:r.mc4,backendName:"cpu",kernelFunc:vi},Ii=oa(r.TR1,(t=>Math.cosh(t))),Ci={kernelName:r.TR1,backendName:"cpu",kernelFunc:Ii};function $i(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,filter:i}=e,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;ta([a,i],"depthwiseConv2DNative");const h=r.D5U.e3(a.shape),d=r.D5U.e3(i.shape);let p=u;null==p&&(p=[1,1]),r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const f=r.Wap.computeConv2DInfo(a.shape,i.shape,o,p,l,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:b,dilationWidth:y,padInfo:x}=f,w=x.left,v=x.top,k=f.outChannels/f.inChannels,I=new r.YDk(f.outShape,a.dtype),C=n.data.get(a.dataId).values,$=n.data.get(i.dataId).values,S=I.values;for(let t=0;t<f.batchSize;++t){const e=t*h[0],n=t*I.strides[0];for(let t=0;t<f.outHeight;++t){const s=n+t*I.strides[1],r=t*f.strideHeight-w;for(let t=0;t<m;++t){const n=r+t*b;if(n<0||n>=f.inHeight)continue;const a=t*d[0],i=e+n*h[1];for(let t=0;t<f.outWidth;++t){const e=s+t*I.strides[2],n=t*f.strideWidth-v;for(let t=0;t<g;++t){const s=n+t*y;if(s<0||s>=f.inWidth)continue;const r=a+t*d[1],o=i+s*f.inChannels;let l=e,u=r;for(let t=0;t<f.inChannels;++t){const e=C[o+t];for(let t=0;t<k;++t)S[l+t]+=e*$[u+t];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Si={kernelName:r.cie,backendName:"cpu",kernelFunc:$i},Ni={kernelName:r.sL$,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a,dy:i}=e,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:h}=s;ta([a,i],"depthwiseConv2dNativeBackpropFilter");const d=r.Wap.computeConv2DInfo(a.shape,h,o,l,u,c,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b=new r.YDk(d.filterShape,"float32"),y=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,v=n.data.get(a.dataId).values,k=new r.YDk(a.shape,a.dtype,v),I=n.data.get(i.dataId).values,C=new r.YDk(i.shape,i.dtype,I);for(let t=0;t<m;++t){const e=Math.max(0,Math.ceil((x-t)/p)),n=Math.min(d.outHeight,(d.inHeight+x-t)/p);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((y-s)/f)),a=Math.min(d.outWidth,(d.inWidth+y-s)/f);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/w),l=i%w;let u=0;for(let l=0;l<d.batchSize;++l)for(let c=e;c<n;++c){const e=t+c*p-x;for(let t=r;t<a;++t){const n=s+t*f-y;u+=k.get(l,e,n,o)*C.get(l,c,t,i)}}b.set(u,t,s,o,l)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Ei={kernelName:r.y7R,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,filter:i}=e,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=s;ta([a,i],"depthwiseConv2DNativeBackpropInput");const d=r.D5U.e3(a.shape),p=r.D5U.e3(i.shape),f=r.Wap.computeConv2DInfo(h,i.shape,o,l,u,c,!0),m=new r.YDk(f.inShape,"float32"),g=m.values,[b,y,x]=m.strides,w=n.data.get(a.dataId).values,[v,k,I]=d,C=n.data.get(i.dataId).values,[$,S,N]=p,{batchSize:E,filterHeight:R,filterWidth:A,inChannels:D,inHeight:T,inWidth:F,outChannels:O,outHeight:_,outWidth:M,strideHeight:B,strideWidth:L}=f,z=R-1-f.padInfo.top,W=A-1-f.padInfo.left,U=O/D;for(let t=0;t<E;++t)for(let e=0;e<D;++e)for(let n=0;n<T;++n){const s=n-z,r=Math.max(0,Math.ceil(s/B)),a=Math.min(_,(R+s)/B);for(let i=0;i<F;++i){const o=i-W,l=Math.max(0,Math.ceil(o/L)),u=Math.min(M,(A+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=v*t+k*n+I*s,i=$*(R-1-r)+S*(A-1-(s*L-o))+N*e;for(let t=0;t<U;++t)c+=w[a+(e*U+t)]*C[i+t]}}g[b*t+y*n+x*i+e]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Ri={kernelName:r.p4S,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=n,u=e,c=u.data.get(s.dataId).values,h=s.shape.length,d=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:b,outHeight:y,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:$,dilationWidth:S,outShape:N}=r.Wap.computeDilation2DInfo(s.shape,a.shape,i,o,"NHWC",l),E=r.D5U.NA(N),R=N.length,A=r.D5U.rQ(s.dtype,E);for(let t=0;t<f;++t)for(let e=0;e<y;++e){const n=e*v-w.top;for(let i=0;i<x;++i){const o=i*k-w.left;for(let l=0;l<b;++l){let u=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const i=n+e*$;if(i>=0&&i<m)for(let n=0;n<C;++n){const f=o+n*S;if(f>=0&&f<g){const o=r.D5U.qy([t,i,f,l],h,r.D5U.e3(s.shape)),m=r.D5U.qy([e,n,l],p,r.D5U.e3(a.shape)),g=c[o]+d[m];g>u&&(u=g)}}}A[r.D5U.qy([t,e,i,l],R,r.D5U.e3(N))]=u}}}return{dataId:u.write(r.D5U.Os(A,s.dtype),N,s.dtype),shape:N,dtype:s.dtype}}},Ai={kernelName:r.Vn9,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=n,c=e,h=r.D5U.GX(s.shape,c.data.get(s.dataId).values),d=r.D5U.GX(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:$,outShape:S}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.D5U.hu(i.rank===S.length,(()=>`Error in ${r.Vn9}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=r.D5U.GX(S,c.data.get(i.dataId).values),E=r.D5U.l6(a.shape,a.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-x.top;for(let s=0;s<y;++s){const r=s*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let e=0;e<k;++e){const s=n+e*C;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*$;if(u>=0&&u<m){const r=h[t][s][u][a]+d[e][n][a];r>i&&(i=r,o=e,l=n)}}}E[o][l][a]+=N[t][e][s][a]}}}return{dataId:c.write(r.D5U.Os(E,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Di={kernelName:r.ekb,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,filter:a,dy:i}=t,{strides:o,pad:l,dilations:u}=n,c=e,h=r.D5U.GX(s.shape,c.data.get(s.dataId).values),d=r.D5U.GX(a.shape,c.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:$,outShape:S}=r.Wap.computeDilation2DInfo(s.shape,a.shape,o,l,"NHWC",u);r.D5U.hu(i.rank===S.length,(()=>`Error in ${r.ekb}, dy must have the same rank as output ${S.length}, but got ${i.rank}`));const N=r.D5U.GX(S,c.data.get(i.dataId).values),E=r.D5U.l6(s.shape,s.dtype);for(let t=0;t<p;++t)for(let e=0;e<b;++e){const n=e*w-x.top;for(let s=0;s<y;++s){const r=s*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let e=0;e<k;++e){const s=n+e*C;if(s>=0&&s<f)for(let n=0;n<I;++n){const u=r+n*$;if(u>=0&&u<m){const r=h[t][s][u][a]+d[e][n][a];r>i&&(i=r,o=s,l=u)}}}E[t][o][l][a]+=N[t][e][s][a]}}}return{dataId:c.write(r.D5U.Os(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ti=pa(((t,e)=>t/e)),Fi=Ea(r.ZCY,Ti),Oi={kernelName:r.ZCY,backendName:"cpu",kernelFunc:Fi},_i=r.Wap.ERF_P,Mi=r.Wap.ERF_A1,Bi=r.Wap.ERF_A2,Li=r.Wap.ERF_A3,zi=r.Wap.ERF_A4,Wi=r.Wap.ERF_A5,Ui=oa(r.Omj,(t=>{const e=Math.sign(t),n=Math.abs(t),s=1/(1+_i*n);return e*(1-((((Wi*s+zi)*s+Li)*s+Bi)*s+Mi)*s*Math.exp(-n*n))})),Pi={kernelName:r.Omj,backendName:"cpu",kernelFunc:Ui},Vi=ri((t=>Math.exp(t))),Gi=la(r.NEP,Vi),Hi={kernelName:r.NEP,backendName:"cpu",kernelFunc:Gi},ji=ri((t=>Math.expm1(t))),qi=la(r.Y0y,ji),Ki={kernelName:r.Y0y,backendName:"cpu",kernelFunc:qi},Xi=pa(((t,e)=>t*e)),Yi=Ra(((t,e,n,s)=>({real:t*n-e*s,imag:t*s+e*n}))),Ji=Ea(r.wYn,Xi,Yi),Qi={kernelName:r.wYn,backendName:"cpu",kernelFunc:Ji};function Zi(t,e,n,s,a){const i=r.kuN.isSliceContinous(s,e,n),o=r.D5U.NA(n),l=r.D5U.e3(s);if(i){const n=r.kuN.computeFlatOffset(e,l);return t.subarray(n,n+o)}const u=r.D5U.WP(a,o);for(let a=0;a<o;++a){const i=n.length,o=r.D5U.e3(n),c=r.D5U.NE(a,i,o).map(((t,n)=>t+e[n])),h=r.D5U.qy(c,s.length,l);u[a]=t[h]}return u}function to(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{begin:i,size:o}=s;ta(a,"slice");const[l,u]=r.kuN.parseSliceParams(a,i,o);r.kuN.assertParamsValid(a,l,u);const c=Zi(n.data.get(a.dataId).values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const eo={kernelName:r.p2w,backendName:"cpu",kernelFunc:to},no=pa(((t,e)=>t-e)),so=Ra(((t,e,n,s)=>({real:t-n,imag:e-s}))),ro=Ea(r.Tr8,no,so),ao={kernelName:r.Tr8,backendName:"cpu",kernelFunc:ro};function io(t,e,n){const s=t.shape,a=s[0],i=s[1],o=n.data.get(t.dataId),l=o.complexTensorInfos.real,u=o.complexTensorInfos.imag,c=[a,i],h=r.D5U.NA(c),d=r.D5U.WP("float32",h),p=r.D5U.WP("float32",h);for(let t=0;t<a;t++){const s=to({inputs:{x:l},backend:n,attrs:{begin:[t,0],size:[1,i]}}),a=to({inputs:{x:u},backend:n,attrs:{begin:[t,0],size:[1,i]}}),o=ka({inputs:{real:s,imag:a},backend:n}),{real:c,imag:h}=oo(o,e,n),f=r.Wap.mergeRealAndImagArrays(c,h);for(let e=0;e<i;e++){const n=r.Wap.getComplexWithIndex(f,e);d[t*i+e]=n.real,p[t*i+e]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(c,"float32",d),m=n.makeTensorInfo(c,"float32",p),g=ka({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function oo(t,e,n){const s=r.D5U.NA(t.shape),a=n.data.get(t.dataId),i=n.data.get(a.complexTensorInfos.real.dataId).values,o=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((l=s)&l-1)){const a=lo(i,o,s,e,n),l=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(l,"float32",a.real),e=n.makeTensorInfo(l,"float32",a.imag),i=n.makeTensorInfo([],"float32",r.D5U.hr(s,"float32")),o=ha({inputs:{x:i},backend:n}),u=Oi.kernelFunc({inputs:{a:t,b:i},backend:n}),c=Oi.kernelFunc({inputs:{a:e,b:o},backend:n}),h=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:h,imag:d}}return a}{const t=function(t,e,n){const s=new Float32Array(2*e);for(let a=0;a<e;a++){let i=0,o=0;for(let s=0;s<e;s++){const l=r.Wap.exponent(a*s,e,n),u=r.Wap.getComplexWithIndex(t,s);i+=u.real*l.real-u.imag*l.imag,o+=u.real*l.imag+u.imag*l.real}n&&(i/=e,o/=e),r.Wap.assignToTypedArray(s,i,o,a)}return s}(r.Wap.mergeRealAndImagArrays(i,o),s,e);return r.Wap.splitRealAndImagArrays(t)}var l}function lo(t,e,n,s,a){if(1===n)return{real:t,imag:e};const i=r.Wap.mergeRealAndImagArrays(t,e),o=n/2,l=r.Wap.complexWithEvenIndex(i),u=l.real,c=l.imag,h=[u.length],d=a.makeTensorInfo(h,"float32",u),p=a.makeTensorInfo(h,"float32",c),f=ka({inputs:{real:d,imag:p},backend:a}),m=r.Wap.complexWithOddIndex(i),g=m.real,b=m.imag,y=[g.length],x=a.makeTensorInfo(y,"float32",g),w=a.makeTensorInfo(y,"float32",b),v=ka({inputs:{real:x,imag:w},backend:a}),k=lo(u,c,o,s,a),I=k.real,C=k.imag,$=[I.length],S=a.makeTensorInfo($,"float32",I),N=a.makeTensorInfo($,"float32",C),E=ka({inputs:{real:S,imag:N},backend:a}),R=lo(g,b,o,s,a),A=R.real,D=R.imag,T=[A.length],F=a.makeTensorInfo(T,"float32",A),O=a.makeTensorInfo(T,"float32",D),_=ka({inputs:{real:F,imag:O},backend:a}),M=r.Wap.exponents(n,s),B=[M.real.length],L=a.makeTensorInfo(B,"float32",M.real),z=a.makeTensorInfo(B,"float32",M.imag),W=ka({inputs:{real:L,imag:z},backend:a}),U=Ji({inputs:{a:W,b:_},backend:a}),P=Ta({inputs:{a:E,b:U},backend:a}),V=ro({inputs:{a:E,b:U},backend:a}),G=Ca({inputs:{input:P},backend:a}),H=Ca({inputs:{input:V},backend:a}),j=ci({inputs:{input:P},backend:a}),q=ci({inputs:{input:V},backend:a}),K=di({inputs:[G,H],backend:a,attrs:{axis:0}}),X=di({inputs:[j,q],backend:a,attrs:{axis:0}}),Y=a.data.get(K.dataId).values,J=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),{real:Y,imag:J}}const uo={kernelName:r.vwp,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,a=r.D5U.NA(s.shape),i=s.shape[s.shape.length-1],o=Oa({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=io(o,!1,n),u=Oa({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},co={kernelName:r.deh,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{shape:s,value:a,dtype:i}=n,o=i||r.D5U.D2(a),l=r.D5U.rQ(o,r.D5U.NA(s));return function(t,e,n){t.fill(e)}(l,a),e.makeTensorInfo(s,o,l)}},ho={kernelName:r.Uyb,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,a=n,i=r.D5U.WP(s.dtype,r.D5U.NA(s.shape)),[o,l,u,c]=s.shape,h=a.data.get(s.dataId).values;for(let t=0;t<o;t++){const e=t*u*l*c;for(let t=0;t<l;t++){const n=t*(u*c);for(let s=0;s<u;s++){const r=s*c;for(let a=0;a<c;a++){const l=[o,t,s,a][2],d=Math.round(u-l),p=e+n+r+a;let f=h[p];d>=0&&d<u&&(f=h[e+n+d*c+a]),i[p]=f}}}}return{dataId:a.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},po=ri((t=>Math.floor(t))),fo=la(r.OR,po),mo={kernelName:r.OR,backendName:"cpu",kernelFunc:fo},go={kernelName:r._V0,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p}=s;let f=fi({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const t=f;f=Ta({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=va(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}},bo={kernelName:r.luS,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:r,filter:a,bias:i,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p}=s;let f=$i({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const t=f;f=Ta({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=f;f=va(n,f,p,o),n.disposeIntermediateTensorInfo(t)}return f}},yo={kernelName:r.Qg5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e,a=r.D5U.NA(s.shape),i=s.shape[s.shape.length-1],o=Oa({inputs:{x:s},backend:n,attrs:{shape:[a/i,i]}}),l=io(o,!0,n),u=Oa({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}},xo=oa(r.avt,(t=>Number.isFinite(t)?1:0),"bool"),wo={kernelName:r.avt,backendName:"cpu",kernelFunc:xo},vo=oa(r.iWB,(t=>Math.abs(t)===1/0?1:0),"bool"),ko={kernelName:r.iWB,backendName:"cpu",kernelFunc:vo},Io=oa(r.r7n,(t=>Number.isNaN(t)?1:0),"bool"),Co={kernelName:r.r7n,backendName:"cpu",kernelFunc:Io},$o=ri((t=>Math.log(t))),So=la(r.ZbH,$o),No={kernelName:r.ZbH,backendName:"cpu",kernelFunc:So},Eo=oa(r.kU,(t=>Math.log1p(t))),Ro={kernelName:r.kU,backendName:"cpu",kernelFunc:Eo},Ao=oa(r.VfG,(t=>t?0:1),"bool"),Do={kernelName:r.VfG,backendName:"cpu",kernelFunc:Ao};function To(t,e,n,s){const a=r.D5U.WP(s,r.D5U.NA(n));for(let n=0;n<a.length;++n){const s=n*e;let r=t[s];for(let n=0;n<e;++n){const e=t[s+n];e>r&&(r=e)}a[n]=r}return a}function Fo(t,e,n,s,a){const i=e.length,o=r.D5U.NA(e),l=r.D5U.e3(e),u=r.D5U.e3(a),c=r.D5U.WP(n,r.D5U.NA(a));for(let e=0;e<o;++e){const n=r.D5U.NE(e,i,l),a=new Array(n.length);for(let t=0;t<a.length;t++)a[t]=n[s[t]];c[r.D5U.qy(a,i,u)]=t[e]}return c}const Oo={kernelName:r.YoZ,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:a,keepDims:i}=e,o=n;let l=s.shape;const u=l.length,c=r.D5U.EC(a,l);let h=c;const d=r.Wap.getAxesPermutation(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const t=new Array(u);for(let e=0;e<t.length;e++)t[e]=l[d[e]];p=Fo(p,l,s.dtype,d,t),h=r.Wap.getInnerMostAxes(h.length,u),l=t}ta(s,"max"),r.Wap.assertAxesAreInnerMostDims("max",h,u);const[f,m]=r.Wap.computeOutAndReduceShapes(l,h),g=To(p,r.D5U.NA(m),f,s.dtype),b=o.write(g,f,s.dtype);let y=f;return i&&(y=r.Wap.expandShapeToKeepDim(f,c)),{dataId:b,shape:y,dtype:s.dtype}}},_o={kernelName:r.mTV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;ta(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);let h;if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.cO(c.inShape,c.outShape))h=ha({inputs:{x:a},backend:n});else{const t=n.data.get(a.dataId).values,e=r.D5U.e3(a.shape),s=Za(t,a.shape,a.dtype,e,c,"max");h=n.makeTensorInfo(c.outShape,a.dtype,s.values)}return h}},Mo={kernelName:r.GvW,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:i,output:o}=e,l=i;ta([i,o],"maxPoolBackprop");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=s,p=r.Wap.computePool2DInfo(l.shape,u,c,1,h,d),f=n.data.get(l.dataId).values,m=(0,r.f3b)(p.outShape,l.dtype,ti(f,l.shape,l.dtype,p).values),g=p.strideHeight,b=p.strideWidth,y=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterHeight,v=p.effectiveFilterWidth,k=v-1-p.padInfo.left,I=w-1-p.padInfo.top,C=(0,r.f3b)(l.shape,"float32"),$=n.data.get(a.dataId).values,S=(0,r.f3b)(a.shape,"float32",$);for(let t=0;t<p.batchSize;++t)for(let e=0;e<p.inChannels;++e)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-I,a=s-k;let i=0;for(let n=0;n<w;n+=y){const s=(r+n)/g;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=x){const o=(a+r)/b;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=w*v-1-m.get(t,s,o,e)===n*v+r?1:0;0!==l&&(i+=S.get(t,s,o,e)*l)}}C.set(i,t,n,s,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Bo={kernelName:r.vFR,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=e,u=n;ta(s,"MaxPoolWithArgmax");const c=u.data.get(s.dataId).values,h=r.Wap.computePool2DInfo(s.shape,a,i,[1,1],o),[d,p]=function(t,e,n,s,a){const i=Za(t,0,n,r.D5U.e3(e),a,"max"),o=ti(t,e,n,a,!0,s);return[i.values,o.values]}(c,s.shape,s.dtype,l,h),f=u.write(d,h.outShape,s.dtype),m=u.write(p,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}},Lo={kernelName:r.jQs,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:i,mode:o}=s;ta(a,"mirrorPad");const l=i.map(((t,e)=>t[0]+a.shape[e]+t[1])),u=i.map((t=>t[0])),c=i.map(((t,e)=>t[0]+a.shape[e])),h="reflect"===o?0:1,d=n.data.get(a.dataId).values,p=a.shape.length,f=r.D5U.e3(a.shape),m=r.D5U.NA(l),g=l.length,b=r.D5U.e3(l),y=r.D5U.WP(a.dtype,m);for(let t=0;t<m;t++){let e=r.D5U.NE(t,g,b);for(let t=0;t<g;t++)e[t]<u[t]?e[t]=2*u[t]-e[t]-h:e[t]>=c[t]&&(e[t]=2*(c[t]-1)-e[t]+h);e=e.map(((t,e)=>t-u[e]));const n=r.D5U.qy(e,p,f);y[t]=d[n]}return{dataId:n.write(y,l,a.dtype),shape:l,dtype:a.dtype}}},zo=r.GDt.qP,Wo={kernelName:r.cye,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,padToMaxOutputSize:l}=n,u=e;ta(s,"NonMaxSuppressionPadded");const c=u.data.get(s.dataId).values,h=u.data.get(r.dataId).values,{selectedIndices:d,validOutputs:p}=zo(c,h,a,i,o,l);return[d,p]}},Uo=r.GDt.pA,Po={kernelName:r.W0H,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{boxes:s,scores:r}=t,{maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=n,u=e;ta(s,"NonMaxSuppressionWithScore");const c=u.data.get(s.dataId).values,h=u.data.get(r.dataId).values,d=a,p=i,f=o,m=l,{selectedIndices:g,selectedScores:b}=Uo(c,h,d,p,f,m);return[g,b]}},Vo=pa(((t,e)=>t!==e?1:0)),Go=Ea(r.yQU,Vo,null,"bool"),Ho={kernelName:r.yQU,backendName:"cpu",kernelFunc:Go},jo={kernelName:r.lyA,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{paddings:i,constantValue:o}=s;ta(a,"pad");const l=i.map(((t,e)=>t[0]+a.shape[e]+t[1])),u=i.map((t=>t[0])),c=n.data.get(a.dataId).values,h=r.D5U.NA(a.shape),d=a.shape.length,p=r.D5U.e3(a.shape),f=r.D5U.NA(l),m=l.length,g=r.D5U.e3(l),b=r.D5U.WP(a.dtype,f);0!==o&&b.fill(o);for(let t=0;t<h;t++){const e=r.D5U.NE(t,d,p).map(((t,e)=>t+u[e]));b[r.D5U.qy(e,m,g)]=c[t]}return{dataId:n.write(b,l,a.dtype),shape:l,dtype:a.dtype}}},qo=oa(r.$HU,(t=>1/t)),Ko={kernelName:r.$HU,backendName:"cpu",kernelFunc:qo},Xo={kernelName:r.b9H,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:a,fillValue:i,center:o}=e,l=n,u=r.D5U.WP(s.dtype,r.D5U.NA(s.shape)),[c,h,d,p]=s.shape,[f,m]=r.Wap.getImageCenter(o,h,d),g=Math.sin(a),b=Math.cos(a),y=l.data.get(s.dataId).values;for(let t=0;t<c;t++){const e=t*d*h*p;for(let t=0;t<h;t++){const n=t*(d*p);for(let s=0;s<d;s++){const r=s*p;for(let a=0;a<p;a++){const o=[c,t,s,a],l=o[2],x=o[1];let w=(l-f)*b-(x-m)*g,v=(l-f)*g+(x-m)*b;w=Math.round(w+f),v=Math.round(v+m);let k=i;"number"!=typeof i&&(k=3===a?255:i[a]),w>=0&&w<d&&v>=0&&v<h&&(k=y[e+v*(d*p)+w*p+a]),u[e+n+r+a]=k}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Yo=oa(r.e07,(t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2==0?e:e+1})),Jo={kernelName:r.e07,backendName:"cpu",kernelFunc:Yo},Qo=ri((t=>1/Math.sqrt(t))),Zo=la(r.bV0,Qo),tl={kernelName:r.bV0,backendName:"cpu",kernelFunc:Zo},el=r.Wap.SELU_SCALEALPHA,nl=r.Wap.SELU_SCALE,sl=oa(r.oFR,(t=>t>=0?nl*t:el*(Math.exp(t)-1))),rl={kernelName:r.oFR,backendName:"cpu",kernelFunc:sl},al=oa(r.a5O,(t=>1/(1+Math.exp(-t)))),il={kernelName:r.a5O,backendName:"cpu",kernelFunc:al},ol=oa(r.i5y,(t=>t<0?-1:t>0?1:0)),ll={kernelName:r.i5y,backendName:"cpu",kernelFunc:ol},ul=oa(r.RQH,(t=>Math.sin(t))),cl={kernelName:r.RQH,backendName:"cpu",kernelFunc:ul},hl=oa(r.wYB,(t=>Math.sinh(t))),dl={kernelName:r.wYB,backendName:"cpu",kernelFunc:hl},pl=Math.log(1.1920928955078125e-7)+2,fl=oa(r.MRv,(t=>{const e=t>-pl,n=t<pl,s=Math.exp(t);let r;return r=n?s:e?t:Math.log(1+s),r})),ml={kernelName:r.MRv,backendName:"cpu",kernelFunc:fl};function gl(t){const{inputs:e,attrs:n,backend:s}=t,{x:r}=e,{perm:a}=n;ta(r,"transpose");const i=r.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=r.shape[a[t]];const l=Fo(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const bl={kernelName:r.G3Y,backendName:"cpu",kernelFunc:gl},yl={kernelName:r.TQc,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{blockShape:i,paddings:o}=s;ta([a],"spaceToBatchND");const l=r.D5U.NA(i),u=[[0,0]];u.push(...o);for(let t=1+i.length;t<a.shape.length;++t)u.push([0,0]);const c=jo.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=r.Wap.getReshaped(c.shape,i,l,!1),d=r.Wap.getPermuted(h.length,i.length,!1),p=r.Wap.getReshapedPermuted(c.shape,i,l,!1),f=Oa({inputs:{x:c},backend:n,attrs:{shape:h}}),m=gl({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Oa({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}},xl=oa(r.FKq,(t=>Math.sqrt(t))),wl={kernelName:r.FKq,backendName:"cpu",kernelFunc:xl},vl={kernelName:r.bK0,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,s=e;ta(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let t=0;t<r.length;++t){const e=r[t];a[t]=e*e}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},kl=pa(((t,e)=>{const n=t-e;return n*n})),Il=Ea(r._tC,kl),Cl={kernelName:r._tC,backendName:"cpu",kernelFunc:Il},$l=oa(r.h8e,((t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha})),Sl={kernelName:r.h8e,backendName:"cpu",kernelFunc:$l},Nl=oa(r.sEM,(t=>Math.tan(t))),El={kernelName:r.sEM,backendName:"cpu",kernelFunc:Nl},Rl=oa(r.MIZ,(t=>Math.tanh(t))),Al={kernelName:r.MIZ,backendName:"cpu",kernelFunc:Rl};function Dl(t,e,n,s){const a=r.D5U.EC(e,n)[0],i=[1,n[0],1];for(let t=0;t<a;t++)i[0]*=n[t];i[1]=n[a];for(let t=a+1;t<n.length;t++)i[2]*=n[t];const o={},l=new Int32Array(n[a]),u=new r.YDk(i,s,t),c=[],h=1===i[0]&&1===i[2];for(let e=0;e<n[a];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)t.push(u.get(n,e,s));n=t.join(",")}if(void 0!==o[n])l[e]=o[n];else{const t=Object.keys(o).length;o[n]=t,l[e]=t,c.push(e)}}const d=i.slice();d[1]=Object.keys(o).length;const p=new r.YDk(d,s);c.forEach(((t,e)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)p.set(u.get(n,t,s),n,e,s)}));const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:l}}const Tl={kernelName:r.kpP,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;ta(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=Dl(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},Fl=[La,Wa,Pa,Ga,Fa,ja,Ka,Ya,Qa,ei,ni,Ba,si,Na,oi,ui,Ia,pi,gi,bi,mi,xi,wi,yi,ki,Ci,Si,Ni,Ei,Ri,Di,Ai,Oi,ca,Pi,Hi,Ki,uo,co,ho,mo,go,bo,da,yo,hi,wo,ko,Co,No,Ro,Do,_o,Mo,Bo,Oo,Lo,Qi,Wo,Po,Ho,jo,ga,$a,Ko,ya,wa,_a,Xo,Jo,tl,rl,il,ll,cl,dl,eo,ml,yl,wl,vl,Cl,Sl,ao,El,Al,bl,Tl];for(const t of Fl)(0,r.wCN)(t);const Ol={},_l={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ml(t){if(!(t in Ol)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete Ol[t]}),!1),1===t?e.getContext("webgl",_l)||e.getContext("experimental-webgl",_l):e.getContext("webgl2",_l)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Ol[t]=e}const e=Ol[t];return e.isContextLost()?(delete Ol[t],Ml(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Ol[t])}var Bl,Ll,zl;function Wl(t,e){return[e,t]}function Ul(t){const e=r.D5U.NA(t),n=Math.ceil(e/4);return r.D5U.YP(n)}function Pl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Vl(t,e){const n=t;let s,a,i,o,l,u,c,h,d,p;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(s=t.RGBA,a=t.RGBA,i=t.RGBA,o=n.RGBA,l=t.RGBA,c=4,h=4,d=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function Gl(t,e){const n=e();return(0,r.OBj)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function Hl(t){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function jl(t,e){return tu(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Bl||(Bl={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(Ll||(Ll={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(zl||(zl={}));const ql=/ERROR: [0-9]+:([0-9]+):/g;function Kl(t,e){if(Gl(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Xl(t,e,n,s,r,a,i){const o=t.getAttribLocation(e,n);return-1!==o&&(Gl(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,s))),Gl(t,(()=>t.vertexAttribPointer(o,r,t.FLOAT,!1,a,i))),Gl(t,(()=>t.enableVertexAttribArray(o))),!0)}function Yl(t,e,n,s){Gl(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+t.TEXTURE0;if(s<t.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),Gl(t,(()=>t.activeTexture(t.TEXTURE0+n))),Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,s))),Gl(t,(()=>t.uniform1i(n,s)))}function Jl(t,e,n){Gl(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),Gl(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function Ql(t,e){Gl(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),Gl(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function Zl(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function tu(t,e,n){const s=Gl(t,(()=>e()));if(null==s)throw new Error(n);return s}function eu(t,e=2){return r.D5U.NA(t.slice(0,t.length-e))}function nu(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function su(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[eu(t),...nu(t)]),e}function ru(t){return t%2==0}function au(t,e){if(t=t.slice(-2),e=e.slice(-2),r.D5U.cO(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],s=e.slice(-1)[0];if(n===s)return!0;if(ru(n)&&ru(s)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&ru(t[0])&&ru(e[0])}let iu,ou;function lu(t,e){return null!=t.getExtension(e)}function uu(t){try{if(null!=Ml(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function cu(t){const e=Vl(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,s),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const r=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(s),r}function hu(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const du=(0,r.OBj)();du.registerFlag("HAS_WEBGL",(()=>du.getNumber("WEBGL_VERSION")>0)),du.registerFlag("WEBGL_VERSION",(()=>uu(2)?2:uu(1)?1:0)),du.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),du.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===du.get("WEBGL_VERSION"))),du.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),du.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),du.registerFlag("WEBGL_PACK",(()=>du.getBool("HAS_WEBGL"))),du.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_CLIP",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),du.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_PACK_REDUCE",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_LAZILY_UNPACK",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_CONV_IM2COL",(()=>du.getBool("WEBGL_PACK"))),du.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==iu){const e=Ml(t);iu=e.getParameter(e.MAX_TEXTURE_SIZE)}return iu}(du.getNumber("WEBGL_VERSION")))),du.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==ou){const e=Ml(t);ou=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ou)}(du.getNumber("WEBGL_VERSION")))),du.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=du.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=Ml(t);return e=lu(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:lu(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),du.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>du.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.t())),du.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=Ml(t);if(1===t){if(!lu(e,"OES_texture_float"))return!1}else if(!lu(e,"EXT_color_buffer_float"))return!1;return cu(e)}(du.getNumber("WEBGL_VERSION")))),du.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!du.getBool("WEBGL_FORCE_F16_TEXTURES")&&du.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),du.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=Ml(t);if(1!==t){if(lu(e,"EXT_color_buffer_float"))return cu(e);const t="EXT_color_buffer_half_float";if(lu(e,t)){const n=e.getExtension(t);return function(t,e){const n=Vl(t,e),s=t.createTexture();t.bindTexture(t.TEXTURE_2D,s),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(s),t.deleteFramebuffer(r),a}(e,n)}return!1}return!!lu(e,"OES_texture_float")&&!!lu(e,"WEBGL_color_buffer_float")&&cu(e)}(du.getNumber("WEBGL_VERSION")))),du.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=du.getNumber("WEBGL_VERSION"))&&null!=Ml(t).fenceSync;var t})),du.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>du.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),du.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)}));const{simpleAbsImpl:pu,addImpl:fu,ceilImpl:mu,expImpl:gu,expm1Impl:bu,floorImpl:yu,logImpl:xu,maxImpl:wu,multiplyImpl:vu,rsqrtImpl:ku,sliceImpl:Iu,subImpl:Cu,transposeImpl:$u,uniqueImpl:Su}=s;class Nu{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class Eu{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const s=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}class Ru{constructor(t,e,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===e?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function Au(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function Du(t,e){return 1===e?[t]:Au(t,e)}function Tu(){let t,e,n,s,a,i,o,l,u,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",s="in",a="texture",i="outputColor",o="out vec4 outputColor;",l="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",s="varying",a="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:s,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function Fu(t,e,n="index"){const s=r.D5U.e3(e);return s.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===s.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function Ou(t){const e=r.D5U.e3(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const _u="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Mu}=r.Wap;function Bu(t,e,n,s){const a=[];t.forEach((t=>{const e=r.D5U.NA(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?a.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(a.push(`uniform sampler2D ${t.name};`),a.push(`uniform int offset${t.name};`))}));const i=a.join("\n"),o=t.map((t=>function(t,e,n=!1){let s="";s+=n?zu(t):Lu(t);const a=t.shapeInfo.logicalShape,i=e.logicalShape;return a.length<=i.length&&(s+=n?function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=t.shapeInfo.logicalShape.length,o=e.logicalShape.length,l=Mu(t.shapeInfo.logicalShape,e.logicalShape),u=ju(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((t=>`coords.${d[t+c]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${d[e+c]}`)).join(", ");let f="return outputValue;";const m=1===r.D5U.NA(t.shapeInfo.logicalShape),g=1===r.D5U.NA(e.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const t=i-2,e=i-1;l.indexOf(t)>-1&&l.indexOf(e)>-1?f="return vec4(outputValue.x);":l.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${p});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.texShape,o=t.shapeInfo.texShape,l=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&l===u&&null==t.shapeInfo.flatOffset&&r.D5U.cO(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=ju(u),h=Mu(t.shapeInfo.logicalShape,e.logicalShape),d=u-l;let p;const f=["x","y","z","w","u","v"];p=0===l?"":u<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${f[t+d]} = 0;`)).join("\n");let m="";return m=u<2&&l>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${f[e+d]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${s}(${m});\n    }\n  `}(t,e)),s}(t,e,s))).join("\n"),l=e.texShape,u=Tu(),c=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let h,d,p=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Wu}\n    ${Uu}\n    ${Pu}\n  `}(u);return e.isPacked?(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(r.D5U.cO(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),r=s*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),r=s*Math.ceil(t[t.length-2]/2);let a=r,i="",o="b, r, c";for(let e=2;e<t.length-1;e++)a*=t[t.length-e-1],i=`\n      int b${e} = index / ${a};\n      index -= b${e} * ${a};\n    `+i,o=`b${e}, `+o;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${t.length}(${o});\n    }\n  `}(t,e)}}(e.logicalShape,l),d=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(u)):(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return r.D5U.cO(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=Fu(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=Fu(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=Fu(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=Fu(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,l),d=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),s&&(p+=Vu),[p,c,d,i,h,o,n].join("\n")}function Lu(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[s,r]=t.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[a,i]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${Gu(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Hu(t)}\n      }\n    `;const s=t.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const i=Gu(e);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape;if(null!=a&&r.D5U.cO(e,a)){const t=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=r.D5U.bp(e),l=i;if(l.length<e.length){const e=["row","col"];return`\n      ${Lu(qu(t,l))}\n      float ${s}(int row, int col) {\n        return ${s}(${Ku(e,o)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Hu(t)}\n      }\n    `;const u=a[0],c=a[1],h=Gu(n);return 1===c?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[1]*e[2],i=e[2],{newShape:o,keptDims:l}=r.D5U.bp(e),u=o;if(u.length<e.length){const e=["row","col","depth"];return`\n        ${Lu(qu(t,u))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${Ku(e,l)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${Hu(t)}\n      }\n    `;const c=t.shapeInfo.texShape,h=c[0],d=c[1],p=t.shapeInfo.flatOffset;if(d===a&&null==p)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===i&&null==p)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${Gu(n)};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[3],i=e[2]*a,o=e[1]*i,{newShape:l,keptDims:u}=r.D5U.bp(e);if(l.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Lu(qu(t,l))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${Ku(e,u)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${Hu(t)}\n      }\n    `;const c=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${Gu(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e[4],i=e[3]*a,o=e[2]*i,l=e[1]*o,{newShape:u,keptDims:c}=r.D5U.bp(e);if(u.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Lu(qu(t,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${Ku(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${Hu(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${Gu(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.D5U.bp(e);if(a.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Lu(qu(t,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${Ku(e,i)});\n      }\n    `}const o=e[5],l=e[4]*o,u=e[3]*l,c=e[2]*u,h=e[1]*c;if(t.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${Hu(t)}\n      }\n    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===h&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==d)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${Gu(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function zu(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${Tu().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),s=t.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=Tu();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,i=a[0],o=a[1],l=Tu();if(null!=a&&r.D5U.cO(e,a))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===e[0]){const n=[1,2],r=["b","row","col"];return`\n        ${zu(qu(t,e.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${Ku(r,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(e[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(e[1]/2)}, ${l}, b, row, col);\n      return ${Tu().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,s=t.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(e[n-1]/2);let c=u*Math.ceil(e[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,c*=e[n-t-1],d=`b${t} * ${c} + `+d;return`\n    vec4 ${r}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${Tu().texture2D}(${s}, uv);\n    }\n  `}(t)}}const Wu="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Uu="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Pu="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Vu="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Gu(t){return`offset${t}`}function Hu(t){const e=t.name,n=r.D5U.NA(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function ju(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function qu(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Ku(t,e){return e.map((e=>t[e])).join(", ")}class Xu{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.hu(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=t[t.length-1],i=Math.ceil(a/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=ju(l),c=Du("coords",l);let h,d;if(1===i){d=l+1;const t=ju(d);h=`\n        ${t} sourceLocR = ${t}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${t} sourceLocG = ${t}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${t} sourceLocA = ${t}(${c.join()}, 0);\n        --${c[l-1]};\n        ${t} sourceLocB = ${t}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map((t=>"int "+t)),g=Du("sourceLocR",d-1).concat("inIdx.r"),b=Du("sourceLocG",d-1).concat("inIdx.g"),y=Du("sourceLocB",d-1).concat("inIdx.b"),x=Du("sourceLocA",d-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class Yu{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterHeight,l=t.effectiveFilterWidth,u=o-1-t.padInfo.top,c=l-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ju{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=c-1-t.padInfo.front,f=h-1-t.padInfo.top,m=d-1-t.padInfo.left,g=1/(e*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Qu="return (a < 0.) ? b * a : a;";class Zu{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const tc="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class ec{constructor(t,e,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n);const a=this.outputShape.length;let i="";if(s)if(0===a||1===r.D5U.NA(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${ju(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Du("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${t[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${t[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}class nc{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class sc{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class rc{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class ac{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ic{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a="channelsLast"===t.dataFormat,i=e-1-t.padInfo.top,o=n-1-t.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oc{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${r};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lc{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,s=t.filterWidth,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.front,l=n-1-t.padInfo.top,u=s-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uc{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,s=t.padInfo.top,r=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${s};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cc{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,s=t.strideHeight,r=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hc{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,d=4*Math.floor(t.inChannels/4),p=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,b=f?3:1;let y="",x="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${r}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${c}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${u};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===p}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===p}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===p}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class dc{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,s=t.padInfo.left,r=t.strideDepth,a=t.strideHeight,i=t.strideWidth,o=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,d=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${e}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class pc{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const r=t.inHeight,a=t.inWidth,i=t.padInfo.top,o=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,h=t.dilationWidth,d=t.filterHeight,p=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${l}, ${u});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${r}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${a}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${g}\n        setOutput(result);\n      }\n    `}}class fc{constructor(t,e=!1,n=null,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const a=t.inHeight,i=t.inWidth,o=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,h=t.dilationHeight,d=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<p;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*d};\n        `,1===c){if(n<f&&(g+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=l%2==0?r.D5U.nY(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(g+=`\n                  xCOffset = xC + ${l%2} + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(g+=`\n                xCOffset = xC + 1 - ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${c};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${c};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<p;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let b="",y="";n&&(b=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${y}\n        setOutput(result);\n      }\n    `}}class mc{constructor(t,e,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=t,[u]=e,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class gc{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const s=t.length,r=e?"0.0":`getX(${bc(s,"coords")})`,a=t[t.length-1];let i="",o="";e?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${ju(s)} coords = getOutputCoords();\n        int end = ${yc(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${yc(s,"coords")} = idx;\n          val += getX(${bc(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function bc(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function yc(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class xc{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Bl.DENSE;const e=Ul(t),n=Tu();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Fu(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class wc{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Bl.DENSE;const e=Ul(t),n=Tu();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${Fu(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class vc{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class kc{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class Ic{constructor(t){this.variableNames=["A"],this.outTexUsage=Ll.DOWNLOAD;const e=Tu();this.outputShape=t,this.userCode=`\n      ${_u}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class Cc{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ll.DOWNLOAD;const e=Tu();this.outputShape=t,this.userCode=`\n      ${_u}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class $c{constructor(t,e,n=!1){this.variableNames=["A"];const s=Tu(),[r,a]=e;this.outputShape=t;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Ou(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Sc{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=Tu(),[r,a]=e;this.outputShape=t;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const o=2*e+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Ou(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}class Nc{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Ec{constructor(t,e,n){this.variableNames=["A","indices"];const s=t.slice();s[n]=e,this.outputShape=s,this.rank=s.length;const r=ju(this.rank),a=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<t.length;n++)n===e?r.push(`int(getIndices(${s[n]}))`):r.push(`${s[n]}`);return r.join()}(t,n);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}class Rc{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const s=ju(e.length),r=ju(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Ac(t,e,n,s,a,i){!function(t,e){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const o=function(t){return tu(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),l=t.TEXTURE_2D;return Gl(t,(()=>t.bindTexture(l,o))),Gl(t,(()=>t.texParameteri(l,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),Gl(t,(()=>t.texParameteri(l,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),Gl(t,(()=>t.texParameteri(l,t.TEXTURE_MIN_FILTER,t.NEAREST))),Gl(t,(()=>t.texParameteri(l,t.TEXTURE_MAG_FILTER,t.NEAREST))),Gl(t,(()=>t.texImage2D(l,0,s,e,n,0,a,i,null))),Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),o}function Dc(t){return t.internalFormatFloat}function Tc(t){return t.internalFormatHalfFloat}function Fc(t){return t.downloadTextureFormat}function Oc(t){return t.internalFormatPackedFloat}function _c(t){return t.internalFormatPackedHalfFloat}class Mc{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Ol[t]=e}(e,t)):this.gl=Ml(e);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=jl(this.gl,t),lu(this.gl,e))this.textureHalfFloatExtension=jl(this.gl,e);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),lu(this.gl,s))this.colorBufferHalfFloatExtension=jl(this.gl,s);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",lu(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!lu(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(t){return function(t,e){const n=tu(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Gl(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Gl(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=tu(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return Gl(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),Gl(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return tu(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Vl(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Gl(t,(()=>t.finish())),Gl(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),Gl(t,(()=>t.deleteFramebuffer(this.framebuffer))),Gl(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),Gl(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),Gl(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=Wl(e,n);return Ac(t,r,a,Dc(s),s.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=Wl(e,n);return Ac(t,r,a,Tc(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=Wl(e,n);return Ac(t,r,a,Fc(s),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?Gl(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):Gl(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,s){this.throwIfDisposed(),function(t,e,n,s,r,a){let i,o,l;Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=t.UNSIGNED_BYTE,l=t.RGBA):(i=new Float32Array(n*s*4),o=t.FLOAT,l=a.internalFormatPackedFloat),i.set(r),Gl(t,(()=>t.texImage2D(t.TEXTURE_2D,0,l,n,s,0,t.RGBA,o,i))),Gl(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=Pl(e,n);return Ac(t,r,a,_c(s),t.RGBA,s.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,s){const[r,a]=Pl(e,n);return Ac(t,r,a,Oc(s),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Ql(this.gl,this.framebuffer),this.outputTexture=null),Gl(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,s){const[r,a]=Wl(e,n),i=new Uint8Array(e*n*4);return Gl(t,(()=>t.readPixels(0,0,r,a,s.downloadTextureFormat,t.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,s,r,a){return function(t,e,n,s,r,a,i,o){const l=t,u=new Float32Array(function(t,e){const[n,s]=Pl(t,e);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,t,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const s=t,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const s=function(t,e,n,s){const r=t.createBuffer();Gl(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,r)));const a=16*e*n;return Gl(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,a,t.STREAM_READ))),Gl(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),Gl(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),r}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=s.clientWaitSync(r,0,0);return t===s.ALREADY_SIGNALED||t===s.CONDITION_SATISFIED},e=r}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const s=new Float32Array(e*n*4);return Gl(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,s))),s}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=tu(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Gl(t,(()=>t.shaderSource(n,e))),Gl(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=ql.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const s=+n[1],a=t.split("\n"),i=a.length.toString().length+2,o=a.map(((t,e)=>r.D5U.oj((e+1).toString(),i)+t));let l=0;for(let t=0;t<o.length;t++)l=Math.max(o[t].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${r.D5U.oj(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),s=function(t){const e=Tu();return function(t,e){const n=tu(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Gl(t,(()=>t.shaderSource(n,e))),Gl(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),a=function(t){return tu(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return Gl(e,(()=>e.attachShader(a,s))),Gl(e,(()=>e.attachShader(a,n))),function(t,e){if(Gl(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Kl(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return Gl(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),Xl(t,e,"clipSpacePos",n,3,20,0)&&Xl(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Gl(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Kl(this.gl,this.program),Gl(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return tu(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Gl(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Yl(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[s,r]=Pl(e,n);this.setOutputMatrixTextureDriver(t,s,r)}setOutputMatrixWriteRegion(t,e,n,s){this.setOutputMatrixWriteRegionDriver(n,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Kl(this.gl,this.program),Zl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Gl(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Gl(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jl(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await r.D5U.WD((()=>this.disposed||this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||r.D5U.WD((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Jl(this.gl,t,this.framebuffer),this.debug&&Zl(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Jl(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zl(this.gl)):Ql(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const s=this.gl;Jl(s,t,this.framebuffer),this.debug&&Zl(s),this.outputTexture=t,Gl(s,(()=>s.viewport(0,0,e,n))),Gl(s,(()=>s.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,s){this.throwIfDisposed(),Gl(this.gl,(()=>this.gl.scissor(t,e,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Bc(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const s=t.logicalShape,a=e[n],i=a.shape;if(!r.D5U.cO(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&a.isUniform)return;const o=t.texShape,l=a.isUniform?null:a.texData.texShape;if(!r.D5U.cO(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}class Lc{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=r*s,m=Tu(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${e[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${e[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class zc{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Wc{constructor(t,e,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Uc{constructor(t,e,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=e,i=t[3]-1;let o;this.outputShape=t;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}class Pc{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,s=t.dilationHeight,r=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=r-1-t.padInfo.top,o=a-1-t.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Vc{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,s=t.strideWidth,r=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,o=t.effectiveFilterDepth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=o-1-t.padInfo.front,h=l-1-t.padInfo.top,d=u-1-t.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gc{constructor(t,e,n,s=!1,r=!1,a=!1,i=null,o=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=s?t[1]:t[2],u=Math.ceil(l/2),c=s?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights");let b="rc.x",y="rc.x";t[0]<e[0]?b=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(y=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${u}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${u}; i++) {\n          int batchA = ${b};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${p[0]});\n          result += (${d[1]} * ${p[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class Hc{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class jc{constructor(t,e,n,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class qc{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Du("rc",e),s=ju(e),r=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let s="";for(let r=t-2;r<t;r++)s+=`${n[r]} >= ${e[r]}`,r<t-1&&(s+="||");return s}(e,t,n),a=function(t,e,n,s){if(1===t)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){const n=t.length,s=function(t,e){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<t;n++)a=`${e[e.length-1-n]},`+a;n.push(a)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Kc{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=ju(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xc{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=ju(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=Du("rc",s),l=Du("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let t=0,e=1===s?2:4;t<e;t++)p+=`\n        ${h[t]}\n        if (${d}) {\n          result[${t}] = float(${n});\n        } else {\n          ${r} source = rc - start;\n          result[${t}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}class Yc{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideHeight,o=t.strideWidth,l=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(y="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Jc{constructor(t,e,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const a=t.filterWidth,i=t.strideDepth,o=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,h=t.dilationWidth,d=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}class Qc{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=t;this.outputShape=[s,a];let i="0.0",o="";"prod"===e?i="1.0":"min"===e?(i="1.0 / 1e-20",o="min"):"max"===e&&(i="-1.0 / 1e-20",o="max");let l=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?l="sumValue":"prod"===e?l="prodValue":"all"===e?l="allValue":"any"===e&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===e?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}class Zc{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${Fu(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Ou(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class th{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,a,i]=t.shape,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class eh{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,a,i,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?a-1:a,s&&n>1?i-1:i],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class nh{constructor(t,e,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[r,a,i,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?a-1:a,s&&n>1?i-1:i],u=[s&&e>1?e-1:e,s&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]},\n          ${l[1]/u[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${o-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class sh{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,s,r]=e.shape,[,a,i]=t.shape,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class rh{constructor(t,e,n,s){this.variableNames=["A"],this.outputShape=[];const[r,a,i,o]=t;this.outputShape=[r,e,n,o];const l=[s&&e>1?a-1:a,s&&n>1?i-1:i],u=[s&&e>1?e-1:e,s&&n>1?n-1:n],c=s?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/u[0]},\n          ${l[1]/u[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${c})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class ah{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map(((n,s)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=ju(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class ih{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const s=Du("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=ju(n);function o(n){const s=t.map(((s,r)=>function(n,s){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return o(t)}(s.slice())};\n          if(${r}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",o(t)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",o(t)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class oh{constructor(t,e,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=ju(r.length),l=ju(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=e>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class lh{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,s=t.batchSize,r=t.inSize,a=t.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class uh{constructor(t,e,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<e.length;s++)i.push(`${n[s]}`),s<t&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=ju(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}class ch{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ju(this.rank),n=`uniform int start[${this.rank}];`,s=function(t){if(1===t)return"sourceLoc";if(t<=6)return hh.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let r;r=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${hh[e]} = start[${e}] + coords.${hh[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const hh=["x","y","z","w","u","v"];class dh{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=ju(this.rank),n=Du("coords",this.rank),s=Du("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${s[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class ph{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=ju(n.length),a=ju(n.length);let i="";if(1===s)i="coords * strides + begin";else{let t=0;i=n.map(((e,s)=>(t++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${t-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${t});\n      ${r} strides = ${r}(${e});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class fh{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const s=gh(e,n),r=bh(t,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=mh(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const t=this.freeTextures[r].shift();return this.usedTextures[r].push(t),t}let i;return s===zl.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===zl.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===zl.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===zl.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===zl.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(t,e,n,s){if(null==this.freeTextures)return;const a=gh(n,s),i=bh(e,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const o=mh(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),l=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(t);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function mh(t,e,n,s,r){const a=function(t,e){switch(t){case zl.PACKED_2X2_FLOAT32:return Oc(e);case zl.PACKED_2X2_FLOAT16:return _c(e);case zl.UNPACKED_FLOAT32:return Dc(e);case zl.UNPACKED_FLOAT16:return Tc(e);case zl.PACKED_4X1_UNSIGNED_BYTE:return Fc(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,s);let i;if(r){const[e,n]=Pl(t[0],t[1]);i=e*n}else{const[e,n]=Wl(t[0],t[1]);i=e*n}return i*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,a)}function gh(t,e){if(t===Ll.UPLOAD)return zl.PACKED_2X2_FLOAT32;if(t===Ll.RENDER||null==t)return function(t){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?zl.PACKED_2X2_FLOAT32:zl.UNPACKED_FLOAT32:t?zl.PACKED_2X2_FLOAT16:zl.UNPACKED_FLOAT16}(e);if(t===Ll.DOWNLOAD||t===Ll.PIXELS)return zl.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function bh(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class yh{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[s]*e[s];this.outputShape=n,this.rank=n.length;const s=ju(this.rank),r=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let e=0;e<t.length;e++)s.push(`imod(${n[e]}, ${t[e]})`);return s.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}class xh{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const wh="return abs(x);",vh="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",kh="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Ih="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ch=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,$h="return -x;",Sh="return ceil(x);",Nh="return floor(x);",Eh="return exp(x);",Rh="return exp(x) - 1.0;",Ah=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Dh="return x;",Th="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fh="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Oh="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class _h{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Mh{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Du("rc",e),s=ju(e),r=function(t,e){if(1===t)return"rc";let n="";for(let s=0;s<t;s++)n+=e[s],s<t-1&&(n+=",");return n}(e,n),a=n.slice(-2),i=e<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const{segment_util:Bh}=r.Wap,Lh=r.GDt.Vl,zh=r.GDt.Gg,Wh=r.GDt.vN,Uh=r.GDt.ZA,Ph={};function Vh(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?Th:vh;if("elu"===t)return e?Oh:Ih;if("relu6"===t)return e?Fh:kh;if("prelu"===t)return e?tc:Qu;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Gh extends r.Zuw{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=Ml((0,r.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=(0,r.OBj)().getNumber("WEBGL_VERSION"))in Ph||(Ph[e]={}),Ph[e]),this.gpgpu=new Mc(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new fh(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:e,dtype:n,values:t,usage:Ll.UPLOAD,refCount:1,complexParentRefCount:0}),s}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,s){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:s,values:e,usage:Ll.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=e;if(null!=i){let e;e=l?new _h(o,Dh):new xh(o,Dh);const n=this.runWebGLProgram(e,[{dataId:t,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.D5U.zO()),"complex64"===s){const t=this.readSync(a.real.dataId),e=this.readSync(a.imag.dataId);h=r.Wap.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=r.D5U.zO()-c),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=e;if(null!=a){let e;e=l?new _h(s,Dh):new xh(s,Dh);const n=this.runWebGLProgram(e,[{dataId:t,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(e.texture,...Ul(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const t=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),e=t[0],n=t[1];c=r.Wap.mergeRealAndImagArrays(e,n)}else if(null==h)c=this.getValuesFromTexture(t);else{const t=r.D5U.NA(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(t,c),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!Hl(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:s}=this.texData.get(t),a=r.D5U.NA(e);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),s=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...Ul(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),r}const i=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,o=i?su(e):e,l=i?new Cc(o):new Ic(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:t}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}async time(t){const e=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,t();const a=r.D5U.xH(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),i=r.D5U.xH(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(a);o.kernelMs=r.D5U.Sm(t),o.getExtraProfileInfo=()=>t.map(((t,e)=>({name:i[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.zO(),endMs:null}}endTimer(t){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=r.D5U.zO(),t)}async getQueryTime(t){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(t),o=i&&i.origDataId||t,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(e,s,r,a)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,r.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&r.D5U.NA(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const s=Iu(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,s)}if(0===r.D5U.NA(n))return(0,r.XeE)([],n,t.dtype);const{isPacked:s}=this.texData.get(t.dataId),a=r.kuN.isSliceContinous(t.shape,e,n);if(s||!a){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dh(n):new ch(n),a=s.getCustomSetupFunc(e);return this.compileAndRun(s,[t],null,a)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const s=this.texData.get(t.dataId),a=this.makeOutput(n,t.dtype),i=this.texData.get(a.dataId);Object.assign(i,s),i.shape=n,i.dtype=t.dtype;let o=r.kuN.computeFlatOffset(e,t.strides);s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||t.dataId};const l=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,l+1),a}stridedSlice(t,e,n,s){const a=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,s)));if(a)return a;const i=r.kuN.computeOutShape(e,n,s);if(i.some((t=>0===t)))return(0,r.XeE)([],i);const o=new ph(e,s,i);return this.compileAndRun(o,[t])}reverse(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ih(t.shape,e):new ah(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,$h,t.dtype);const n=new xh(t.shape,$h);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,s){const a=n?t.shape[2]:t.shape[1],i=s?e.shape[1]:e.shape[2],o=n?t.shape[1]:t.shape[2],l=Math.max(t.shape[0],e.shape[0]);if((1===a||1===i)&&o>1e3){n&&(t=(0,r.p4s)(t,[0,2,1])),s&&(e=(0,r.p4s)(e,[0,2,1]));const a=1===i?t:t.as3D(l,o,1),u=1===i?2:1,c=1===i?e.as3D(l,1,o):e;return r.dC7(a,c).sum(u,!0)}const u=(0,r.x8V)(t.dtype,e.dtype),c=new Gc(t.shape,e.shape,[l,a,i],n,s);return this.compileAndRun(c,[t,e],u)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:s,bias:a,activation:i,preluActivationWeights:o}){const l=n?t.shape[2]:t.shape[1],u=s?e.shape[1]:e.shape[2],c=Math.max(t.shape[0],e.shape[0]),h=(0,r.x8V)(t.dtype,e.dtype),d=null!=a,p=null!=o,f=i?Vh(i,!0):null,m=new Gc(t.shape,e.shape,[c,l,u],n,s,d,f,p),g=[t,e];return a&&g.push(a),o&&g.push(o),this.compileAndRun(m,g,h)}localResponseNormalization4D(t,e,n,s,a){const i=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Uc(t.shape,e,n,s,a):new zc(t.shape,e,n,s,a);return this.compileAndRun(i,[t])}LRNGrad(t,e,n,s,r,a,i){const o=new Wc(e.shape,s,r,a,i);return this.compileAndRun(o,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>r.D5U.v5(t))),s=(0,r.f3b)(t.shape,t.dtype,n);return zh(s,e)}const n=new yh(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xc(t.shape,e,n):new Kc(t.shape,e,n);return this.compileAndRun(s,[t])}gather(t,e,n){const s=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(s)return s;const r=new Ec(t.shape,e.size,n);return this.compileAndRun(r,[t,e])}batchToSpaceND(t,e,n){r.D5U.hu(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),a=r.Wap.getReshaped(t.shape,e,s),i=r.Wap.getPermuted(a.length,e.length),o=r.Wap.getReshapedPermuted(t.shape,e,s),l=r.Wap.getSliceBeginCoords(n,e.length),u=r.Wap.getSliceSize(o,n,e.length);return(0,r.p4s)(t.reshape(a),i).reshape(o).slice(l,u)}spaceToBatchND(t,e,n){r.D5U.hu(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const s=e.reduce(((t,e)=>t*e)),a=[[0,0]];a.push(...n);for(let n=1+e.length;n<t.shape.length;++n)a.push([0,0]);const i=t.pad(a),o=r.Wap.getReshaped(i.shape,e,s,!1),l=r.Wap.getPermuted(o.length,e.length,!1),u=r.Wap.getReshapedPermuted(i.shape,e,s,!1),c=(0,r.p4s)(i.reshape(o),l);return(0,r.XLQ)(c,u)}reduce(t,e,n){const s=t.shape[0],a=t.shape[1],i=r.Wap.computeOptimalWindowSize(a),o=Math.ceil(a/i),l=new Qc({windowSize:i,inSize:a,batchSize:s,outSize:o},e),u=this.compileAndRun(l,[t],n);return 1===u.shape[1]?u:this.reduce(u,e,n)}argReduce(t,e,n=null){let s=t.shape[0],a=t.shape[1];null!=n&&(s=n.shape[0],a=n.shape[1]);const i=r.Wap.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new Ru(o,e,null==n),u=[t];null!=n&&u.push(n);const c=this.compileAndRun(l,u,"int32");return 1===c.shape[1]?c:this.argReduce(t,e,c)}argReducePacked(t,e,n=null){const s=null!=n?n.shape:t.shape,a=s[s.length-1],i=r.Wap.computeOptimalWindowSize(a),o=new Xu(s,i,e,null==n),l=null==n?[t]:[t,n],u=this.compileAndRun(o,l,"int32");return u.rank===t.rank?this.argReducePacked(t,e,u):u}sum(t,e){r.Wap.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.D5U.NA(s),i=t.as2D(-1,a),o=r.z4k(t.dtype);return this.reduce(i,"sum",o).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[s,a]=r.Wap.computeOutAndReduceShapes(t.shape,e),i=r.D5U.NA(a),o=t.as2D(-1,i),l=r.z4k(t.dtype);return this.reduce(o,"prod",l).reshape(s)}unsortedSegmentSum(t,e,n){let s=0;const a=r.Wap.getAxesPermutation([s],t.rank);let i=t;null!=a&&(i=(0,r.p4s)(t,a),s=r.Wap.getInnerMostAxes(1,t.rank)[0]);const o=Bh.computeOutShape(i.shape,s,n),l=r.D5U.NA([i.shape[s]]),u=i.as2D(-1,l),c=r.z4k(t.dtype);let h=this.segOpCompute(u,"unsortedSegmentSum",e,c,n).reshape(o);return null!=a&&(h=(0,r.p4s)(h,r.Wap.getUndoAxesPermutation(a))),h}segOpCompute(t,e,n,s,a){const i=t.shape[0],o=t.shape[1],l=Bh.segOpComputeOptimalWindowSize(o,a),u=new lh({windowSize:l,inSize:o,batchSize:i,numSegments:a},e),c=this.compileAndRun(u,[t,n],s);return c.shape[1]===a?c:(n=(0,r.w6H)(0,a).tile([o/l]),this.segOpCompute(c,e,n,s,a))}argMinMaxReduce(t,e,n){const s=[e];if(r.Wap.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,t.rank),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,a]=r.Wap.computeOutAndReduceShapes(t.shape,s),i=r.D5U.NA(a),o=t.as2D(-1,i);return this.argReduce(o,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,s){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const r=t.shape[e];let a=t;for(let e=0;e<=Math.ceil(Math.log2(r))-1;e++){const n=new gc(t.shape,!1,s),r=n.getCustomSetupFunc(e),i=a;a=this.compileAndRun(n,[a],a.dtype,r),i.dispose()}if(n){const e=new gc(t.shape,n,s),r=a;a=this.compileAndRun(e,[a]),r.dispose()}return a}equal(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Zu("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const s=new Zu("return float(a < b);",t.shape,e.shape);return this.compileAndRun(s,[t,e],"bool")}lessEqual(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Zu("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const s=new Zu("return float(a > b);",t.shape,e.shape);return this.compileAndRun(s,[t,e],"bool")}greaterEqual(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Zu("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new xh(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Zu("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Zu("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const s=new uh(t.rank,e.shape,e.rank);return this.compileAndRun(s,[t,e,n],(0,r.x8V)(e.dtype,n.dtype))}where(t){r.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Uh(t.shape,e)}topk(t,e,n){const s=t.dataSync();return Wh(s,t.shape,t.dtype,e,n)}min(t,e){r.Wap.assertAxesAreInnerMostDims("min",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.D5U.NA(s),i=t.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const s=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zu("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(s,[t,e])}mod(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zu("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const s=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zu("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(s,[t,e])}all(t,e){r.Wap.assertAxesAreInnerMostDims("all",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.D5U.NA(s),i=t.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(n)}any(t,e){r.Wap.assertAxesAreInnerMostDims("any",e,t.rank);const[n,s]=r.Wap.computeOutAndReduceShapes(t.shape,e),a=r.D5U.NA(s),i=t.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(n)}floorDiv(t,e){const n="int32";if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const s=new Zu("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(s,[t,e],n)}packedUnaryOp(t,e,n){const s=new _h(t.shape,e);return this.compileAndRun(s,[t],n)}packedBinaryOp(t,e,n,s,r=!1){const a=new ec(n,t.shape,e.shape,r);return this.compileAndRun(a,[t,e],s)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),s=this.addN(t.slice(e));return this.addN([n,s])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>(0,r.x8V)(t,e))),n=t.map((t=>t.shape)),s=(0,r.OBj)().getBool("WEBGL_PACK")?new Eu(t[0].shape,n):new Nu(t[0].shape,n);return this.compileAndRun(s,t,e)}pow(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zu("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),s=(0,r.x8V)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],s)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=mu(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Sh,t.dtype);const e=new xh(t.shape,Sh);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=yu(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Nh,t.dtype);const e=new xh(t.shape,Nh);return this.compileAndRun(e,[t])}sign(t){const e=new xh(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new xh(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new xh(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new xh(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new xh(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=gu(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Eh,t.dtype);const e=new xh(t.shape,Eh);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=bu(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Rh,t.dtype);const e=new xh(t.shape,Rh);return this.compileAndRun(e,[t])}softmax(t,e){const n=r.D5U.EC([e],t.shape),s=(0,r.Fp7)(t,n),a=r.Wap.expandShapeToKeepDim(s.shape,n),i=r.luU(t,s.reshape(a)),o=this.exp(i),l=this.sum(o,n).reshape(a);return(0,r.hiC)(o,l)}log(t){if(this.shouldExecuteOnCPU([t])){const e=xu(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new xh(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new xh(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new xh(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=ku(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new xh(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new xh(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=(0,r.OBj)().getBool("WEBGL_PACK")?new _h(t.shape,Th):new xh(t.shape,vh),this.compileAndRun(e,[t])}relu6(t){let e;return e=(0,r.OBj)().getBool("WEBGL_PACK")?new _h(t.shape,Fh):new xh(t.shape,kh),this.compileAndRun(e,[t])}prelu(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec(tc,t.shape,e.shape):new Zu(Qu,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Oh,t.dtype);const e=new xh(t.shape,Ih);return this.compileAndRun(e,[t])}eluDer(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Zu("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new xh(t.shape,Ch);return this.compileAndRun(e,[t])}clip(t,e,n){let s;s=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new sc(t.shape):new nc(t.shape);const a=s.getCustomSetupFunc(e,n);return this.compileAndRun(s,[t],null,a)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=pu(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,wh,t.dtype);const e=new xh(t.shape,wh);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new rc(t.shape),s=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,s)}sigmoid(t){const e=new xh(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new xh(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new xh(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new xh(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new xh(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new xh(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new xh(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new xh(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new xh(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new xh(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new xh(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new xh(t.shape,Ah);return this.compileAndRun(e,[t])}step(t,e){const n=new xh(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,s,a,i){const o=t.shape,l=this.texData.get(t.dataId),u=n.inChannels,c=o[0]*o[1]*o[2],h=n.outChannels,d="channelsLast"===n.dataFormat,p=(1===c||1===h)&&u>1e3,f=o[2]%2!=0&&!!l.isPacked;if(p||!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")||!(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const l=d?o[0]*o[1]*o[2]:o[0]*o[2]*o[3],u=(0,r.XLQ)(t,[1,l,n.inChannels]),c=(0,r.XLQ)(e,[1,n.inChannels,n.outChannels]),h=this.fusedBatchMatMul({a:u,b:c,transposeA:!1,transposeB:!1,bias:s,activation:a,preluActivationWeights:i});return(0,r.XLQ)(h,n.outShape)}const m=d?o[0]*o[1]*(o[2]+1):o[0]*o[2]*(o[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},b=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.D5U.hu(au(l.shape,g.shape),(()=>`packed reshape ${l.shape} to ${g.shape} isn't free`));const y=(0,r.XLQ)(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:y,transposeA:!1,transposeB:!1,bias:s,activation:a,preluActivationWeights:i}),w=this.texData.get(x.dataId);return r.D5U.hu(w.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=b,w.shape=n.outShape,(0,r.SRH)().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,s,r,a){const{filterWidth:i,filterHeight:o,inChannels:l,outWidth:u,outHeight:c,dataFormat:h}=n,d="channelsLast"===h,p=i*o*l,f=c*u,m=[p,f],g=t.squeeze([0]),b=e.reshape([1,p,-1]),y=new Lc(m,g.shape,n),x=this.compileAndRun(y,[g]).reshape([1,m[0],m[1]]),w=null!=s,v=null!=a,k=r?Vh(r,!0):null,I=new Gc(x.shape,b.shape,[1,f,n.outChannels],!0,!1,w,k,v),C=[x,b];s&&C.push(s),v&&C.push(a);const $=this.compileAndRun(I,C);return d?$.reshape([1,c,u,n.outChannels]):$.reshape([1,n.outChannels,c,u])}fusedConv2d({input:t,filter:e,convInfo:n,bias:s,activation:a,preluActivationWeights:i}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,s,a,i);if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,s,a,i);const o=null!=s,l=null!=i,u=a?Vh(a,!1):null,c=new hc(n,o,u,l),h=[t,e];return s&&h.push(s),i&&h.push(i),this.compileAndRun(c,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const s=new hc(n);return this.compileAndRun(s,[t,e])}conv2dDerInput(t,e,n){const s=new ic(n);return this.compileAndRun(s,[t,e])}conv2dDerFilter(t,e,n){const s=new ac(n);return this.compileAndRun(s,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:s,activation:a,preluActivationWeights:i}){const o=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,l=a?Vh(a,o):null,u=[t,e],c=null!=s,h=null!=i;let d;return c&&u.push(s),h&&u.push(i),o?(d=new fc(n,c,l,h),this.compileAndRun(d,u)):(d=new pc(n,c,l,h),this.compileAndRun(d,u))}depthwiseConv2D(t,e,n){let s;return(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(s=new fc(n),this.compileAndRun(s,[t,e])):(s=new pc(n),this.compileAndRun(s,[t,e]))}depthwiseConv2DDerInput(t,e,n){const s=new cc(n);return this.compileAndRun(s,[t,e])}depthwiseConv2DDerFilter(t,e,n){const s=new uc(n);return this.compileAndRun(s,[t,e])}conv3d(t,e,n){const s=new dc(n);return this.compileAndRun(s,[t,e])}conv3dDerInput(t,e,n){const s=new lc(n);return this.compileAndRun(s,[t,e])}conv3dDerFilter(t,e,n){const s=new oc(n);return this.compileAndRun(s,[t,e])}unstack(t,e){const n=t.shape[e],s=new Array(t.rank-1);let r=0;for(let n=0;n<t.rank;n++)n!==e&&(s[r++]=t.shape[n]);const a=new Array(t.rank).fill(0),i=t.shape.slice();i[e]=1;const o=new Array(n);for(let n=0;n<o.length;n++)a[e]=n,o[n]=this.slice(t,a,i).reshape(s);return o}avgPool3d(t,e){const n=new Jc(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const s=new Ju(n);return this.compileAndRun(s,[t],e.dtype)}maxPool3d(t,e){const n=new Jc(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,s){const r=new Jc(s,"max",!0),a=this.compileAndRun(r,[e]),i=new Vc(s),o=this.compileAndRun(i,[t,a],e.dtype);return a.dispose(),o}resizeBilinear(t,e,n,s){const a=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nh(t.shape,e,n,s):new eh(t.shape,e,n,s);return this.compileAndRun(a,[t],"float32")}resizeBilinearBackprop(t,e,n){const s=new th(t,e,n);return this.compileAndRun(s,[t])}resizeNearestNeighbor(t,e,n,s){const r=new rh(t.shape,e,n,s);return this.compileAndRun(r,[t])}resizeNearestNeighborBackprop(t,e,n){const s=new sh(t,e,n);return this.compileAndRun(s,[t])}multinomial(t,e,n,s){const a=e?t:(0,r.XAC)(t),i=a.shape[0],o=a.shape[1],l=new Hc(i,o,n),u=l.getCustomSetupFunc(s);return this.compileAndRun(l,[a],"int32",u)}oneHot(t,e,n,s){const r=new jc(t.size,e,n,s);return this.compileAndRun(r,[t])}diag(t){const e=new kc(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,s,r,a){const i=new mc(t.shape,e.shape,s,r,a);return this.compileAndRun(i,[t,e,n],"float32")}depthToSpace(t,e,n){r.D5U.hu(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const s=t.shape[0],a="NHWC"===n?t.shape[1]:t.shape[2],i="NHWC"===n?t.shape[2]:t.shape[3],o="NHWC"===n?t.shape[3]:t.shape[1],l=a*e,u=i*e,c=o/(e*e),h=new vc("NHWC"===n?[s,l,u,c]:[s,c,l,u],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return Lh(t,e,n)}scatterND(t,e,n){const{sliceRank:s,numUpdates:a,sliceSize:i,strides:o,outputSize:l}=r.Wap.calculateShapes(e,t,n),u=[l/i,i],c=t.reshape([a,s]),h=e.reshape([a,i]);if(0===l)return r.Wap.reshapeTensor((0,r.XeE)([]),n);const d=(0,r.iD$)(0),p=new oh(a,s,c.rank,h.rank,o,u);return this.compileAndRun(p,[h,c,d]).reshape(n)}sparseToDense(t,e,n,s){const{sliceRank:a,numUpdates:i,strides:o,outputSize:l}=r.Wap.calculateShapes(e,t,n),u=new oh(i,a,t.rank,e.rank,o,[l,1],!1);return this.compileAndRun(u,[e,t,s]).reshape(n)}gatherND(t,e){const n=e.shape,s=n[n.length-1],[a,i,o,l]=r.Wap.prepareAndValidate(t,e),u=e.reshape([i,s]),c=t.reshape([t.size/o,o]),h=new Rc(s,l,[i,o]);return this.compileAndRun(h,[c,u]).reshape(a)}fill(t,e,n){if("string"===(n=n||r.D5U.D2(e))){const s=r.D5U.rQ(n,r.D5U.NA(t));return s.fill(e),(0,r.SRH)().makeTensor(s,t,n,this)}{const s=new Nc(t,e),r=s.getCustomSetupFunc(e);return this.compileAndRun(s,[],n,r)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return r.Wap.linspaceImpl(t,e,n)}makeTensorInfo(t,e,n){const s=this.write(n,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:s}=this.makeTensorInfo(t,e,n);return(0,r.SRH)().makeTensorFromDataId(s,t,e,this)}unpackTensor(t){const e=new Mh(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new qc(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[eu(t.shape),...nu(t.shape)],s={dtype:t.dtype,shape:n,dataId:t.dataId},r=[eu(e),...nu(e)],a=new Zc(r,n),i=this.runWebGLProgram(a,[s],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:s,dtype:r}=e,a=su(s);let i;return i=n?new wc(a):new xc(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:t}],r,null,!0).dataId}}runWebGLProgram(t,e,n,s,a=!1){const i=this.makeTensorInfo(t.outputShape,n),o=this.texData.get(i.dataId);if(t.packedOutput&&(o.isPacked=!0),t.outPackingScheme===Bl.DENSE){const e=Ul(t.outputShape);o.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(o.usage=t.outTexUsage),0===r.D5U.NA(i.shape))return o.values=r.D5U.WP(i.dtype,0),i;const l=[],u=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&r.D5U.NA(e.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),l.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!au(n.shape,e.shape)){const t=e,s=e.shape;e.shape=n.shape,e=this.packedReshape(e,s),l.push(e),n=this.texData.get(e.dataId),t.shape=s}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(t,e,n){let s="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${n}_${e}`}));const r=t.userCode;let a=t.constructor.name;return a+="_"+s+"_"+r,a}(t,u,c),d=this.getAndSaveBinary(h,(()=>function(t,e,n,s){const a=e.userCode,i=n.map(((t,n)=>{const s={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(s.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:s}})),o=i.map((t=>t.shapeInfo)),l={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=Bu(i,l,a,e.packedInputs),c=t.createProgram(u);let h=null;const d=t.getUniformLocation(c,"NAN",!1);1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(c,"INFINITY",!1));const p={};for(let n=0;n<e.variableNames.length;n++){const s=e.variableNames[n],r=!1;p[s]=t.getUniformLocation(c,s,r),p[`offset${s}`]=t.getUniformLocation(c,`offset${s}`,r)}return{program:e,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:o,outShapeInfo:l,infLoc:h,nanLoc:d}}(this.gpgpu,t,u,c))),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,s,a){Bc(e.inShapeInfos,n),Bc([e.outShapeInfo],[s]);const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?t.setOutputPackedMatrixTexture(i,o[0],o[1]):t.setOutputMatrixTexture(i,o[0],o[1]),t.setProgram(e.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,s)=>{const a=e.program.variableNames[s],i=e.uniformLocations[a],o=e.uniformLocations[`offset${a}`];if(null!=i)if(n.isUniform)if(r.D5U.NA(n.shape)<2)t.gl.uniform1f(i,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(i,e)}else null!=n.texData.slice&&null!=o&&t.gl.uniform1i(o,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,i,s)})),null!=a&&a(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,d,u,c,s),l.forEach((t=>this.disposeIntermediateTensorInfo(t))),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const t=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),t}return i}compileAndRun(t,e,n,s,a=!1){n=n||e[0].dtype;const i=this.runWebGLProgram(t,e,n,s,a);return(0,r.SRH)().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,r.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const e=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=e;if(null!=i)return;const u=null!=this.activeTimers;let c;u&&(c=r.D5U.zO());let h=e.texShape;if(null==h&&(h=function(t,e=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?r.D5U.nY(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=r.D5U.bp(t);t=e.newShape}let s=r.D5U.NA(t);if(t.length<=1&&s<=n)return[1,s];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=eu(t);let n=2,a=2;return t.length&&([n,a]=nu(t)),s=e*(n/2)*(a/2),r.D5U.YP(s).map((t=>2*t))}return r.D5U.YP(s)}(n,l),e.texShape=h),null!=a){const t=su(n);let i,o=h[1],d=h[0];const p=a instanceof Uint8Array;l?([o,d]=Pl(h[0],h[1]),i=new Sc(t,[d,o],p)):i=new $c(t,[d,o],p);const f=this.makeTensorInfo([d,o],s);this.texData.get(f.dataId).usage=p?Ll.PIXELS:Ll.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,a);const m=!0,g=this.runWebGLProgram(i,[f],s,null,m),b=this.texData.get(g.dataId);e.texture=b.texture,e.texShape=b.texShape,e.isPacked=b.isPacked,e.usage=b.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(g.dataId),e.values=null,u&&(this.uploadWaitMs+=r.D5U.zO()-c)}else{const t=this.acquireTexture(h,o,s,l);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:s}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,s)),n.values}acquireTexture(t,e,n,s){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*r.D5U.bT(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if((0,r.OBj)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function Hh(t){const{inputs:e,backend:n}=t,{x:s}=e;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}r.C2$.j()&&(0,r.jqO)("webgl",(()=>new Gh),2);const jh={kernelName:r.iJz,backendName:"webgl",kernelFunc:Hh};function qh(t){const{inputs:e,backend:n}=t,{real:s,imag:r}=e,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=Hh({inputs:{x:s},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const l=Hh({inputs:{x:r},backend:n});return n.texData.get(l.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:l},a}const Kh={kernelName:r.Zz9,backendName:"webgl",kernelFunc:qh};function Xh(t){return({inputs:e,backend:n})=>{const{x:s}=e,r=n,a=new xh(s.shape,t);return r.runWebGLProgram(a,[s],s.dtype)}}function Yh({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:l})=>{const{a:u,b:c}=o,h=l;if(s&&"complex64"===u.dtype){const e=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[s,a]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,s]=e,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new Zu(t,u.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,r.x8V)(n.dtype,s.dtype))})),i=qh({inputs:{real:s,imag:a},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(a),i}const d=i||(0,r.x8V)(u.dtype,c.dtype);if(h.shouldExecuteOnCPU([u,c])&&null!=a){const t=h.texData.get(u.dataId),e=h.texData.get(c.dataId),[n,s]=a(u.shape,c.shape,t.values,e.values,d),r=h.makeTensorInfo(s,d);return h.texData.get(r.dataId).values=n,r}let p;return p=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new ec(e,u.shape,c.shape,n):new Zu(t,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}const Jh="return a + b;",Qh=Yh({opSnippet:Jh,packedOpSnippet:Jh,supportsComplex:!0,cpuKernelImpl:fu}),Zh={kernelName:r.mm_,backendName:"webgl",kernelFunc:Qh},td=Yh({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ed={kernelName:r.QCc,backendName:"webgl",kernelFunc:td},nd={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;hu(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.cO(c.inShape,c.outShape))return Hh({inputs:{x:a},backend:n});const h=new Yc(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},sd={kernelName:r.xts,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:i}=e,o=i;hu([a,i],"avgPoolBackprop");const{filterSize:l,strides:u,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,l,u,1,c),d=new Yu(h);return n.runWebGLProgram(d,[a],o.dtype)}};class rd{constructor(t,e,n,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let o="0.0";null!=s&&(r.Wap.assertAndGetBroadcastShape(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=a&&(r.Wap.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ad{constructor(t,e,n,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let o="vec4(0.0)";null!=s&&(r.Wap.assertAndGetBroadcastShape(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(r.Wap.assertAndGetBroadcastShape(t,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const id={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:l}=t;r.D5U.hu(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new ad(s.shape,a.shape,i.shape,h,d,u):new rd(s.shape,a.shape,i.shape,h,d,u);return e.runWebGLProgram(p,c,c[0].dtype)}},od=Yh({opSnippet:"return float(a != b);",dtype:"bool"}),ld={kernelName:r.yQU,backendName:"webgl",kernelFunc:od};function ud(t){const{inputs:e,backend:n}=t,{input:s}=e;return Hh({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const cd={kernelName:r.xJR,backendName:"webgl",kernelFunc:ud},hd={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:s,attrs:a}=e,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return Hh({inputs:{x:i},backend:s});const e=r.lls(i.shape),n=t({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),a=qh({inputs:{real:n,imag:e},backend:s});return e.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const e=ud({inputs:{input:i},backend:s}),n=t({inputs:{x:e},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(e),n}if(!r.D5U.QB(i.dtype,o)){const t=Hh({inputs:{x:i},backend:s});return{dataId:t.dataId,shape:t.shape,dtype:o}}if("int32"===o)return function(t,e){const n=new xh(t.shape,"return float(int(x));"),s=e.runWebGLProgram(n,[t],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===o){const t=s.makeTensorInfo([],"bool",r.D5U.WP("bool",1)),e=od({inputs:{a:i,b:t},backend:s});return s.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}};class dd{constructor(t){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const s=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${s}));`)}const s=e.length,a=e[e.length-1];n.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class pd{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,e);const n=this.outputShape,s=n.length,a=ju(s),i=Du("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map(((t,e)=>`T${e}`));const l=new Array(t.length-1);l[0]=t[0][e];for(let n=1;n<l.length;n++)l[n]=l[n-1]+t[n][e];const u=o[e],c=o.slice(-2),h=o.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let t=1;t<l.length;t++){const e=l[t-1];d+=`\n        if (${u} < ${l[t]}  && ${u} >= ${l[t-1]}) {\n          return getChannel(\n            getT${t}(${fd(o,u,e)}),\n            vec2(${fd(c,u,e)}));\n        }`}const p=l.length,f=l[l.length-1];d+=`\n        return getChannel(\n          getT${p}(${fd(o,u,f)}),\n          vec2(${fd(c,u,f)}));`,this.userCode=`\n      float getValue(${o.map((t=>"int "+t))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function fd(t,e,n){const s=t.indexOf(e);return t.map(((t,e)=>e===s?`${t} - ${n}`:t)).join()}function md(t){const{inputs:e,backend:n}=t,{input:s}=e;return Hh({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const gd={kernelName:r.J_u,backendName:"webgl",kernelFunc:md};function bd(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e,{shape:i}=s,o=n,l=r.D5U.NA(a.shape),u=r.D5U.JZ(i,l),c=r.D5U.NA(u);r.D5U.hu(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||au(a.shape,u)||null!==h.texture&&au(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(t,e,n){const s=[eu(t.shape),...nu(t.shape)],r={dtype:t.dtype,shape:s,dataId:t.dataId},a=[eu(e),...nu(e)],i=new Zc(a,s),o=n.runWebGLProgram(i,[r],t.dtype,null,!0);return{dataId:o.dataId,shape:e,dtype:o.dtype}}(a,u,o)}const yd={kernelName:r.HZH,backendName:"webgl",kernelFunc:bd};function xd(t,e,n){const s=t[0].dtype;if("complex64"===s){const s=t.map((t=>ud({inputs:{input:t},backend:n}))),r=t.map((t=>md({inputs:{input:t},backend:n}))),a=xd(s,e,n),i=xd(r,e,n),o=qh({inputs:{real:a,imag:i},backend:n});return s.forEach((t=>n.disposeIntermediateTensorInfo(t))),r.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if(t.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(t.length/2),r=xd(t.slice(0,s),e,n),a=xd(t.slice(s),e,n),i=xd([r,a],e,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new pd(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,s)}const a=r.Wap.computeOutShape(t.map((t=>t.shape)),e),i=t.map((t=>bd({inputs:{x:t},attrs:{shape:[-1,r.D5U.NA(t.shape.slice(e))]},backend:n}))),o=new dd(i.map((t=>t.shape))),l=n.runWebGLProgram(o,i,s);i.forEach((t=>n.disposeIntermediateTensorInfo(t)));const u=bd({inputs:{x:l},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(l),u}const wd={kernelName:r.Eh3,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{axis:a}=s,i=r.D5U.EC(a,e[0].shape)[0],o=r.Wap.computeOutShape(e.map((t=>t.shape)),i);if(0===r.D5U.NA(o))return n.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===l.length)return l[0];const u=l.map((t=>t.shape));return r.Wap.assertParamsConsistent(u,i),xd(l,i,n)}},vd=Xh("if (isnan(x)) return x;\n  return cos(x);\n"),kd={kernelName:r.mc4,backendName:"webgl",kernelFunc:vd},Id=Yh({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Cd={kernelName:r.ZCY,backendName:"webgl",kernelFunc:Id};class $d{constructor(t,e,n){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===t)i="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Sd(t,e,n){const s=n.texData.get(t.dataId),a=r.D5U.NA(t.shape),i=t.shape[t.shape.length-1],o=bd({inputs:{x:t},backend:n,attrs:{shape:[a/i,i]}}).shape,l=new $d("real",o,e),u=new $d("imag",o,e),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=qh({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=bd({inputs:{x:p},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const Nd={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return Sd(s,!1,n)}};class Ed{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Rd={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,s=e,r=new Ed(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}};class Ad{constructor(t){this.variableNames=["A"];const e=Tu(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Dd{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Tu(),[n,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Td={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t;let{pixels:a}=e;const{numChannels:i}=s,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[c,u],d=[c,u,i];(l||o)&&(null==Fd&&(Fd=document.createElement("canvas").getContext("2d")),Fd.canvas.width=u,Fd.canvas.height=c,Fd.drawImage(a,0,0,u,c),a=Fd.canvas);const p=n.makeTensorInfo(h,"int32");n.texData.get(p.dataId).usage=Ll.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const f=(0,r.OBj)().getBool("WEBGL_PACK")?new Dd(d):new Ad(d),m=n.runWebGLProgram(f,[p],"int32");return n.disposeData(p.dataId),m}};let Fd;const Od={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:s}=e;return Sd(s,!0,n)}};class _d{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u=`sumValue += dot(values * ${r.D5U.GN(t)?t.toPrecision(2):t}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}function Md(t,e,n,s){const a=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],s=r.Wap.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return e}(t.shape);let i=t;for(let r=0;r<a.length;r++){const{inSize:o,windowSize:l,outSize:u}=a[r];let c,h;c="mean"===n?0===r?new _d({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},o):new _d({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u}):new Qc({windowSize:l,inSize:o,batchSize:t.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],e),h.dataId!==t.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class Bd{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];this.outputShape=n,this.rank=n.length;const s=ju(this.rank),r=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let e=0;e<t.length;e++)s[t[e]]=n[e];return s.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class Ld{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let s=0;s<n.length;s++)n[s]=t[e[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=ju(this.rank),r=Au("rc",this.rank),a=new Array(this.rank);for(let t=0;t<e.length;t++)a[e[t]]=r[t];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function zd(t,e,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ld(t.shape,e):new Bd(t.shape,e);return n.runWebGLProgram(s,[t],t.dtype)}const Wd={kernelName:r.YoZ,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{reductionIndices:a,keepDims:i}=e,o=n,l=s.shape.length,u=r.D5U.EC(a,s.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l),d=null!=h,p=o.shouldExecuteOnCPU([s]);let f=s;if(d){if(p){const t=o.texData.get(f.dataId).values,e=new Array(l);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const n=$u(t,s.shape,s.dtype,h,e);f=o.makeTensorInfo(e,s.dtype),o.texData.get(f.dataId).values=n}else f=zd(s,h,o);c=r.Wap.getInnerMostAxes(c.length,l)}r.Wap.assertAxesAreInnerMostDims("max",c,l);const[m,g]=r.Wap.computeOutAndReduceShapes(f.shape,c);let b,y=m;if(i&&(y=r.Wap.expandShapeToKeepDim(m,u)),p){const t=o.texData.get(f.dataId).values,e=wu(t,r.D5U.NA(g),y,s.dtype);b=o.makeTensorInfo(y,s.dtype),o.texData.get(b.dataId).values=e}else b=function(t,e,n,s){const a=r.D5U.NA(e),i=bd({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/a,a]},backend:s}),o=Md(i,t.dtype,"max",s),l=bd({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(f,g,y,o);return d&&o.disposeIntermediateTensorInfo(f),b}},Ud={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{x:a}=e;hu(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.cO(c.inShape,c.outShape))return Hh({inputs:{x:a},backend:n});const h=new Yc(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},Pd={kernelName:r.GvW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:s}=t,{dy:a,input:i,output:o}=e,l=i;hu([i,o],"maxPoolBackprop");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=s,p=r.Wap.computePool2DInfo(l.shape,u,c,1,h,d),f=new Yc(p,"max",!0),m=n.runWebGLProgram(f,[l],l.dtype),g=new Pc(p),b=n.runWebGLProgram(g,[a,m],l.dtype);return n.disposeIntermediateTensorInfo(m),b}},Vd={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=e,u=n;r.D5U.hu(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=r.Wap.computePool2DInfo(s.shape,a,i,c,o),[d,p]=function(t,e,n,s){let r=new Yc(n,"max",!1);const a=s.runWebGLProgram(r,[t],"float32");return r=new Yc(n,"max",!0,!0,e),[a,s.runWebGLProgram(r,[t],"float32")]}(s,l,h,u);return[d,p]}},Gd={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{keepDims:a,axis:i}=e,o=n,l=s.shape.length,u=r.D5U.EC(i,s.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l),d=null!=h,p=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(d){if(p){const t=o.texData.get(m.dataId).values,e=new Array(l);for(let t=0;t<e.length;t++)e[t]=s.shape[h[t]];const n=$u(t,s.shape,s.dtype,h,e);m=o.makeTensorInfo(e,s.dtype),o.texData.get(m.dataId).values=n}else m=zd(s,h,o);f.push(m),c=r.Wap.getInnerMostAxes(c.length,l)}r.Wap.assertAxesAreInnerMostDims("sum",c,l);const[g,b]=r.Wap.computeOutAndReduceShapes(m.shape,c);let y=g;a&&(y=r.Wap.expandShapeToKeepDim(g,u));const x=function(t,e,n,s){const a=r.D5U.NA(e),i=bd({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/a,a]},backend:s}),o=Md(i,"float32","mean",s),l=bd({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(m,b,y,o);for(const t of f)o.disposeIntermediateTensorInfo(t);return x}};class Hd{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=ju(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class jd{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const s=t.length,r=ju(s),a=e.map((t=>t[0])).join(","),i=e.map(((e,n)=>e[0]+t[n])).join(","),o=Du("rc",s),l=Du("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const t=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const t=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${t}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${t}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const qd={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:s}=t,{paddings:a,mode:i}=n,o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jd(s.shape,a,i):new Hd(s.shape,a,i);return e.runWebGLProgram(o,[s],s.dtype)}};class Kd{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Xd="return a * b;",Yd={kernelName:r.wYn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:s,b:a}=e,i=r.Wap.upcastType(s.dtype,a.dtype);if("complex64"===s.dtype){const t=n.texData.get(s.dataId),e=n.texData.get(a.dataId),r=new Kd("return areal * breal - aimag * bimag;",s.shape,a.shape),i=new Kd("return areal * bimag + aimag * breal;",s.shape,a.shape),o=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=qh({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,a])){const t=n.texData.get(s.dataId),e=n.texData.get(a.dataId),[r,o]=vu(s.shape,a.shape,t.values,e.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=r,l}let o;return o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ec(Xd,s.shape,a.shape):new Zu(Xd,s.shape,a.shape),n.runWebGLProgram(o,[s,a],i)}},Jd={kernelName:r.uv1,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=e,c=u.readSync(s.dataId),h=u.readSync(a.dataId),d=i,p=o,f=l;return r.GDt.GP(c,h,d,p,f)}},Qd=r.GDt.qP,Zd={kernelName:r.cye,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n,c=e,h=c.readSync(s.dataId),d=c.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=Qd(h,d,i,o,l,u);return[p,f]}},tp=r.GDt.pA,ep={kernelName:r.W0H,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,c=e,h=c.readSync(s.dataId),d=c.readSync(a.dataId),p=i,f=o,m=l,g=u,{selectedIndices:b,selectedScores:y}=tp(h,d,p,f,m,g);return[b,y]}};class np{constructor(t,e,n,s){this.variableNames=["Image"],this.outputShape=[];const a=t[1],i=t[2],o=Math.sin(e).toFixed(3),l=Math.cos(e).toFixed(3);this.outputShape=t;const[u,c]=r.Wap.getImageCenter(s,a,i),h=u.toFixed(3),d=c.toFixed(3);let p="";p="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${l} - (float(y) - ${d}) * ${o};\n          float coordYFloat = (float(x) - ${h}) * ${o} + (float(y) - ${d}) * ${l};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${d}));\n          ${p}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${a}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const sp={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:s}=t,{radians:r,fillValue:a,center:i}=e,o=n,l=new np(s.shape,r,a,i);return o.runWebGLProgram(l,[s],s.dtype)}},rp=Xh("if (isnan(x)) return x;\n  return sin(x);\n"),ap={kernelName:r.RQH,backendName:"webgl",kernelFunc:rp},ip=Xh("return x * x;"),op={kernelName:r.bK0,backendName:"webgl",kernelFunc:ip},lp="return (a - b) * (a - b);",up=Yh({opSnippet:lp,packedOpSnippet:lp}),cp={kernelName:r._tC,backendName:"webgl",kernelFunc:up},hp="return a - b;",dp=Yh({opSnippet:hp,packedOpSnippet:hp,supportsComplex:!0,cpuKernelImpl:Cu}),pp={kernelName:r.Tr8,backendName:"webgl",kernelFunc:dp},fp=Xh("return tan(x);"),mp=[Zh,ed,nd,sd,id,hd,Kh,wd,kd,Cd,Nd,Rd,Td,jh,Od,gd,Wd,Ud,Pd,Vd,Gd,qd,Yd,Jd,Zd,ep,ld,cd,yd,sp,ap,op,pp,cp,{kernelName:r.sEM,backendName:"webgl",kernelFunc:fp},{kernelName:r.G3Y,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:s}=t,{perm:r}=e,a=n,i=s.shape.length,o=new Array(i);for(let t=0;t<o.length;t++)o[t]=s.shape[r[t]];let l;if(a.shouldExecuteOnCPU([s])){const t=a.texData.get(s.dataId).values,e=$u(t,s.shape,s.dtype,r,o);l=a.makeTensorInfo(o,s.dtype),a.texData.get(l.dataId).values=e}else l=zd(s,r,a);return l}},{kernelName:r.kpP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:s}=t,{axis:r}=n,{x:a}=e;hu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=Su(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}}];for(const t of mp)(0,r.wCN)(t);r.jTM,Cr.gJ},377:(t,e,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,t.exports=u},832:function(t,e,n){var s;!function(t,r,a){function i(t){var e,n=this,s=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var s=.02519603282416938*(e+=t.charCodeAt(n));s-=e=s>>>0,e=(s*=e)>>>0,e+=4294967296*(s-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(t),n.s0<0&&(n.s0+=1),n.s1-=s(t),n.s1<0&&(n.s1+=1),n.s2-=s(t),n.s2<0&&(n.s2+=1),s=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function l(t,e){var n=new i(t),s=e&&e.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.alea=l}(0,t=n.nmd(t),n.amdD)},49:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,s=e.d,r=e.a;return t=t<<25^t>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-s|0,e.d=s<<16^n>>>16^r,e.a=r-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var s=0;s<n.length+20;s++)e.b^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.tychei=l}(0,t=n.nmd(t),n.amdD)},652:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor128=l}(0,t=n.nmd(t),n.amdD)},618:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.w,r=e.X,a=e.i;return e.w=s=s+1640531527|0,n=r[a+34&127],t=r[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=r[a]=n^t,e.i=a,n+(s^s>>>16)|0},function(t,e){var n,s,r,a,i,o=[],l=128;for(e===(0|e)?(s=e,e=null):(e+="\0",s=0,l=Math.max(l,e.length)),r=0,a=-32;a<l;++a)e&&(s^=e.charCodeAt((a+32)%e.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(e&&e.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;t.w=i,t.X=o,t.i=r}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xor4096=l}(0,t=n.nmd(t),n.amdD)},30:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this;e.next=function(){var t,n,s=e.x,r=e.i;return t=s[r],n=(t^=t>>>7)^t<<24,n^=(t=s[r+1&7])^t>>>10,n^=(t=s[r+3&7])^t>>>3,n^=(t=s[r+4&7])^t<<7,t=s[r+7&7],n^=(t^=t<<13)^t<<9,s[r]=n,e.i=r+1&7,n},function(t,e){var n,s=[];if(e===(0|e))s[0]=e;else for(e=""+e,n=0;n<e.length;++n)s[7&n]=s[7&n]<<15^e.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],t.x=s,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function l(t,e){null==t&&(t=+new Date);var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorshift7=l}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var s;!function(t,r,a){function i(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var s=0;s<n.length+64;s++)e.x^=0|n.charCodeAt(s),s==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function l(t,e){var n=new i(t),s=e&&e.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(e,n,e,r))||(r.exports=s):this.xorwow=l}(0,t=n.nmd(t),n.amdD)},971:(t,e,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(t,e,n){var s=[],d=b(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,y(r)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(l):(t=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(t)),y(t)}catch(t){var e=o.navigator,n=e&&e.plugins;return[+new Date,o,n,o.screen,y(r)]}}():t,3),s),p=new f(s),x=function(){for(var t=p.g(6),e=u,n=0;t<c;)t=(t+n)*l,e*=l,n=p.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),r),(e.pass||n||function(t,e,n,s){return s&&(s.S&&m(s,p),t.state=function(){return m(p,{})}),n?(a.random=t,e):t})(x,d,"global"in e?e.global:this==a,e.state)}function f(t){var e,n=t.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(t=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=d&a+t[r%n]+(e=i[r])],i[a]=e;(s.g=function(t){for(var e,n=0,r=s.i,a=s.j,i=s.S;t--;)e=i[r=d&r+1],n=n*l+i[d&(i[r]=i[a=d&a+e])+(i[a]=e)];return s.i=r,s.j=a,n})(l)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,s=[],r=typeof t;if(e&&"object"==r)for(n in t)try{s.push(g(t[n],e-1))}catch(t){}return s.length?s:"string"==r?t:t+"\0"}function b(t,e){for(var n,s=t+"",r=0;r<s.length;)e[d&r]=d&(n^=19*e[d&r])+s.charCodeAt(r++);return y(e)}function y(t){return String.fromCharCode.apply(0,t)}if(a.seedrandom=p,b(a.random(),r),t.exports){t.exports=p;try{i=n(906)}catch(t){}}else void 0===(s=function(){return p}.call(e,n,e,t))||(t.exports=s)}([],Math)}}]);